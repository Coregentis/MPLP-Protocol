import ContextSchema from './core-modules/mplp-context.json';
import PlanSchema from './core-modules/mplp-plan.json';
import ConfirmSchema from './core-modules/mplp-confirm.json';
import TraceSchema from './core-modules/mplp-trace.json';
import RoleSchema from './core-modules/mplp-role.json';
import ExtensionSchema from './core-modules/mplp-extension.json';
import CoreSchema from './core-modules/mplp-core.json';
import CollabSchema from './core-modules/mplp-collab.json';
import DialogSchema from './core-modules/mplp-dialog.json';
import NetworkSchema from './core-modules/mplp-network.json';
import SecuritySchema from './cross-cutting-concerns/mplp-security.json';
import PerformanceSchema from './cross-cutting-concerns/mplp-performance.json';
import EventBusSchema from './cross-cutting-concerns/mplp-event-bus.json';
import ErrorHandlingSchema from './cross-cutting-concerns/mplp-error-handling.json';
import CoordinationSchema from './cross-cutting-concerns/mplp-coordination.json';
import OrchestrationSchema from './cross-cutting-concerns/mplp-orchestration.json';
import StateSyncSchema from './cross-cutting-concerns/mplp-state-sync.json';
import TransactionSchema from './cross-cutting-concerns/mplp-transaction.json';
import ProtocolVersionSchema from './cross-cutting-concerns/mplp-protocol-version.json';
export { ContextSchema, PlanSchema, ConfirmSchema, TraceSchema, RoleSchema, ExtensionSchema, CoreSchema, CollabSchema, DialogSchema, NetworkSchema };
export { SecuritySchema, PerformanceSchema, EventBusSchema, ErrorHandlingSchema, CoordinationSchema, OrchestrationSchema, StateSyncSchema, TransactionSchema, ProtocolVersionSchema };
export declare const CoreModulesSchemaMap: {
    readonly context: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            lifecycle_stage: {
                type: string;
                enum: string[];
                description: string;
            };
            shared_state: {
                type: string;
                properties: {
                    variables: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    resources: {
                        type: string;
                        properties: {
                            allocated: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                    properties: {
                                        type: {
                                            type: string;
                                        };
                                        amount: {
                                            type: string;
                                        };
                                        unit: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            requirements: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                    properties: {
                                        minimum: {
                                            type: string;
                                        };
                                        optimal: {
                                            type: string;
                                        };
                                        maximum: {
                                            type: string;
                                        };
                                        unit: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                    dependencies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                name: {
                                    type: string;
                                };
                                version: {
                                    $ref: string;
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    goals: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                description: {
                                    type: string;
                                };
                                priority: {
                                    $ref: string;
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                success_criteria: {
                                    type: string;
                                    items: {
                                        type: string;
                                        properties: {
                                            metric: {
                                                type: string;
                                            };
                                            operator: {
                                                type: string;
                                                enum: string[];
                                            };
                                            value: {
                                                type: string[];
                                            };
                                            unit: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            access_control: {
                type: string;
                properties: {
                    owner: {
                        type: string;
                        properties: {
                            user_id: {
                                type: string;
                            };
                            role: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    permissions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                principal: {
                                    type: string;
                                };
                                principal_type: {
                                    type: string;
                                    enum: string[];
                                };
                                resource: {
                                    type: string;
                                };
                                actions: {
                                    type: string;
                                    items: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                conditions: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                        };
                    };
                    policies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                rules: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                enforcement: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            configuration: {
                type: string;
                properties: {
                    timeout_settings: {
                        type: string;
                        properties: {
                            default_timeout: {
                                type: string;
                                minimum: number;
                            };
                            max_timeout: {
                                type: string;
                                minimum: number;
                            };
                            cleanup_timeout: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                    notification_settings: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            events: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                    persistence: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            storage_backend: {
                                type: string;
                                enum: string[];
                            };
                            retention_policy: {
                                type: string;
                                properties: {
                                    duration: {
                                        type: string;
                                    };
                                    max_versions: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                required: string[];
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                context_operation: {
                                    type: string;
                                };
                                context_id: {
                                    $ref: string;
                                };
                                context_name: {
                                    type: string;
                                };
                                lifecycle_stage: {
                                    type: string;
                                };
                                shared_state_keys: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                access_level: {
                                    type: string;
                                };
                                context_details: {
                                    type: string;
                                };
                                old_value: {
                                    type: string;
                                };
                                new_value: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            context_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            context_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            context_state_api: {
                                type: string;
                                format: string;
                            };
                            cache_metrics_api: {
                                type: string;
                                format: string;
                            };
                            sync_metrics_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    context_metrics: {
                        type: string;
                        properties: {
                            track_state_changes: {
                                type: string;
                            };
                            track_cache_performance: {
                                type: string;
                            };
                            track_sync_operations: {
                                type: string;
                            };
                            track_access_patterns: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            context_access_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            context_update_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            cache_hit_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            context_sync_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            context_state_consistency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_contexts_count: {
                                type: string;
                                minimum: number;
                            };
                            context_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            context_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_context_size_bytes: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_context_access_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_context_update_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_cache_hit_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_context_sync_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_context_state_consistency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                context_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_state_change: {
                                type: string;
                            };
                            version_on_cache_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    context_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_context_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_contexts: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            caching_policy: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    cache_strategy: {
                        type: string;
                        enum: string[];
                    };
                    cache_levels: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                level: {
                                    type: string;
                                };
                                backend: {
                                    type: string;
                                    enum: string[];
                                };
                                ttl_seconds: {
                                    type: string;
                                    minimum: number;
                                };
                                max_size_mb: {
                                    type: string;
                                    minimum: number;
                                };
                                eviction_policy: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    cache_warming: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            strategies: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            sync_configuration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    sync_strategy: {
                        type: string;
                        enum: string[];
                    };
                    sync_targets: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                target_id: {
                                    type: string;
                                };
                                target_type: {
                                    type: string;
                                    enum: string[];
                                };
                                sync_frequency: {
                                    type: string;
                                };
                                conflict_resolution: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    replication: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            replication_factor: {
                                type: string;
                                minimum: number;
                            };
                            consistency_level: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            error_handling: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    error_policies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                error_type: {
                                    type: string;
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                retry_config: {
                                    type: string;
                                    properties: {
                                        max_attempts: {
                                            type: string;
                                            minimum: number;
                                        };
                                        backoff_strategy: {
                                            type: string;
                                            enum: string[];
                                        };
                                        base_delay_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    circuit_breaker: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            failure_threshold: {
                                type: string;
                                minimum: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            reset_timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    recovery_strategy: {
                        type: string;
                        properties: {
                            auto_recovery: {
                                type: string;
                            };
                            backup_sources: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            rollback_enabled: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            integration_endpoints: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    webhooks: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                webhook_id: {
                                    $ref: string;
                                };
                                url: {
                                    type: string;
                                    format: string;
                                };
                                events: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                authentication: {
                                    type: string;
                                    properties: {
                                        type: {
                                            type: string;
                                            enum: string[];
                                        };
                                        credentials: {
                                            type: string;
                                        };
                                    };
                                };
                                retry_policy: {
                                    type: string;
                                    properties: {
                                        max_attempts: {
                                            type: string;
                                        };
                                        backoff_ms: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    api_endpoints: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                endpoint_id: {
                                    type: string;
                                };
                                path: {
                                    type: string;
                                };
                                method: {
                                    type: string;
                                    enum: string[];
                                };
                                authentication_required: {
                                    type: string;
                                };
                                rate_limit: {
                                    type: string;
                                    properties: {
                                        requests_per_minute: {
                                            type: string;
                                        };
                                        burst_limit: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            context_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            context_details: {
                type: string;
                properties: {
                    context_scope: {
                        type: string;
                        enum: string[];
                    };
                    persistence_level: {
                        type: string;
                        enum: string[];
                    };
                    sharing_policy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
        examples: {
            protocol_version: string;
            timestamp: string;
            context_id: string;
            name: string;
            description: string;
            status: string;
            lifecycle_stage: string;
            shared_state: {
                variables: {
                    environment: string;
                    region: string;
                    feature_flags: {
                        new_ui: boolean;
                        beta_features: boolean;
                    };
                };
                resources: {
                    allocated: {
                        memory: {
                            type: string;
                            amount: number;
                            unit: string;
                            status: string;
                        };
                        cpu: {
                            type: string;
                            amount: number;
                            unit: string;
                            status: string;
                        };
                    };
                    requirements: {
                        storage: {
                            minimum: number;
                            optimal: number;
                            maximum: number;
                            unit: string;
                        };
                    };
                };
                dependencies: {
                    id: string;
                    type: string;
                    name: string;
                    version: string;
                    status: string;
                }[];
                goals: {
                    id: string;
                    name: string;
                    priority: string;
                    status: string;
                    success_criteria: {
                        metric: string;
                        operator: string;
                        value: number;
                        unit: string;
                    }[];
                }[];
            };
            access_control: {
                owner: {
                    user_id: string;
                    role: string;
                };
                permissions: {
                    principal: string;
                    principal_type: string;
                    resource: string;
                    actions: string[];
                }[];
            };
            configuration: {
                timeout_settings: {
                    default_timeout: number;
                    max_timeout: number;
                };
                notification_settings: {
                    enabled: boolean;
                    channels: string[];
                    events: string[];
                };
                persistence: {
                    enabled: boolean;
                    storage_backend: string;
                    retention_policy: {
                        duration: string;
                        max_versions: number;
                    };
                };
            };
        }[];
    };
    readonly plan: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
            failure_resolver: {
                type: string;
                description: string;
                properties: {
                    enabled: {
                        type: string;
                        description: string;
                    };
                    strategies: {
                        type: string;
                        description: string;
                        items: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                    };
                    retry_config: {
                        type: string;
                        description: string;
                        properties: {
                            max_attempts: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            delay_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            backoff_factor: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            max_delay_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    rollback_config: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            checkpoint_frequency: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            max_rollback_depth: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    manual_intervention_config: {
                        type: string;
                        description: string;
                        properties: {
                            timeout_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            escalation_levels: {
                                type: string;
                                items: {
                                    type: string;
                                };
                                description: string;
                            };
                            approval_required: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                    notification_channels: {
                        type: string;
                        items: {
                            type: string;
                        };
                        description: string;
                    };
                    performance_thresholds: {
                        type: string;
                        description: string;
                        properties: {
                            max_execution_time_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            max_memory_usage_mb: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            max_cpu_usage_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                        };
                    };
                    diagnostic_integration: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            supported_diagnostic_providers: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                                description: string;
                            };
                            diagnostic_endpoints: {
                                type: string;
                                properties: {
                                    failure_analysis_api: {
                                        type: string;
                                        format: string;
                                    };
                                    pattern_detection_api: {
                                        type: string;
                                        format: string;
                                    };
                                    recommendation_api: {
                                        type: string;
                                        format: string;
                                    };
                                };
                            };
                            request_format: {
                                type: string;
                                properties: {
                                    input_schema: {
                                        type: string;
                                    };
                                    output_schema: {
                                        type: string;
                                    };
                                    timeout_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                    vendor_integration: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            sync_frequency_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            data_retention_days: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            sync_detailed_diagnostics: {
                                type: string;
                                description: string;
                            };
                            receive_suggestions: {
                                type: string;
                                description: string;
                            };
                            auto_apply_suggestions: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                    proactive_prevention: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            prediction_confidence_threshold: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            auto_prevention_enabled: {
                                type: string;
                                description: string;
                            };
                            prevention_strategies: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                                description: string;
                            };
                            monitoring_interval_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    learning_integration: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            supported_learning_providers: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                                description: string;
                            };
                            learning_endpoints: {
                                type: string;
                                properties: {
                                    feedback_collection_api: {
                                        type: string;
                                        format: string;
                                    };
                                    pattern_learning_api: {
                                        type: string;
                                        format: string;
                                    };
                                    strategy_optimization_api: {
                                        type: string;
                                        format: string;
                                    };
                                };
                            };
                            data_sharing: {
                                type: string;
                                properties: {
                                    anonymization_enabled: {
                                        type: string;
                                    };
                                    data_retention_days: {
                                        type: string;
                                        minimum: number;
                                    };
                                    sharing_scope: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                    external_integrations: {
                        type: string;
                        description: string;
                        properties: {
                            diagnostic_systems: {
                                type: string;
                                description: string;
                            };
                            prediction_services: {
                                type: string;
                                description: string;
                            };
                            recovery_automation: {
                                type: string;
                                description: string;
                            };
                            optimization_engines: {
                                type: string;
                                description: string;
                            };
                            monitoring_platforms: {
                                type: string;
                                description: string;
                            };
                            recommendation_services: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            recovery_suggestion: {
                type: string;
                description: string;
                minLength: number;
                maxLength: number;
            };
            development_issue: {
                type: string;
                description: string;
                properties: {
                    id: {
                        type: string;
                        description: string;
                        pattern: string;
                        minLength: number;
                        maxLength: number;
                    };
                    type: {
                        type: string;
                        description: string;
                        enum: string[];
                    };
                    severity: {
                        type: string;
                        description: string;
                        enum: string[];
                    };
                    title: {
                        type: string;
                        description: string;
                        minLength: number;
                        maxLength: number;
                    };
                    file_path: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                    line_number: {
                        type: string;
                        description: string;
                        minimum: number;
                    };
                    description: {
                        type: string;
                        description: string;
                        maxLength: number;
                    };
                    suggested_fix: {
                        type: string;
                        description: string;
                        maxLength: number;
                    };
                    detected_at: {
                        $ref: string;
                        description: string;
                    };
                    status: {
                        type: string;
                        description: string;
                        enum: string[];
                    };
                    dependencies: {
                        type: string;
                        description: string;
                        items: {
                            type: string;
                        };
                    };
                    confidence_score: {
                        type: string;
                        description: string;
                        minimum: number;
                        maximum: number;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            plan_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            priority: {
                $ref: string;
                description: string;
            };
            timeline: {
                type: string;
                properties: {
                    start_date: {
                        $ref: string;
                    };
                    end_date: {
                        $ref: string;
                    };
                    estimated_duration: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    actual_duration: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                required: string[];
            };
            tasks: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        task_id: {
                            $ref: string;
                        };
                        name: {
                            type: string;
                            minLength: number;
                            maxLength: number;
                        };
                        description: {
                            type: string;
                            maxLength: number;
                        };
                        type: {
                            type: string;
                            enum: string[];
                        };
                        status: {
                            type: string;
                            enum: string[];
                        };
                        priority: {
                            $ref: string;
                        };
                        assignee: {
                            type: string;
                            properties: {
                                user_id: {
                                    type: string;
                                };
                                role: {
                                    type: string;
                                };
                                team: {
                                    type: string;
                                };
                            };
                        };
                        estimated_effort: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        actual_effort: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        resources_required: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    resource_type: {
                                        type: string;
                                    };
                                    amount: {
                                        type: string;
                                        minimum: number;
                                    };
                                    unit: {
                                        type: string;
                                    };
                                    availability: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        acceptance_criteria: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    id: {
                                        $ref: string;
                                    };
                                    description: {
                                        type: string;
                                    };
                                    type: {
                                        type: string;
                                        enum: string[];
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    verification_method: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        sub_tasks: {
                            type: string;
                            items: {
                                $ref: string;
                            };
                        };
                        metadata: {
                            type: string;
                            properties: {
                                tags: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                category: {
                                    type: string;
                                };
                                source: {
                                    type: string;
                                };
                                complexity_score: {
                                    type: string;
                                    minimum: number;
                                };
                                risk_level: {
                                    type: string;
                                };
                                automation_level: {
                                    type: string;
                                };
                                retry_count: {
                                    type: string;
                                    minimum: number;
                                };
                                max_retry_count: {
                                    type: string;
                                    minimum: number;
                                };
                                intervention_required: {
                                    type: string;
                                };
                                intervention_reason: {
                                    type: string;
                                };
                                intervention_requested_at: {
                                    $ref: string;
                                };
                                rollback_reason: {
                                    type: string;
                                };
                                rollback_target: {
                                    $ref: string;
                                };
                                skip_reason: {
                                    type: string;
                                };
                                skip_dependents: {
                                    type: string;
                                };
                                recovery_suggestions: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                    description: string;
                                    maxItems: number;
                                    uniqueItems: boolean;
                                };
                                development_issues: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                    description: string;
                                    maxItems: number;
                                    uniqueItems: boolean;
                                };
                            };
                        };
                        started_at: {
                            $ref: string;
                        };
                        completed_at: {
                            $ref: string;
                        };
                        progress_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        actual_duration_minutes: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        error_message: {
                            type: string;
                            description: string;
                        };
                        result_data: {
                            type: string;
                            description: string;
                            additionalProperties: boolean;
                        };
                    };
                    required: string[];
                };
            };
            dependencies: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        id: {
                            $ref: string;
                        };
                        source_task_id: {
                            $ref: string;
                        };
                        target_task_id: {
                            $ref: string;
                        };
                        dependency_type: {
                            type: string;
                            enum: string[];
                        };
                        lag: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        criticality: {
                            type: string;
                            enum: string[];
                        };
                        condition: {
                            type: string;
                            description: string;
                        };
                    };
                    required: string[];
                };
            };
            milestones: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        id: {
                            $ref: string;
                        };
                        name: {
                            type: string;
                        };
                        description: {
                            type: string;
                        };
                        target_date: {
                            $ref: string;
                        };
                        status: {
                            type: string;
                            enum: string[];
                        };
                        success_criteria: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    metric: {
                                        type: string;
                                    };
                                    target_value: {
                                        type: string[];
                                    };
                                    actual_value: {
                                        type: string[];
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    required: string[];
                };
            };
            optimization: {
                type: string;
                properties: {
                    strategy: {
                        type: string;
                        enum: string[];
                    };
                    constraints: {
                        type: string;
                        properties: {
                            max_duration: {
                                type: string;
                                properties: {
                                    value: {
                                        type: string;
                                        minimum: number;
                                    };
                                    unit: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                            max_cost: {
                                type: string;
                                minimum: number;
                            };
                            min_quality: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            available_resources: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                    };
                    parameters: {
                        type: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
            risk_assessment: {
                type: string;
                properties: {
                    overall_risk_level: {
                        type: string;
                        enum: string[];
                    };
                    risks: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                description: {
                                    type: string;
                                };
                                level: {
                                    type: string;
                                    enum: string[];
                                };
                                category: {
                                    type: string;
                                    enum: string[];
                                };
                                probability: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                impact: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                mitigation_plan: {
                                    type: string;
                                };
                                contingency_plan: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            failure_resolver: {
                $ref: string;
                description: string;
            };
            configuration: {
                type: string;
                properties: {
                    auto_scheduling_enabled: {
                        type: string;
                    };
                    dependency_validation_enabled: {
                        type: string;
                    };
                    risk_monitoring_enabled: {
                        type: string;
                    };
                    failure_recovery_enabled: {
                        type: string;
                    };
                    performance_tracking_enabled: {
                        type: string;
                    };
                    notification_settings: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            channels: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            events: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            task_completion: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    optimization_settings: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            strategy: {
                                type: string;
                                enum: string[];
                            };
                            auto_reoptimize: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    timeout_settings: {
                        type: string;
                        properties: {
                            default_task_timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            plan_execution_timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            dependency_resolution_timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    parallel_execution_limit: {
                        type: string;
                        minimum: number;
                    };
                };
            };
            metadata: {
                type: string;
                additionalProperties: boolean;
                description: string;
            };
            created_at: {
                $ref: string;
                description: string;
            };
            updated_at: {
                $ref: string;
                description: string;
            };
            created_by: {
                type: string;
                description: string;
            };
            updated_by: {
                type: string;
                description: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                plan_operation: {
                                    type: string;
                                };
                                plan_id: {
                                    $ref: string;
                                };
                                plan_name: {
                                    type: string;
                                };
                                plan_status: {
                                    type: string;
                                };
                                task_ids: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                execution_stage: {
                                    type: string;
                                };
                                plan_details: {
                                    type: string;
                                };
                                old_value: {
                                    type: string;
                                };
                                new_value: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            plan_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            plan_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            plan_execution_api: {
                                type: string;
                                format: string;
                            };
                            task_metrics_api: {
                                type: string;
                                format: string;
                            };
                            resource_metrics_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    plan_metrics: {
                        type: string;
                        properties: {
                            track_execution_progress: {
                                type: string;
                            };
                            track_task_performance: {
                                type: string;
                            };
                            track_resource_usage: {
                                type: string;
                            };
                            track_failure_recovery: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            plan_execution_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            task_completion_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            plan_optimization_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            dependency_resolution_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            plan_execution_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_plans_count: {
                                type: string;
                                minimum: number;
                            };
                            plan_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            plan_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_plan_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_plan_execution_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_task_completion_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_plan_optimization_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_dependency_resolution_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_plan_execution_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                plan_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_task_change: {
                                type: string;
                            };
                            version_on_dependency_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    plan_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_plan_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_plans: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            caching_policy: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    cache_strategy: {
                        type: string;
                        enum: string[];
                    };
                    cache_levels: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                level: {
                                    type: string;
                                };
                                backend: {
                                    type: string;
                                    enum: string[];
                                };
                                ttl_seconds: {
                                    type: string;
                                    minimum: number;
                                };
                                max_size_mb: {
                                    type: string;
                                    minimum: number;
                                };
                                eviction_policy: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    cache_warming: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            strategies: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            plan_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            plan_details: {
                type: string;
                properties: {
                    planning_strategy: {
                        type: string;
                        enum: string[];
                    };
                    execution_mode: {
                        type: string;
                        enum: string[];
                    };
                    rollback_support: {
                        type: string;
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly confirm: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            confirm_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            plan_id: {
                $ref: string;
                description: string;
            };
            confirmation_type: {
                type: string;
                enum: string[];
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            priority: {
                $ref: string;
                description: string;
            };
            requester: {
                type: string;
                properties: {
                    user_id: {
                        type: string;
                    };
                    role: {
                        type: string;
                    };
                    department: {
                        type: string;
                    };
                    request_reason: {
                        type: string;
                        maxLength: number;
                    };
                };
                required: string[];
            };
            approval_workflow: {
                type: string;
                properties: {
                    workflow_type: {
                        type: string;
                        enum: string[];
                    };
                    steps: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                step_id: {
                                    $ref: string;
                                };
                                step_order: {
                                    type: string;
                                    minimum: number;
                                };
                                approver: {
                                    type: string;
                                    properties: {
                                        user_id: {
                                            type: string;
                                        };
                                        role: {
                                            type: string;
                                        };
                                        is_required: {
                                            type: string;
                                        };
                                        delegation_allowed: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                                approval_criteria: {
                                    type: string;
                                    items: {
                                        type: string;
                                        properties: {
                                            criterion: {
                                                type: string;
                                            };
                                            required: {
                                                type: string;
                                            };
                                            weight: {
                                                type: string;
                                                minimum: number;
                                                maximum: number;
                                            };
                                        };
                                        required: string[];
                                    };
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                decision: {
                                    type: string;
                                    properties: {
                                        outcome: {
                                            type: string;
                                            enum: string[];
                                        };
                                        comments: {
                                            type: string;
                                            maxLength: number;
                                        };
                                        conditions: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                        timestamp: {
                                            $ref: string;
                                        };
                                        signature: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                                timeout: {
                                    type: string;
                                    properties: {
                                        duration: {
                                            type: string;
                                            minimum: number;
                                        };
                                        unit: {
                                            type: string;
                                            enum: string[];
                                        };
                                        action_on_timeout: {
                                            type: string;
                                            enum: string[];
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    escalation_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                trigger: {
                                    type: string;
                                    enum: string[];
                                };
                                escalate_to: {
                                    type: string;
                                    properties: {
                                        user_id: {
                                            type: string;
                                        };
                                        role: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                                notification_delay: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            subject: {
                type: string;
                properties: {
                    title: {
                        type: string;
                        maxLength: number;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                    };
                    impact_assessment: {
                        type: string;
                        properties: {
                            scope: {
                                type: string;
                                enum: string[];
                            };
                            affected_systems: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            affected_users: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            business_impact: {
                                type: string;
                                enum: string[];
                            };
                            technical_impact: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    attachments: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                file_id: {
                                    type: string;
                                };
                                filename: {
                                    type: string;
                                };
                                mime_type: {
                                    type: string;
                                };
                                size: {
                                    type: string;
                                    minimum: number;
                                };
                                description: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            risk_assessment: {
                type: string;
                properties: {
                    overall_risk_level: {
                        type: string;
                        enum: string[];
                    };
                    risk_factors: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                factor: {
                                    type: string;
                                };
                                description: {
                                    type: string;
                                };
                                probability: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                impact: {
                                    type: string;
                                    enum: string[];
                                };
                                mitigation: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_requirements: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                regulation: {
                                    type: string;
                                };
                                requirement: {
                                    type: string;
                                };
                                compliance_status: {
                                    type: string;
                                    enum: string[];
                                };
                                evidence: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            notification_settings: {
                type: string;
                properties: {
                    notify_on_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    notification_channels: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    stakeholders: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                user_id: {
                                    type: string;
                                };
                                role: {
                                    type: string;
                                };
                                notification_preference: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                confirm_operation: {
                                    type: string;
                                };
                                confirm_id: {
                                    $ref: string;
                                };
                                confirmation_type: {
                                    type: string;
                                };
                                confirm_status: {
                                    type: string;
                                };
                                approval_step: {
                                    type: string;
                                };
                                decision_reason: {
                                    type: string;
                                };
                                approver_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                confirm_details: {
                                    type: string;
                                };
                                old_value: {
                                    type: string;
                                };
                                new_value: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            confirm_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            confirm_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            approval_metrics_api: {
                                type: string;
                                format: string;
                            };
                            workflow_metrics_api: {
                                type: string;
                                format: string;
                            };
                            compliance_metrics_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    approval_metrics: {
                        type: string;
                        properties: {
                            track_approval_times: {
                                type: string;
                            };
                            track_workflow_performance: {
                                type: string;
                            };
                            track_decision_patterns: {
                                type: string;
                            };
                            track_compliance_metrics: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            confirm_processing_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            approval_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            confirm_workflow_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            decision_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            confirm_compliance_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_confirmations_count: {
                                type: string;
                                minimum: number;
                            };
                            confirm_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            confirm_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_approval_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_confirm_processing_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_approval_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_confirm_workflow_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_decision_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_confirm_compliance_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                confirm_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_workflow_change: {
                                type: string;
                            };
                            version_on_status_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    confirm_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_confirm_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_confirmations: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            ai_integration_interface: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            decision_support_api: {
                                type: string;
                                format: string;
                            };
                            recommendation_api: {
                                type: string;
                                format: string;
                            };
                            risk_assessment_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    request_format: {
                        type: string;
                        properties: {
                            input_schema: {
                                type: string;
                            };
                            output_schema: {
                                type: string;
                            };
                            authentication: {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                        enum: string[];
                                    };
                                    config: {
                                        type: string;
                                    };
                                };
                            };
                        };
                    };
                    response_handling: {
                        type: string;
                        properties: {
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                        minimum: number;
                                    };
                                    backoff_strategy: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                            };
                            fallback_behavior: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            decision_support_interface: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    external_decision_engines: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                engine_id: {
                                    type: string;
                                };
                                engine_name: {
                                    type: string;
                                };
                                engine_type: {
                                    type: string;
                                    enum: string[];
                                };
                                endpoint: {
                                    type: string;
                                    format: string;
                                };
                                priority: {
                                    type: string;
                                    minimum: number;
                                };
                                enabled: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    decision_criteria: {
                        type: string;
                        properties: {
                            supported_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            criteria_weights: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                    };
                    fallback_strategy: {
                        type: string;
                        properties: {
                            when_engines_unavailable: {
                                type: string;
                                enum: string[];
                            };
                            when_engines_disagree: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            confirm_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            confirm_details: {
                type: string;
                properties: {
                    approval_level: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    timeout_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    escalation_policy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly trace: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            trace_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            plan_id: {
                $ref: string;
                description: string;
            };
            task_id: {
                $ref: string;
                description: string;
            };
            trace_type: {
                type: string;
                enum: string[];
                description: string;
            };
            severity: {
                type: string;
                enum: string[];
                description: string;
            };
            event: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    name: {
                        type: string;
                        maxLength: number;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                    };
                    category: {
                        type: string;
                        enum: string[];
                    };
                    source: {
                        type: string;
                        properties: {
                            component: {
                                type: string;
                            };
                            module: {
                                type: string;
                            };
                            function: {
                                type: string;
                            };
                            line_number: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                    data: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
            context_snapshot: {
                type: string;
                properties: {
                    variables: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    environment: {
                        type: string;
                        properties: {
                            os: {
                                type: string;
                            };
                            platform: {
                                type: string;
                            };
                            runtime_version: {
                                type: string;
                            };
                            environment_variables: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                };
                            };
                        };
                    };
                    call_stack: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                function: {
                                    type: string;
                                };
                                file: {
                                    type: string;
                                };
                                line: {
                                    type: string;
                                    minimum: number;
                                };
                                arguments: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                        };
                    };
                };
            };
            error_information: {
                type: string;
                properties: {
                    error_code: {
                        type: string;
                    };
                    error_message: {
                        type: string;
                        maxLength: number;
                    };
                    error_type: {
                        type: string;
                        enum: string[];
                    };
                    stack_trace: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                file: {
                                    type: string;
                                };
                                function: {
                                    type: string;
                                };
                                line: {
                                    type: string;
                                    minimum: number;
                                };
                                column: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                            required: string[];
                        };
                    };
                    recovery_actions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                description: {
                                    type: string;
                                };
                                parameters: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            decision_log: {
                type: string;
                properties: {
                    decision_point: {
                        type: string;
                    };
                    options_considered: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                option: {
                                    type: string;
                                };
                                score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                rationale: {
                                    type: string;
                                };
                                risk_factors: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    selected_option: {
                        type: string;
                    };
                    decision_criteria: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                criterion: {
                                    type: string;
                                };
                                weight: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                evaluation: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    confidence_level: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                };
                required: string[];
            };
            correlations: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        correlation_id: {
                            $ref: string;
                        };
                        type: {
                            type: string;
                            enum: string[];
                        };
                        related_trace_id: {
                            $ref: string;
                        };
                        strength: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        description: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                trace_operation: {
                                    type: string;
                                };
                                trace_id: {
                                    $ref: string;
                                };
                                trace_type: {
                                    type: string;
                                };
                                severity: {
                                    type: string;
                                };
                                span_ids: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                trace_status: {
                                    type: string;
                                };
                                trace_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            trace_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            trace_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            trace_processing_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            span_collection_rate_per_second: {
                                type: string;
                                minimum: number;
                            };
                            trace_analysis_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            distributed_tracing_coverage_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            trace_monitoring_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_traces_count: {
                                type: string;
                                minimum: number;
                            };
                            trace_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            trace_storage_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_trace_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_trace_processing_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_span_collection_rate_per_second: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_trace_analysis_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_distributed_tracing_coverage_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_trace_monitoring_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            tracing_api: {
                                type: string;
                                format: string;
                            };
                            alerting_api: {
                                type: string;
                                format: string;
                            };
                            dashboard_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    sampling_config: {
                        type: string;
                        properties: {
                            sampling_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            adaptive_sampling: {
                                type: string;
                            };
                            max_traces_per_second: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                trace_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_update: {
                                type: string;
                            };
                            version_on_analysis: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_traces: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            trace_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            trace_details: {
                type: string;
                properties: {
                    trace_level: {
                        type: string;
                        enum: string[];
                    };
                    sampling_rate: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly role: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
            agent_type: {
                type: string;
                enum: string[];
                description: string;
            };
            agent_status: {
                type: string;
                enum: string[];
                description: string;
            };
            expertise_level: {
                type: string;
                enum: string[];
                description: string;
            };
            communication_style: {
                type: string;
                enum: string[];
                description: string;
            };
            conflict_resolution_strategy: {
                type: string;
                enum: string[];
                description: string;
            };
            agent: {
                type: string;
                description: string;
                properties: {
                    agent_id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                        minLength: number;
                    };
                    type: {
                        $ref: string;
                    };
                    domain: {
                        type: string;
                        minLength: number;
                    };
                    status: {
                        $ref: string;
                    };
                    capabilities: {
                        $ref: string;
                    };
                    configuration: {
                        $ref: string;
                    };
                    performance_metrics: {
                        $ref: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                    created_by: {
                        type: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            agent_capabilities: {
                type: string;
                description: string;
                properties: {
                    core: {
                        type: string;
                        properties: {
                            critical_thinking: {
                                type: string;
                            };
                            scenario_validation: {
                                type: string;
                            };
                            ddsc_dialog: {
                                type: string;
                            };
                            mplp_protocols: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                    specialist: {
                        type: string;
                        properties: {
                            domain: {
                                type: string;
                            };
                            expertise_level: {
                                $ref: string;
                            };
                            knowledge_areas: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            tools: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                    collaboration: {
                        type: string;
                        properties: {
                            communication_style: {
                                $ref: string;
                            };
                            conflict_resolution: {
                                $ref: string;
                            };
                            decision_weight: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            trust_level: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                    learning: {
                        type: string;
                        properties: {
                            experience_accumulation: {
                                type: string;
                            };
                            pattern_recognition: {
                                type: string;
                            };
                            adaptation_mechanism: {
                                type: string;
                            };
                            performance_optimization: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            agent_configuration: {
                type: string;
                description: string;
                properties: {
                    basic: {
                        type: string;
                        properties: {
                            max_concurrent_tasks: {
                                type: string;
                                minimum: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            retry_policy: {
                                $ref: string;
                            };
                            priority_level: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                    communication: {
                        type: string;
                        properties: {
                            protocols: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            message_format: {
                                type: string;
                            };
                            encryption_enabled: {
                                type: string;
                            };
                            compression_enabled: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    security: {
                        type: string;
                        properties: {
                            authentication_required: {
                                type: string;
                            };
                            authorization_level: {
                                type: string;
                            };
                            audit_logging: {
                                type: string;
                            };
                            data_encryption: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            performance_metrics: {
                type: string;
                description: string;
                properties: {
                    response_time_ms: {
                        type: string;
                        minimum: number;
                    };
                    throughput_ops_per_sec: {
                        type: string;
                        minimum: number;
                    };
                    success_rate: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    error_rate: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    last_updated: {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            retry_policy: {
                type: string;
                description: string;
                properties: {
                    max_retries: {
                        type: string;
                        minimum: number;
                    };
                    backoff_ms: {
                        type: string;
                        minimum: number;
                    };
                    backoff_multiplier: {
                        type: string;
                        minimum: number;
                    };
                    max_backoff_ms: {
                        type: string;
                        minimum: number;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            role_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                pattern: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            display_name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            role_type: {
                type: string;
                enum: string[];
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            scope: {
                type: string;
                properties: {
                    level: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    context_ids: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    plan_ids: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    resource_constraints: {
                        type: string;
                        properties: {
                            max_contexts: {
                                type: string;
                                minimum: number;
                            };
                            max_plans: {
                                type: string;
                                minimum: number;
                            };
                            allowed_resource_types: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
                description: string;
            };
            permissions: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        permission_id: {
                            $ref: string;
                        };
                        resource_type: {
                            type: string;
                            enum: string[];
                        };
                        resource_id: {
                            oneOf: ({
                                $ref: string;
                                type?: undefined;
                                const?: undefined;
                            } | {
                                type: string;
                                const: string;
                                $ref?: undefined;
                            })[];
                            description: string;
                        };
                        actions: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            minItems: number;
                        };
                        conditions: {
                            type: string;
                            properties: {
                                time_based: {
                                    type: string;
                                    properties: {
                                        start_time: {
                                            type: string;
                                            format: string;
                                        };
                                        end_time: {
                                            type: string;
                                            format: string;
                                        };
                                        timezone: {
                                            type: string;
                                        };
                                        days_of_week: {
                                            type: string;
                                            items: {
                                                type: string;
                                                minimum: number;
                                                maximum: number;
                                            };
                                        };
                                    };
                                };
                                location_based: {
                                    type: string;
                                    properties: {
                                        allowed_ip_ranges: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                        geo_restrictions: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                    };
                                };
                                context_based: {
                                    type: string;
                                    properties: {
                                        required_attributes: {
                                            type: string;
                                        };
                                        forbidden_attributes: {
                                            type: string;
                                        };
                                    };
                                };
                                approval_required: {
                                    type: string;
                                    properties: {
                                        for_actions: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                        approval_threshold: {
                                            type: string;
                                            minimum: number;
                                        };
                                        approver_roles: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        grant_type: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        expiry: {
                            $ref: string;
                            description: string;
                        };
                    };
                    required: string[];
                };
            };
            inheritance: {
                type: string;
                properties: {
                    parent_roles: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                role_id: {
                                    $ref: string;
                                };
                                inheritance_type: {
                                    type: string;
                                    enum: string[];
                                };
                                excluded_permissions: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                conditions: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                        };
                    };
                    child_roles: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                role_id: {
                                    $ref: string;
                                };
                                delegation_level: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                can_further_delegate: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    inheritance_rules: {
                        type: string;
                        properties: {
                            merge_strategy: {
                                type: string;
                                enum: string[];
                            };
                            conflict_resolution: {
                                type: string;
                                enum: string[];
                            };
                            max_inheritance_depth: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                };
            };
            delegation: {
                type: string;
                properties: {
                    can_delegate: {
                        type: string;
                    };
                    delegatable_permissions: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    delegation_constraints: {
                        type: string;
                        properties: {
                            max_delegation_depth: {
                                type: string;
                                minimum: number;
                            };
                            time_limit: {
                                type: string;
                                minimum: number;
                            };
                            require_approval: {
                                type: string;
                            };
                            revocable: {
                                type: string;
                            };
                        };
                    };
                    active_delegations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                delegation_id: {
                                    $ref: string;
                                };
                                delegated_to: {
                                    type: string;
                                };
                                permissions: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                start_time: {
                                    $ref: string;
                                };
                                end_time: {
                                    $ref: string;
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            attributes: {
                type: string;
                properties: {
                    security_clearance: {
                        type: string;
                        enum: string[];
                    };
                    department: {
                        type: string;
                    };
                    seniority_level: {
                        type: string;
                        enum: string[];
                    };
                    certification_requirements: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                certification: {
                                    type: string;
                                };
                                level: {
                                    type: string;
                                };
                                expiry: {
                                    $ref: string;
                                };
                                issuer: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    custom_attributes: {
                        type: string;
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                    };
                };
            };
            validation_rules: {
                type: string;
                properties: {
                    assignment_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule_id: {
                                    $ref: string;
                                };
                                condition: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                message: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    separation_of_duties: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                conflicting_roles: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                                exception_approval_required: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
            };
            audit_settings: {
                type: string;
                properties: {
                    audit_enabled: {
                        type: string;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    retention_period: {
                        type: string;
                    };
                    compliance_frameworks: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                required: string[];
            };
            agents: {
                type: string;
                description: string;
                items: {
                    $ref: string;
                };
            };
            agent_management: {
                type: string;
                description: string;
                properties: {
                    max_agents: {
                        type: string;
                        minimum: number;
                    };
                    auto_scaling: {
                        type: string;
                    };
                    load_balancing: {
                        type: string;
                    };
                    health_check_interval_ms: {
                        type: string;
                        minimum: number;
                    };
                    default_agent_config: {
                        $ref: string;
                    };
                };
            };
            team_configuration: {
                type: string;
                description: string;
                properties: {
                    max_team_size: {
                        type: string;
                        minimum: number;
                    };
                    collaboration_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule_name: {
                                    type: string;
                                };
                                rule_type: {
                                    type: string;
                                    enum: string[];
                                };
                                rule_config: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    decision_mechanism: {
                        type: string;
                        properties: {
                            type: {
                                type: string;
                                enum: string[];
                            };
                            threshold: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                };
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            role_assignment_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            permission_check_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            role_security_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            permission_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            role_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_roles_count: {
                                type: string;
                                minimum: number;
                            };
                            role_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            role_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_role_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_role_assignment_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_permission_check_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_role_security_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_permission_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_role_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            role_access_api: {
                                type: string;
                                format: string;
                            };
                            permission_metrics_api: {
                                type: string;
                                format: string;
                            };
                            security_events_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    role_metrics: {
                        type: string;
                        properties: {
                            track_role_usage: {
                                type: string;
                            };
                            track_permission_checks: {
                                type: string;
                            };
                            track_access_patterns: {
                                type: string;
                            };
                            track_security_events: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                role_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_permission_change: {
                                type: string;
                            };
                            version_on_status_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_roles: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            role_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            role_details: {
                type: string;
                properties: {
                    role_type: {
                        type: string;
                        enum: string[];
                    };
                    inheritance_mode: {
                        type: string;
                        enum: string[];
                    };
                    permission_model: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                role_operation: {
                                    type: string;
                                };
                                role_id: {
                                    $ref: string;
                                };
                                role_name: {
                                    type: string;
                                };
                                role_type: {
                                    type: string;
                                };
                                permission_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                role_status: {
                                    type: string;
                                };
                                role_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            role_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            role_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly extension: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            extension_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                pattern: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            display_name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            version: {
                $ref: string;
                description: string;
            };
            extension_type: {
                type: string;
                enum: string[];
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            compatibility: {
                type: string;
                properties: {
                    mplp_version: {
                        type: string;
                        description: string;
                    };
                    required_modules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                module: {
                                    type: string;
                                    enum: string[];
                                };
                                min_version: {
                                    $ref: string;
                                };
                                max_version: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    dependencies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                extension_id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                version_range: {
                                    type: string;
                                };
                                optional: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    conflicts: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                extension_id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                reason: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            configuration: {
                type: string;
                properties: {
                    schema: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    current_config: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    default_config: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    validation_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule: {
                                    type: string;
                                };
                                message: {
                                    type: string;
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            extension_points: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        point_id: {
                            $ref: string;
                        };
                        name: {
                            type: string;
                        };
                        type: {
                            type: string;
                            enum: string[];
                        };
                        target_module: {
                            type: string;
                            enum: string[];
                        };
                        event_name: {
                            type: string;
                        };
                        execution_order: {
                            type: string;
                            minimum: number;
                        };
                        enabled: {
                            type: string;
                        };
                        handler: {
                            type: string;
                            properties: {
                                function_name: {
                                    type: string;
                                };
                                parameters: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                                timeout_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                retry_policy: {
                                    type: string;
                                    properties: {
                                        max_retries: {
                                            type: string;
                                            minimum: number;
                                        };
                                        retry_delay_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                        backoff_strategy: {
                                            type: string;
                                            enum: string[];
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                        conditions: {
                            type: string;
                            properties: {
                                when: {
                                    type: string;
                                    description: string;
                                };
                                required_permissions: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                context_filters: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                        };
                    };
                    required: string[];
                };
            };
            api_extensions: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        endpoint_id: {
                            $ref: string;
                        };
                        path: {
                            type: string;
                            pattern: string;
                        };
                        method: {
                            type: string;
                            enum: string[];
                        };
                        description: {
                            type: string;
                        };
                        handler: {
                            type: string;
                        };
                        middleware: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        authentication_required: {
                            type: string;
                        };
                        required_permissions: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        rate_limit: {
                            type: string;
                            properties: {
                                requests_per_minute: {
                                    type: string;
                                    minimum: number;
                                };
                                burst_size: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        request_schema: {
                            type: string;
                            description: string;
                            additionalProperties: boolean;
                        };
                        response_schema: {
                            type: string;
                            description: string;
                            additionalProperties: boolean;
                        };
                    };
                    required: string[];
                };
            };
            event_subscriptions: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        subscription_id: {
                            $ref: string;
                        };
                        event_pattern: {
                            type: string;
                        };
                        source_module: {
                            type: string;
                            enum: string[];
                        };
                        handler: {
                            type: string;
                        };
                        filter_conditions: {
                            type: string;
                            additionalProperties: boolean;
                        };
                        delivery_guarantees: {
                            type: string;
                            enum: string[];
                        };
                        dead_letter_queue: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            lifecycle: {
                type: string;
                properties: {
                    install_date: {
                        $ref: string;
                    };
                    last_update: {
                        $ref: string;
                    };
                    activation_count: {
                        type: string;
                        minimum: number;
                    };
                    error_count: {
                        type: string;
                        minimum: number;
                    };
                    last_error: {
                        type: string;
                        properties: {
                            timestamp: {
                                $ref: string;
                            };
                            error_type: {
                                type: string;
                            };
                            message: {
                                type: string;
                            };
                            stack_trace: {
                                type: string;
                            };
                        };
                    };
                    performance_metrics: {
                        type: string;
                        properties: {
                            average_execution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            total_executions: {
                                type: string;
                                minimum: number;
                            };
                            success_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_check: {
                        type: string;
                        properties: {
                            endpoint: {
                                type: string;
                            };
                            interval_seconds: {
                                type: string;
                                minimum: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            failure_threshold: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            security: {
                type: string;
                properties: {
                    sandbox_enabled: {
                        type: string;
                    };
                    resource_limits: {
                        type: string;
                        properties: {
                            max_memory_mb: {
                                type: string;
                                minimum: number;
                            };
                            max_cpu_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            max_file_size_mb: {
                                type: string;
                                minimum: number;
                            };
                            network_access: {
                                type: string;
                            };
                            file_system_access: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                    code_signing: {
                        type: string;
                        properties: {
                            required: {
                                type: string;
                            };
                            signature: {
                                type: string;
                            };
                            certificate: {
                                type: string;
                            };
                            timestamp: {
                                $ref: string;
                            };
                        };
                    };
                    permissions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                permission: {
                                    type: string;
                                };
                                justification: {
                                    type: string;
                                };
                                approved: {
                                    type: string;
                                };
                                approved_by: {
                                    type: string;
                                };
                                approval_date: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            metadata: {
                type: string;
                properties: {
                    author: {
                        type: string;
                    };
                    organization: {
                        type: string;
                    };
                    license: {
                        type: string;
                    };
                    homepage: {
                        type: string;
                        format: string;
                    };
                    repository: {
                        type: string;
                        format: string;
                    };
                    documentation: {
                        type: string;
                        format: string;
                    };
                    support_contact: {
                        type: string;
                    };
                    keywords: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    categories: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    screenshots: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                url: {
                                    type: string;
                                    format: string;
                                };
                                caption: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                extension_operation: {
                                    type: string;
                                };
                                extension_id: {
                                    $ref: string;
                                };
                                extension_name: {
                                    type: string;
                                };
                                extension_type: {
                                    type: string;
                                };
                                extension_version: {
                                    type: string;
                                };
                                lifecycle_stage: {
                                    type: string;
                                };
                                extension_status: {
                                    type: string;
                                };
                                extension_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            extension_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            extension_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            extension_activation_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            extension_lifecycle_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            extension_ecosystem_health_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            extension_compatibility_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            extension_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_extensions_count: {
                                type: string;
                                minimum: number;
                            };
                            extension_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            extension_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_extension_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_extension_activation_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_extension_lifecycle_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_extension_ecosystem_health_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_extension_compatibility_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_extension_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            extension_lifecycle_api: {
                                type: string;
                                format: string;
                            };
                            performance_metrics_api: {
                                type: string;
                                format: string;
                            };
                            security_events_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    extension_metrics: {
                        type: string;
                        properties: {
                            track_lifecycle_events: {
                                type: string;
                            };
                            track_performance_impact: {
                                type: string;
                            };
                            track_usage_statistics: {
                                type: string;
                            };
                            track_security_events: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                extension_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_install: {
                                type: string;
                            };
                            version_on_update: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_extensions: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            extension_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            extension_details: {
                type: string;
                properties: {
                    extension_type: {
                        type: string;
                        enum: string[];
                    };
                    compatibility_mode: {
                        type: string;
                        enum: string[];
                    };
                    security_level: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly core: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
            workflow_stage: {
                type: string;
                enum: string[];
                description: string;
            };
            workflow_status: {
                type: string;
                enum: string[];
                description: string;
            };
            execution_mode: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            workflow_id: {
                $ref: string;
                description: string;
            };
            orchestrator_id: {
                $ref: string;
                description: string;
            };
            workflow_config: {
                type: string;
                description: string;
                properties: {
                    name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                        description: string;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                        description: string;
                    };
                    stages: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        uniqueItems: boolean;
                        description: string;
                    };
                    execution_mode: {
                        $ref: string;
                        description: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    max_concurrent_executions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    retry_policy: {
                        type: string;
                        properties: {
                            max_attempts: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            delay_ms: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            backoff_factor: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            execution_context: {
                type: string;
                description: string;
                properties: {
                    user_id: {
                        type: string;
                        description: string;
                    };
                    session_id: {
                        $ref: string;
                        description: string;
                    };
                    request_id: {
                        $ref: string;
                        description: string;
                    };
                    priority: {
                        $ref: string;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    variables: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                additionalProperties: boolean;
            };
            execution_status: {
                type: string;
                description: string;
                properties: {
                    status: {
                        $ref: string;
                        description: string;
                    };
                    current_stage: {
                        $ref: string;
                        description: string;
                    };
                    completed_stages: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    stage_results: {
                        type: string;
                        description: string;
                        additionalProperties: {
                            type: string;
                            properties: {
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                start_time: {
                                    $ref: string;
                                };
                                end_time: {
                                    $ref: string;
                                };
                                duration_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                result: {
                                    type: string;
                                    description: string;
                                };
                                error: {
                                    type: string;
                                    properties: {
                                        code: {
                                            type: string;
                                        };
                                        message: {
                                            type: string;
                                        };
                                        details: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    start_time: {
                        $ref: string;
                        description: string;
                    };
                    end_time: {
                        $ref: string;
                        description: string;
                    };
                    duration_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    retry_count: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            module_coordination: {
                type: string;
                description: string;
                properties: {
                    module_adapters: {
                        type: string;
                        description: string;
                        additionalProperties: {
                            type: string;
                            properties: {
                                adapter_type: {
                                    type: string;
                                    description: string;
                                };
                                config: {
                                    type: string;
                                    description: string;
                                    additionalProperties: boolean;
                                };
                                timeout_ms: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                    description: string;
                                };
                                retry_policy: {
                                    type: string;
                                    properties: {
                                        max_attempts: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                        delay_ms: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                            additionalProperties: boolean;
                        };
                    };
                    data_flow: {
                        type: string;
                        description: string;
                        properties: {
                            input_mappings: {
                                type: string;
                                description: string;
                                additionalProperties: {
                                    type: string;
                                    properties: {
                                        source_stage: {
                                            $ref: string;
                                        };
                                        source_field: {
                                            type: string;
                                        };
                                        target_field: {
                                            type: string;
                                        };
                                        transformation: {
                                            type: string;
                                            description: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            output_mappings: {
                                type: string;
                                description: string;
                                additionalProperties: {
                                    type: string;
                                    properties: {
                                        target_stage: {
                                            $ref: string;
                                        };
                                        source_field: {
                                            type: string;
                                        };
                                        target_field: {
                                            type: string;
                                        };
                                        transformation: {
                                            type: string;
                                            description: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                additionalProperties: boolean;
            };
            event_handling: {
                type: string;
                description: string;
                properties: {
                    event_listeners: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_type: {
                                    type: string;
                                    enum: string[];
                                    description: string;
                                };
                                handler: {
                                    type: string;
                                    description: string;
                                };
                                config: {
                                    type: string;
                                    description: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                            additionalProperties: boolean;
                        };
                        description: string;
                    };
                    event_routing: {
                        type: string;
                        description: string;
                        properties: {
                            default_handler: {
                                type: string;
                                description: string;
                            };
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        condition: {
                                            type: string;
                                            description: string;
                                        };
                                        handler: {
                                            type: string;
                                            description: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                additionalProperties: boolean;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                system_operation: {
                                    type: string;
                                };
                                workflow_id: {
                                    $ref: string;
                                };
                                orchestrator_id: {
                                    $ref: string;
                                };
                                core_operation: {
                                    type: string;
                                };
                                core_status: {
                                    type: string;
                                };
                                module_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                core_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            core_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            core_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            system_health_api: {
                                type: string;
                                format: string;
                            };
                            workflow_metrics_api: {
                                type: string;
                                format: string;
                            };
                            resource_metrics_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    system_metrics: {
                        type: string;
                        properties: {
                            track_workflow_execution: {
                                type: string;
                            };
                            track_module_coordination: {
                                type: string;
                            };
                            track_resource_usage: {
                                type: string;
                            };
                            track_system_health: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            core_orchestration_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            workflow_coordination_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            system_reliability_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            module_integration_success_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            core_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_workflows_count: {
                                type: string;
                                minimum: number;
                            };
                            core_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            core_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_workflow_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_core_orchestration_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_workflow_coordination_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_system_reliability_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_module_integration_success_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_core_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                system_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_deployment: {
                                type: string;
                            };
                            version_on_scaling: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    system_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_workflow_data: {
                                type: string;
                            };
                            index_system_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_workflows: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            core_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            core_details: {
                type: string;
                properties: {
                    orchestration_mode: {
                        type: string;
                        enum: string[];
                    };
                    resource_allocation: {
                        type: string;
                        enum: string[];
                    };
                    fault_tolerance: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly collab: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            entityStatus: {
                type: string;
                enum: string[];
                description: string;
            };
            decision_algorithm: {
                type: string;
                enum: string[];
                description: string;
            };
            voting_mechanism: {
                type: string;
                description: string;
                properties: {
                    anonymity: {
                        type: string;
                        description: string;
                    };
                    transparency: {
                        type: string;
                        description: string;
                    };
                    revision_allowed: {
                        type: string;
                        description: string;
                    };
                    time_limit_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            weighting_strategy: {
                type: string;
                description: string;
                properties: {
                    strategy: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    weights: {
                        type: string;
                        additionalProperties: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            consensus_requirements: {
                type: string;
                description: string;
                properties: {
                    threshold: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    quorum: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    unanimity_required: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
        };
        properties: {
            collaboration_id: {
                $ref: string;
                description: string;
            };
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            plan_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            mode: {
                type: string;
                enum: string[];
                description: string;
            };
            participants: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        participant_id: {
                            $ref: string;
                            description: string;
                        };
                        agent_id: {
                            $ref: string;
                            description: string;
                        };
                        role_id: {
                            $ref: string;
                            description: string;
                        };
                        status: {
                            $ref: string;
                            description: string;
                        };
                        capabilities: {
                            type: string;
                            items: {
                                type: string;
                            };
                            maxItems: number;
                            description: string;
                        };
                        priority: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        weight: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        joined_at: {
                            $ref: string;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                minItems: number;
                maxItems: number;
                description: string;
            };
            coordination_strategy: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    coordinator_id: {
                        $ref: string;
                        description: string;
                    };
                    decision_making: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            status: {
                $ref: string;
                description: string;
            };
            created_at: {
                $ref: string;
                description: string;
            };
            updated_at: {
                $ref: string;
                description: string;
            };
            created_by: {
                $ref: string;
                description: string;
            };
            decision_making: {
                type: string;
                description: string;
                properties: {
                    enabled: {
                        type: string;
                        description: string;
                    };
                    algorithm: {
                        $ref: string;
                    };
                    voting: {
                        $ref: string;
                    };
                    weighting: {
                        $ref: string;
                    };
                    consensus: {
                        $ref: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            council_configuration: {
                type: string;
                description: string;
                properties: {
                    council_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    session_management: {
                        type: string;
                        properties: {
                            max_session_duration_ms: {
                                type: string;
                                minimum: number;
                            };
                            quorum_enforcement: {
                                type: string;
                            };
                            automatic_adjournment: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    voting_rules: {
                        type: string;
                        properties: {
                            multiple_rounds_allowed: {
                                type: string;
                            };
                            abstention_allowed: {
                                type: string;
                            };
                            delegation_allowed: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                additionalProperties: boolean;
            };
            metadata: {
                type: string;
                additionalProperties: boolean;
                description: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                collaboration_operation: {
                                    type: string;
                                };
                                collab_id: {
                                    $ref: string;
                                };
                                collab_name: {
                                    type: string;
                                };
                                collab_type: {
                                    type: string;
                                };
                                participant_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                collab_status: {
                                    type: string;
                                };
                                participant_id: {
                                    $ref: string;
                                };
                                task_details: {
                                    type: string;
                                };
                                decision_details: {
                                    type: string;
                                };
                                collab_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            collab_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            collab_data_logging: {
                                type: string;
                            };
                            decision_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            collaboration_efficiency_api: {
                                type: string;
                                format: string;
                            };
                            team_performance_api: {
                                type: string;
                                format: string;
                            };
                            task_coordination_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    collaboration_metrics: {
                        type: string;
                        properties: {
                            track_collaboration_efficiency: {
                                type: string;
                            };
                            track_team_performance: {
                                type: string;
                            };
                            track_task_coordination: {
                                type: string;
                            };
                            track_decision_quality: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            collab_coordination_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            team_collaboration_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            collaboration_quality_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            participant_engagement_satisfaction_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            collab_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_collaborations_count: {
                                type: string;
                                minimum: number;
                            };
                            collab_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            collab_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_collaboration_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_collab_coordination_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_team_collaboration_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_collaboration_quality_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_participant_engagement_satisfaction_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_collab_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                collaboration_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_participant_change: {
                                type: string;
                            };
                            version_on_strategy_change: {
                                type: string;
                            };
                            version_on_permission_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    collaboration_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_task_data: {
                                type: string;
                            };
                            index_decision_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_collaborations: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            collab_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            collab_details: {
                type: string;
                properties: {
                    collaboration_type: {
                        type: string;
                        enum: string[];
                    };
                    participant_limit: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    coordination_strategy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            task_assignment_data: {
                type: string;
                properties: {
                    task_id: {
                        $ref: string;
                        description: string;
                    };
                    collaboration_id: {
                        $ref: string;
                        description: string;
                    };
                    assignee_id: {
                        $ref: string;
                        description: string;
                    };
                    task_name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                        description: string;
                    };
                    task_description: {
                        type: string;
                        maxLength: number;
                        description: string;
                    };
                    task_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    priority: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    assigned_at: {
                        $ref: string;
                        description: string;
                    };
                    due_date: {
                        $ref: string;
                        description: string;
                    };
                    estimated_duration_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    dependencies: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            resource_allocation_data: {
                type: string;
                properties: {
                    allocation_id: {
                        $ref: string;
                        description: string;
                    };
                    collaboration_id: {
                        $ref: string;
                        description: string;
                    };
                    resource_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    resource_name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                        description: string;
                    };
                    allocated_to: {
                        $ref: string;
                        description: string;
                    };
                    allocation_amount: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    allocation_unit: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    allocation_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    allocated_at: {
                        $ref: string;
                        description: string;
                    };
                    expires_at: {
                        $ref: string;
                        description: string;
                    };
                    priority: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            collaboration_effectiveness_analysis: {
                type: string;
                properties: {
                    analysis_id: {
                        $ref: string;
                        description: string;
                    };
                    collaboration_id: {
                        $ref: string;
                        description: string;
                    };
                    effectiveness_score: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    efficiency_metrics: {
                        type: string;
                        properties: {
                            task_completion_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            average_response_time_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            resource_utilization_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            participant_engagement_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    quality_metrics: {
                        type: string;
                        properties: {
                            decision_quality_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            communication_effectiveness: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            conflict_resolution_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    analyzed_at: {
                        $ref: string;
                        description: string;
                    };
                    recommendations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                recommendation_id: {
                                    $ref: string;
                                };
                                category: {
                                    type: string;
                                    enum: string[];
                                };
                                priority: {
                                    type: string;
                                    enum: string[];
                                };
                                description: {
                                    type: string;
                                    maxLength: number;
                                };
                                expected_impact: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                            required: string[];
                        };
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            collaboration_pattern_analysis: {
                type: string;
                properties: {
                    analysis_id: {
                        $ref: string;
                        description: string;
                    };
                    time_range: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                    identified_patterns: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                pattern_id: {
                                    $ref: string;
                                };
                                pattern_type: {
                                    type: string;
                                    enum: string[];
                                };
                                pattern_name: {
                                    type: string;
                                    maxLength: number;
                                };
                                frequency: {
                                    type: string;
                                    minimum: number;
                                    description: string;
                                };
                                confidence_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                    description: string;
                                };
                                impact_assessment: {
                                    type: string;
                                    properties: {
                                        positive_impact: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                        negative_impact: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                        overall_impact: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    trend_analysis: {
                        type: string;
                        properties: {
                            collaboration_frequency_trend: {
                                type: string;
                                enum: string[];
                            };
                            efficiency_trend: {
                                type: string;
                                enum: string[];
                            };
                            participant_engagement_trend: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    analyzed_at: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            governance_check_result: {
                type: string;
                properties: {
                    check_id: {
                        $ref: string;
                        description: string;
                    };
                    collaboration_id: {
                        $ref: string;
                        description: string;
                    };
                    check_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    check_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    compliance_score: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    violations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                violation_id: {
                                    $ref: string;
                                };
                                violation_type: {
                                    type: string;
                                    enum: string[];
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                                description: {
                                    type: string;
                                    maxLength: number;
                                };
                                remediation_required: {
                                    type: string;
                                };
                                remediation_steps: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    checked_at: {
                        $ref: string;
                        description: string;
                    };
                    next_check_due: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly dialog: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            dialog_capabilities: {
                type: string;
                description: string;
                properties: {
                    basic: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                const: boolean;
                            };
                            message_history: {
                                type: string;
                            };
                            participant_management: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    intelligent_control: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            adaptive_rounds: {
                                type: string;
                            };
                            dynamic_strategy: {
                                type: string;
                            };
                            completeness_evaluation: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    critical_thinking: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            analysis_depth: {
                                type: string;
                                enum: string[];
                            };
                            question_generation: {
                                type: string;
                            };
                            logic_validation: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    knowledge_search: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            real_time_search: {
                                type: string;
                            };
                            knowledge_validation: {
                                type: string;
                            };
                            source_verification: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    multimodal: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            supported_modalities: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            cross_modal_translation: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            dialog_strategy: {
                type: string;
                description: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    rounds: {
                        type: string;
                        properties: {
                            min: {
                                type: string;
                                minimum: number;
                            };
                            max: {
                                type: string;
                                minimum: number;
                            };
                            target: {
                                type: string;
                                minimum: number;
                            };
                        };
                        additionalProperties: boolean;
                    };
                    exit_criteria: {
                        type: string;
                        properties: {
                            completeness_threshold: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            user_satisfaction_threshold: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            time_limit: {
                                type: string;
                                minimum: number;
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            dialog_content: {
                type: string;
                description: string;
                properties: {
                    text: {
                        type: string;
                    };
                    multimodal: {
                        type: string;
                        properties: {
                            audio: {
                                type: string;
                            };
                            image: {
                                type: string;
                            };
                            video: {
                                type: string;
                            };
                            file: {
                                type: string;
                            };
                        };
                        additionalProperties: boolean;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    priority: {
                        type: string;
                        enum: string[];
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            dialog_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            participants: {
                type: string;
                items: {
                    type: string;
                };
                minItems: number;
                maxItems: number;
                description: string;
            };
            capabilities: {
                $ref: string;
                description: string;
            };
            strategy: {
                $ref: string;
                description: string;
            };
            context: {
                type: string;
                description: string;
                properties: {
                    session_id: {
                        type: string;
                    };
                    context_id: {
                        type: string;
                    };
                    knowledge_base: {
                        type: string;
                    };
                    previous_dialogs: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                additionalProperties: boolean;
            };
            configuration: {
                type: string;
                description: string;
                properties: {
                    timeout: {
                        type: string;
                        minimum: number;
                    };
                    max_participants: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    retry_policy: {
                        type: string;
                        properties: {
                            max_retries: {
                                type: string;
                                minimum: number;
                            };
                            backoff_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                        additionalProperties: boolean;
                    };
                    security: {
                        type: string;
                        properties: {
                            encryption: {
                                type: string;
                            };
                            authentication: {
                                type: string;
                            };
                            audit_logging: {
                                type: string;
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                additionalProperties: boolean;
            };
            metadata: {
                type: string;
                additionalProperties: boolean;
                description: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    type: string;
                                    format: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                dialog_operation: {
                                    type: string;
                                };
                                dialog_id: {
                                    $ref: string;
                                };
                                dialog_name: {
                                    type: string;
                                };
                                dialog_type: {
                                    type: string;
                                };
                                participant_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                dialog_status: {
                                    type: string;
                                };
                                content_hash: {
                                    type: string;
                                };
                                dialog_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            dialog_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            dialog_data_logging: {
                                type: string;
                            };
                            content_retention_policy: {
                                type: string;
                            };
                            privacy_protection: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            dialog_quality_api: {
                                type: string;
                                format: string;
                            };
                            response_time_api: {
                                type: string;
                                format: string;
                            };
                            satisfaction_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    dialog_metrics: {
                        type: string;
                        properties: {
                            track_response_times: {
                                type: string;
                            };
                            track_dialog_quality: {
                                type: string;
                            };
                            track_user_satisfaction: {
                                type: string;
                            };
                            track_content_moderation: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            dialog_response_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            dialog_completion_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            dialog_quality_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            user_experience_satisfaction_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            dialog_interaction_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_dialogs_count: {
                                type: string;
                                minimum: number;
                            };
                            dialog_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            dialog_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_dialog_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                type: string;
                                format: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_dialog_response_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_dialog_completion_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_dialog_quality_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_user_experience_satisfaction_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_dialog_interaction_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    type: string;
                                    format: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                dialog_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_participant_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    type: string;
                                    format: string;
                                };
                                last_updated: {
                                    type: string;
                                    format: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    content_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_message_content: {
                                type: string;
                            };
                            privacy_filtering: {
                                type: string;
                            };
                            sensitive_data_masking: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_dialogs: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            dialog_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            dialog_details: {
                type: string;
                properties: {
                    dialog_type: {
                        type: string;
                        enum: string[];
                    };
                    turn_management: {
                        type: string;
                        enum: string[];
                    };
                    context_retention: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
        examples: ({
            dialog_id: string;
            name: string;
            participants: string[];
            capabilities: {
                basic: {
                    enabled: boolean;
                    message_history: boolean;
                    participant_management: boolean;
                };
                intelligent_control?: undefined;
                critical_thinking?: undefined;
                knowledge_search?: undefined;
            };
            strategy?: undefined;
        } | {
            dialog_id: string;
            name: string;
            participants: string[];
            capabilities: {
                basic: {
                    enabled: boolean;
                    message_history: boolean;
                    participant_management: boolean;
                };
                intelligent_control: {
                    enabled: boolean;
                    adaptive_rounds: boolean;
                    dynamic_strategy: boolean;
                    completeness_evaluation: boolean;
                };
                critical_thinking: {
                    enabled: boolean;
                    analysis_depth: string;
                    question_generation: boolean;
                    logic_validation: boolean;
                };
                knowledge_search: {
                    enabled: boolean;
                    real_time_search: boolean;
                    knowledge_validation: boolean;
                    source_verification: boolean;
                };
            };
            strategy: {
                type: string;
                rounds: {
                    min: number;
                    max: number;
                    target: number;
                };
                exit_criteria: {
                    completeness_threshold: number;
                    user_satisfaction_threshold: number;
                };
            };
        })[];
    };
    readonly network: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            entityStatus: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            network_id: {
                $ref: string;
                description: string;
            };
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            topology: {
                type: string;
                enum: string[];
                description: string;
            };
            nodes: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        node_id: {
                            $ref: string;
                            description: string;
                        };
                        agent_id: {
                            $ref: string;
                            description: string;
                        };
                        node_type: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        status: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        capabilities: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            maxItems: number;
                            description: string;
                        };
                        address: {
                            type: string;
                            properties: {
                                host: {
                                    type: string;
                                    description: string;
                                };
                                port: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                    description: string;
                                };
                                protocol: {
                                    type: string;
                                    enum: string[];
                                    description: string;
                                };
                            };
                            required: string[];
                            additionalProperties: boolean;
                            description: string;
                        };
                        metadata: {
                            type: string;
                            additionalProperties: boolean;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                minItems: number;
                maxItems: number;
                description: string;
            };
            edges: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        edge_id: {
                            $ref: string;
                            description: string;
                        };
                        source_node_id: {
                            $ref: string;
                            description: string;
                        };
                        target_node_id: {
                            $ref: string;
                            description: string;
                        };
                        edge_type: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        direction: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        status: {
                            $ref: string;
                            description: string;
                        };
                        weight: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        metadata: {
                            type: string;
                            additionalProperties: boolean;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                maxItems: number;
                description: string;
            };
            discovery_mechanism: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    registry_config: {
                        type: string;
                        properties: {
                            endpoint: {
                                type: string;
                                format: string;
                                description: string;
                            };
                            authentication: {
                                type: string;
                                default: boolean;
                                description: string;
                            };
                            refresh_interval: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            routing_strategy: {
                type: string;
                properties: {
                    algorithm: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    load_balancing: {
                        type: string;
                        properties: {
                            method: {
                                type: string;
                                enum: string[];
                                description: string;
                            };
                        };
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            status: {
                $ref: string;
                description: string;
            };
            created_at: {
                $ref: string;
                description: string;
            };
            updated_at: {
                $ref: string;
                description: string;
            };
            created_by: {
                $ref: string;
                description: string;
            };
            metadata: {
                type: string;
                additionalProperties: boolean;
                description: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                network_operation: {
                                    type: string;
                                };
                                network_id: {
                                    $ref: string;
                                };
                                network_name: {
                                    type: string;
                                };
                                network_type: {
                                    type: string;
                                };
                                node_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                network_status: {
                                    type: string;
                                };
                                node_id: {
                                    $ref: string;
                                };
                                connection_details: {
                                    type: string;
                                };
                                network_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            network_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            network_data_logging: {
                                type: string;
                            };
                            traffic_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            network_performance_api: {
                                type: string;
                                format: string;
                            };
                            traffic_analysis_api: {
                                type: string;
                                format: string;
                            };
                            connection_status_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    network_metrics: {
                        type: string;
                        properties: {
                            track_network_performance: {
                                type: string;
                            };
                            track_traffic_flow: {
                                type: string;
                            };
                            track_connection_status: {
                                type: string;
                            };
                            track_security_events: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            network_communication_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            network_topology_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            network_reliability_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            connection_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            network_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_connections_count: {
                                type: string;
                                minimum: number;
                            };
                            network_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            network_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_network_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_network_communication_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_network_topology_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_network_reliability_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_connection_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_network_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                network_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_topology_change: {
                                type: string;
                            };
                            version_on_node_change: {
                                type: string;
                            };
                            version_on_routing_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    network_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_topology_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_networks: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            network_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            network_details: {
                type: string;
                properties: {
                    network_topology: {
                        type: string;
                        enum: string[];
                    };
                    protocol_type: {
                        type: string;
                        enum: string[];
                    };
                    security_mode: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
};
export declare const CrossCuttingConcernsSchemaMap: {
    readonly security: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            security_level: {
                type: string;
                enum: string[];
                description: string;
            };
            authentication_method: {
                type: string;
                enum: string[];
                description: string;
            };
            encryption_algorithm: {
                type: string;
                enum: string[];
                description: string;
            };
            user_identity: {
                type: string;
                properties: {
                    user_id: {
                        type: string;
                    };
                    username: {
                        type: string;
                    };
                    email: {
                        type: string;
                        format: string;
                    };
                    display_name: {
                        type: string;
                    };
                    user_type: {
                        type: string;
                        enum: string[];
                    };
                    organization: {
                        type: string;
                    };
                    department: {
                        type: string;
                    };
                    roles: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    groups: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    attributes: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
            };
            permission: {
                type: string;
                properties: {
                    permission_id: {
                        $ref: string;
                    };
                    resource_type: {
                        type: string;
                        enum: string[];
                    };
                    resource_identifier: {
                        type: string;
                    };
                    actions: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                        minItems: number;
                    };
                    conditions: {
                        type: string;
                        properties: {
                            time_restrictions: {
                                type: string;
                                properties: {
                                    start_time: {
                                        $ref: string;
                                    };
                                    end_time: {
                                        $ref: string;
                                    };
                                    allowed_hours: {
                                        type: string;
                                        items: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    allowed_days: {
                                        type: string;
                                        items: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                };
                            };
                            ip_restrictions: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            context_requirements: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                    granted_at: {
                        $ref: string;
                    };
                    expires_at: {
                        $ref: string;
                    };
                    granted_by: {
                        type: string;
                    };
                };
                required: string[];
            };
            encryption_info: {
                type: string;
                properties: {
                    algorithm: {
                        $ref: string;
                    };
                    key_id: {
                        type: string;
                    };
                    key_version: {
                        type: string;
                    };
                    initialization_vector: {
                        type: string;
                    };
                    key_derivation: {
                        type: string;
                        properties: {
                            method: {
                                type: string;
                                enum: string[];
                            };
                            iterations: {
                                type: string;
                                minimum: number;
                            };
                            salt: {
                                type: string;
                            };
                        };
                    };
                    signature: {
                        type: string;
                    };
                    certificate_chain: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                required: string[];
            };
            audit_entry: {
                type: string;
                properties: {
                    audit_id: {
                        $ref: string;
                    };
                    event_type: {
                        type: string;
                        enum: string[];
                    };
                    user_identity: {
                        $ref: string;
                    };
                    resource_accessed: {
                        type: string;
                    };
                    action_performed: {
                        type: string;
                    };
                    result: {
                        type: string;
                        enum: string[];
                    };
                    source_ip: {
                        type: string;
                    };
                    user_agent: {
                        type: string;
                    };
                    session_id: {
                        $ref: string;
                    };
                    request_id: {
                        $ref: string;
                    };
                    additional_data: {
                        type: string;
                    };
                    risk_score: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    timestamp: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            security_context: {
                type: string;
                properties: {
                    context_id: {
                        $ref: string;
                    };
                    session_id: {
                        $ref: string;
                    };
                    user_identity: {
                        $ref: string;
                    };
                    authentication_token: {
                        type: string;
                        properties: {
                            token_type: {
                                type: string;
                                enum: string[];
                            };
                            token_value: {
                                type: string;
                            };
                            issued_at: {
                                $ref: string;
                            };
                            expires_at: {
                                $ref: string;
                            };
                            issuer: {
                                type: string;
                            };
                            audience: {
                                type: string;
                            };
                            scopes: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                    permissions: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    security_level: {
                        $ref: string;
                    };
                    encryption_info: {
                        $ref: string;
                    };
                    audit_trail: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    security_policies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                policy_id: {
                                    type: string;
                                };
                                policy_name: {
                                    type: string;
                                };
                                policy_version: {
                                    type: string;
                                };
                                enforcement_level: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    threat_indicators: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                indicator_type: {
                                    type: string;
                                    enum: string[];
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                                description: {
                                    type: string;
                                };
                                detected_at: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            security_event: {
                type: string;
                properties: {
                    event_id: {
                        $ref: string;
                    };
                    event_type: {
                        type: string;
                        enum: string[];
                    };
                    severity: {
                        type: string;
                        enum: string[];
                    };
                    source_module: {
                        $ref: string;
                    };
                    affected_resources: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    security_context: {
                        $ref: string;
                    };
                    event_details: {
                        type: string;
                        description: string;
                    };
                    mitigation_actions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                action_type: {
                                    type: string;
                                    enum: string[];
                                };
                                action_description: {
                                    type: string;
                                };
                                automated: {
                                    type: string;
                                };
                                executed_at: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    investigation_status: {
                        type: string;
                        enum: string[];
                    };
                    occurred_at: {
                        $ref: string;
                    };
                    resolved_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            security_policy: {
                type: string;
                properties: {
                    policy_id: {
                        $ref: string;
                    };
                    policy_name: {
                        type: string;
                    };
                    policy_version: {
                        type: string;
                    };
                    policy_type: {
                        type: string;
                        enum: string[];
                    };
                    target_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    policy_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule_id: {
                                    type: string;
                                };
                                rule_name: {
                                    type: string;
                                };
                                condition: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                parameters: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    enforcement_level: {
                        type: string;
                        enum: string[];
                    };
                    compliance_frameworks: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    effective_date: {
                        $ref: string;
                    };
                    expiration_date: {
                        $ref: string;
                    };
                    created_by: {
                        type: string;
                    };
                    approved_by: {
                        type: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            security_context: {
                $ref: string;
            };
            security_event: {
                $ref: string;
            };
            security_policy: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                security_operation: {
                                    type: string;
                                };
                                security_level: {
                                    $ref: string;
                                };
                                authentication_method: {
                                    $ref: string;
                                };
                                encryption_algorithm: {
                                    $ref: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                target_resource: {
                                    type: string;
                                };
                                security_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            security_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            security_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            security_monitoring_api: {
                                type: string;
                                format: string;
                            };
                            threat_analysis_api: {
                                type: string;
                                format: string;
                            };
                            compliance_monitoring_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    security_metrics: {
                        type: string;
                        properties: {
                            track_security_monitoring: {
                                type: string;
                            };
                            track_threat_analysis: {
                                type: string;
                            };
                            track_compliance_monitoring: {
                                type: string;
                            };
                            track_access_control: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            security_check_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            authentication_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            authorization_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            threat_detection_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            compliance_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_sessions_count: {
                                type: string;
                                minimum: number;
                            };
                            security_violations_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_authentications_count: {
                                type: string;
                                minimum: number;
                            };
                            average_encryption_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_security_check_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_authentication_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_authorization_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_threat_detection_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_security_violations_count: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                security_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_policy_change: {
                                type: string;
                            };
                            version_on_permission_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    security_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_security_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_security_events: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            security_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            security_details: {
                type: string;
                properties: {
                    security_level: {
                        type: string;
                        enum: string[];
                    };
                    encryption_algorithm: {
                        type: string;
                        enum: string[];
                    };
                    authentication_method: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly performance: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            metric_type: {
                type: string;
                enum: string[];
                description: string;
            };
            alert_level: {
                type: string;
                enum: string[];
                description: string;
            };
            sla_status: {
                type: string;
                enum: string[];
                description: string;
            };
            performance_baseline: {
                type: string;
                properties: {
                    baseline_id: {
                        $ref: string;
                    };
                    baseline_name: {
                        type: string;
                    };
                    module_name: {
                        $ref: string;
                    };
                    baseline_period: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            duration_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                    baseline_metrics: {
                        type: string;
                        properties: {
                            response_time_p50: {
                                type: string;
                            };
                            response_time_p95: {
                                type: string;
                            };
                            response_time_p99: {
                                type: string;
                            };
                            throughput_avg: {
                                type: string;
                            };
                            throughput_peak: {
                                type: string;
                            };
                            error_rate: {
                                type: string;
                            };
                            cpu_usage_avg: {
                                type: string;
                            };
                            memory_usage_avg: {
                                type: string;
                            };
                            disk_io_avg: {
                                type: string;
                            };
                            network_io_avg: {
                                type: string;
                            };
                        };
                    };
                    confidence_level: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    sample_size: {
                        type: string;
                        minimum: number;
                    };
                    created_at: {
                        $ref: string;
                    };
                    created_by: {
                        type: string;
                    };
                };
                required: string[];
            };
            sla_definition: {
                type: string;
                properties: {
                    sla_id: {
                        $ref: string;
                    };
                    sla_name: {
                        type: string;
                    };
                    module_name: {
                        $ref: string;
                    };
                    sla_type: {
                        type: string;
                        enum: string[];
                    };
                    target_value: {
                        type: string;
                    };
                    target_unit: {
                        type: string;
                    };
                    measurement_period: {
                        type: string;
                        enum: string[];
                    };
                    calculation_method: {
                        type: string;
                        enum: string[];
                    };
                    violation_threshold: {
                        type: string;
                        properties: {
                            warning_percentage: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            critical_percentage: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            consecutive_violations: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    business_impact: {
                        type: string;
                        enum: string[];
                    };
                    penalty_clauses: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                violation_level: {
                                    type: string;
                                };
                                penalty_type: {
                                    type: string;
                                    enum: string[];
                                };
                                penalty_amount: {
                                    type: string;
                                };
                                penalty_description: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    effective_date: {
                        $ref: string;
                    };
                    expiration_date: {
                        $ref: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            performance_alert: {
                type: string;
                properties: {
                    alert_id: {
                        $ref: string;
                    };
                    alert_name: {
                        type: string;
                    };
                    alert_type: {
                        type: string;
                        enum: string[];
                    };
                    alert_level: {
                        $ref: string;
                    };
                    module_name: {
                        $ref: string;
                    };
                    metric_name: {
                        type: string;
                    };
                    current_value: {
                        type: string;
                    };
                    threshold_value: {
                        type: string;
                    };
                    deviation_percentage: {
                        type: string;
                    };
                    alert_condition: {
                        type: string;
                    };
                    alert_description: {
                        type: string;
                    };
                    affected_operations: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    impact_assessment: {
                        type: string;
                        properties: {
                            user_impact: {
                                type: string;
                                enum: string[];
                            };
                            business_impact: {
                                type: string;
                                enum: string[];
                            };
                            estimated_affected_users: {
                                type: string;
                            };
                            estimated_revenue_impact: {
                                type: string;
                            };
                        };
                    };
                    recommended_actions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                action_type: {
                                    type: string;
                                    enum: string[];
                                };
                                action_description: {
                                    type: string;
                                };
                                priority: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                estimated_time_minutes: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    alert_status: {
                        type: string;
                        enum: string[];
                    };
                    triggered_at: {
                        $ref: string;
                    };
                    acknowledged_at: {
                        $ref: string;
                    };
                    resolved_at: {
                        $ref: string;
                    };
                    acknowledged_by: {
                        type: string;
                    };
                    resolved_by: {
                        type: string;
                    };
                };
                required: string[];
            };
            performance_report: {
                type: string;
                properties: {
                    report_id: {
                        $ref: string;
                    };
                    report_name: {
                        type: string;
                    };
                    report_type: {
                        type: string;
                        enum: string[];
                    };
                    report_period: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                    modules_covered: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    performance_summary: {
                        type: string;
                        properties: {
                            overall_availability: {
                                type: string;
                            };
                            average_response_time: {
                                type: string;
                            };
                            peak_throughput: {
                                type: string;
                            };
                            total_requests: {
                                type: string;
                            };
                            total_errors: {
                                type: string;
                            };
                            error_rate: {
                                type: string;
                            };
                            sla_compliance_rate: {
                                type: string;
                            };
                        };
                    };
                    module_performance: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                module_name: {
                                    $ref: string;
                                };
                                availability: {
                                    type: string;
                                };
                                response_time_p95: {
                                    type: string;
                                };
                                throughput_avg: {
                                    type: string;
                                };
                                error_rate: {
                                    type: string;
                                };
                                sla_status: {
                                    $ref: string;
                                };
                                key_incidents: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    sla_compliance: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                sla_name: {
                                    type: string;
                                };
                                target_value: {
                                    type: string;
                                };
                                actual_value: {
                                    type: string;
                                };
                                compliance_percentage: {
                                    type: string;
                                };
                                status: {
                                    $ref: string;
                                };
                                violations_count: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    trends_analysis: {
                        type: string;
                        properties: {
                            performance_trend: {
                                type: string;
                                enum: string[];
                            };
                            trend_confidence: {
                                type: string;
                            };
                            key_observations: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            recommendations: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                    generated_at: {
                        $ref: string;
                    };
                    generated_by: {
                        type: string;
                    };
                    report_format: {
                        type: string;
                        enum: string[];
                    };
                };
                required: string[];
            };
            capacity_planning: {
                type: string;
                properties: {
                    planning_id: {
                        $ref: string;
                    };
                    planning_name: {
                        type: string;
                    };
                    module_name: {
                        $ref: string;
                    };
                    current_capacity: {
                        type: string;
                        properties: {
                            max_throughput: {
                                type: string;
                            };
                            max_concurrent_users: {
                                type: string;
                            };
                            cpu_cores: {
                                type: string;
                            };
                            memory_gb: {
                                type: string;
                            };
                            storage_gb: {
                                type: string;
                            };
                            network_bandwidth_mbps: {
                                type: string;
                            };
                        };
                    };
                    usage_patterns: {
                        type: string;
                        properties: {
                            peak_usage_times: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            seasonal_variations: {
                                type: string;
                            };
                            growth_rate_monthly: {
                                type: string;
                            };
                            usage_distribution: {
                                type: string;
                            };
                        };
                    };
                    capacity_projections: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                projection_period: {
                                    type: string;
                                };
                                projected_load: {
                                    type: string;
                                };
                                required_capacity: {
                                    type: string;
                                };
                                capacity_gap: {
                                    type: string;
                                };
                                scaling_recommendations: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    scaling_strategies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                strategy_name: {
                                    type: string;
                                };
                                strategy_type: {
                                    type: string;
                                    enum: string[];
                                };
                                trigger_conditions: {
                                    type: string;
                                };
                                scaling_actions: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                estimated_cost: {
                                    type: string;
                                };
                                implementation_time: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            monitoring_overhead_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            performance_analysis_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            sla_compliance_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            capacity_prediction_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            performance_optimization_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_monitors_count: {
                                type: string;
                                minimum: number;
                            };
                            alert_frequency_per_hour: {
                                type: string;
                                minimum: number;
                            };
                            false_positive_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_response_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_monitoring_overhead_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_performance_analysis_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_sla_compliance_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_capacity_prediction_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_false_positive_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            performance_baseline: {
                $ref: string;
            };
            sla_definition: {
                $ref: string;
            };
            performance_alert: {
                $ref: string;
            };
            performance_report: {
                $ref: string;
            };
            capacity_planning: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                performance_operation: {
                                    type: string;
                                };
                                metric_name: {
                                    type: string;
                                };
                                metric_value: {
                                    type: string;
                                };
                                alert_level: {
                                    $ref: string;
                                };
                                sla_status: {
                                    $ref: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                performance_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            performance_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            performance_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            performance_monitoring_api: {
                                type: string;
                                format: string;
                            };
                            performance_analysis_api: {
                                type: string;
                                format: string;
                            };
                            sla_monitoring_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    performance_metrics: {
                        type: string;
                        properties: {
                            track_performance_monitoring: {
                                type: string;
                            };
                            track_performance_analysis: {
                                type: string;
                            };
                            track_sla_monitoring: {
                                type: string;
                            };
                            track_capacity_planning: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                performance_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_baseline_change: {
                                type: string;
                            };
                            version_on_sla_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    performance_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_performance_data: {
                                type: string;
                            };
                            index_enterprise_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_metrics: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            performance_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            performance_details: {
                type: string;
                properties: {
                    collection_strategy: {
                        type: string;
                        enum: string[];
                    };
                    aggregation_level: {
                        type: string;
                        enum: string[];
                    };
                    retention_policy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly eventBus: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            event_type: {
                type: string;
                enum: string[];
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            delivery_mode: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            routing_strategy: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            event_message: {
                type: string;
                properties: {
                    event_id: {
                        $ref: string;
                    };
                    event_type: {
                        $ref: string;
                    };
                    event_name: {
                        type: string;
                        description: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    payload: {
                        type: string;
                        description: string;
                    };
                    routing_key: {
                        type: string;
                        description: string;
                    };
                    headers: {
                        type: string;
                        description: string;
                    };
                    priority: {
                        $ref: string;
                    };
                    delivery_mode: {
                        $ref: string;
                    };
                    ttl_ms: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    correlation_id: {
                        $ref: string;
                        description: string;
                    };
                    reply_to: {
                        type: string;
                        description: string;
                    };
                    trace_context: {
                        type: string;
                        properties: {
                            trace_id: {
                                $ref: string;
                            };
                            span_id: {
                                $ref: string;
                            };
                            parent_span_id: {
                                $ref: string;
                            };
                        };
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    expires_at: {
                        $ref: string;
                    };
                    event_bus_details: {
                        type: string;
                        properties: {
                            bus_topology: {
                                type: string;
                                enum: string[];
                            };
                            message_ordering: {
                                type: string;
                                enum: string[];
                            };
                            delivery_guarantee: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            event_subscription: {
                type: string;
                properties: {
                    subscription_id: {
                        $ref: string;
                    };
                    subscriber_module: {
                        $ref: string;
                    };
                    event_patterns: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_type: {
                                    $ref: string;
                                };
                                event_name_pattern: {
                                    type: string;
                                    description: string;
                                };
                                source_modules: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                    description: string;
                                };
                                routing_key_pattern: {
                                    type: string;
                                    description: string;
                                };
                                filter_conditions: {
                                    type: string;
                                    description: string;
                                };
                            };
                            required: string[];
                        };
                        minItems: number;
                    };
                    delivery_options: {
                        type: string;
                        properties: {
                            max_retry_count: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                default: number;
                            };
                            retry_delay_ms: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                            dead_letter_enabled: {
                                type: string;
                                default: boolean;
                            };
                            batch_size: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                default: number;
                            };
                            batch_timeout_ms: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                        };
                    };
                    active: {
                        type: string;
                        default: boolean;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            event_delivery_receipt: {
                type: string;
                properties: {
                    receipt_id: {
                        $ref: string;
                    };
                    event_id: {
                        $ref: string;
                    };
                    subscription_id: {
                        $ref: string;
                    };
                    delivery_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    delivery_attempt: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    processing_time_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    error_info: {
                        type: string;
                        properties: {
                            error_code: {
                                type: string;
                                pattern: string;
                            };
                            error_message: {
                                type: string;
                            };
                            error_details: {
                                type: string;
                            };
                        };
                    };
                    delivered_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            event_bus_metrics: {
                type: string;
                properties: {
                    metric_id: {
                        $ref: string;
                    };
                    time_window_start: {
                        $ref: string;
                    };
                    time_window_end: {
                        $ref: string;
                    };
                    throughput_metrics: {
                        type: string;
                        properties: {
                            events_published: {
                                type: string;
                            };
                            events_delivered: {
                                type: string;
                            };
                            events_failed: {
                                type: string;
                            };
                            average_latency_ms: {
                                type: string;
                            };
                            p95_latency_ms: {
                                type: string;
                            };
                            p99_latency_ms: {
                                type: string;
                            };
                        };
                    };
                    resource_metrics: {
                        type: string;
                        properties: {
                            memory_usage_mb: {
                                type: string;
                            };
                            cpu_usage_percent: {
                                type: string;
                            };
                            network_io_mb: {
                                type: string;
                            };
                            queue_depth: {
                                type: string;
                            };
                        };
                    };
                    error_metrics: {
                        type: string;
                        properties: {
                            error_rate: {
                                type: string;
                            };
                            timeout_rate: {
                                type: string;
                            };
                            dead_letter_rate: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            event_message: {
                $ref: string;
            };
            event_subscription: {
                $ref: string;
            };
            event_delivery_receipt: {
                $ref: string;
            };
            event_bus_metrics: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                event_bus_operation: {
                                    type: string;
                                };
                                message_id: {
                                    $ref: string;
                                };
                                topic_name: {
                                    type: string;
                                };
                                subscriber_id: {
                                    $ref: string;
                                };
                                delivery_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            event_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            message_content_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            event_throughput_api: {
                                type: string;
                                format: string;
                            };
                            message_latency_api: {
                                type: string;
                                format: string;
                            };
                            queue_status_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    event_bus_metrics: {
                        type: string;
                        properties: {
                            track_event_throughput: {
                                type: string;
                            };
                            track_message_latency: {
                                type: string;
                            };
                            track_queue_status: {
                                type: string;
                            };
                            track_subscription_health: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            event_throughput_per_second: {
                                type: string;
                                minimum: number;
                            };
                            message_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            queue_depth_count: {
                                type: string;
                                minimum: number;
                            };
                            delivery_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            subscription_health_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_subscribers_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_deliveries_count: {
                                type: string;
                                minimum: number;
                            };
                            dead_letter_queue_size: {
                                type: string;
                                minimum: number;
                            };
                            average_processing_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    min_throughput_per_second: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_message_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_queue_depth_count: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_delivery_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_dead_letter_queue_size: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                event_bus_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_topic_change: {
                                type: string;
                            };
                            version_on_subscription_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    event_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_message_content: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_events: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            event_bus_details: {
                type: string;
                properties: {
                    bus_topology: {
                        type: string;
                        enum: string[];
                    };
                    message_ordering: {
                        type: string;
                        enum: string[];
                    };
                    delivery_guarantee: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_bus_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly errorHandling: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            error_code: {
                type: string;
                pattern: string;
                description: string;
            };
            error_category: {
                type: string;
                enum: string[];
                description: string;
            };
            error_severity: {
                type: string;
                enum: string[];
                description: string;
            };
            recovery_strategy: {
                type: string;
                enum: string[];
                description: string;
            };
            stack_frame: {
                type: string;
                properties: {
                    module: {
                        $ref: string;
                    };
                    function_name: {
                        type: string;
                    };
                    file_path: {
                        type: string;
                    };
                    line_number: {
                        type: string;
                        minimum: number;
                    };
                    column_number: {
                        type: string;
                        minimum: number;
                    };
                    source_code: {
                        type: string;
                    };
                    error_handling_operation: {
                        type: string;
                        enum: string[];
                    };
                    error_handling_details: {
                        type: string;
                        properties: {
                            error_category: {
                                type: string;
                            };
                            recovery_strategy: {
                                type: string;
                            };
                            escalation_level: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            error_context: {
                type: string;
                properties: {
                    request_id: {
                        $ref: string;
                    };
                    session_id: {
                        $ref: string;
                    };
                    user_id: {
                        type: string;
                    };
                    operation: {
                        type: string;
                    };
                    input_parameters: {
                        type: string;
                    };
                    environment: {
                        type: string;
                        enum: string[];
                    };
                    system_state: {
                        type: string;
                    };
                    correlation_data: {
                        type: string;
                    };
                };
            };
            error_info: {
                type: string;
                properties: {
                    error_id: {
                        $ref: string;
                    };
                    error_code: {
                        $ref: string;
                    };
                    error_category: {
                        $ref: string;
                    };
                    error_severity: {
                        $ref: string;
                    };
                    error_message: {
                        type: string;
                        description: string;
                    };
                    technical_message: {
                        type: string;
                        description: string;
                    };
                    error_details: {
                        type: string;
                        description: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    source_function: {
                        type: string;
                    };
                    stack_trace: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    inner_errors: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    context: {
                        $ref: string;
                    };
                    recovery_suggestions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                strategy: {
                                    $ref: string;
                                };
                                description: {
                                    type: string;
                                };
                                automated: {
                                    type: string;
                                };
                                success_probability: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                            required: string[];
                        };
                    };
                    occurred_at: {
                        $ref: string;
                    };
                    resolved_at: {
                        $ref: string;
                    };
                    resolution_notes: {
                        type: string;
                    };
                };
                required: string[];
            };
            error_propagation: {
                type: string;
                properties: {
                    propagation_id: {
                        $ref: string;
                    };
                    original_error: {
                        $ref: string;
                    };
                    propagation_chain: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                module: {
                                    $ref: string;
                                };
                                function: {
                                    type: string;
                                };
                                transformation: {
                                    type: string;
                                    enum: string[];
                                };
                                added_context: {
                                    type: string;
                                };
                                timestamp: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    final_error: {
                        $ref: string;
                    };
                    propagation_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule_name: {
                                    type: string;
                                };
                                condition: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                transformation_template: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            error_recovery: {
                type: string;
                properties: {
                    recovery_id: {
                        $ref: string;
                    };
                    error_id: {
                        $ref: string;
                    };
                    recovery_strategy: {
                        $ref: string;
                    };
                    recovery_attempts: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                attempt_number: {
                                    type: string;
                                    minimum: number;
                                };
                                strategy_used: {
                                    $ref: string;
                                };
                                attempt_timestamp: {
                                    $ref: string;
                                };
                                success: {
                                    type: string;
                                };
                                duration_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                result_data: {
                                    type: string;
                                };
                                failure_reason: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    final_outcome: {
                        type: string;
                        enum: string[];
                    };
                    recovery_metadata: {
                        type: string;
                        properties: {
                            total_attempts: {
                                type: string;
                            };
                            total_duration_ms: {
                                type: string;
                            };
                            resources_consumed: {
                                type: string;
                            };
                            side_effects: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                    completed_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            error_monitoring: {
                type: string;
                properties: {
                    monitoring_id: {
                        $ref: string;
                    };
                    time_window: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            duration_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                    error_statistics: {
                        type: string;
                        properties: {
                            total_errors: {
                                type: string;
                                minimum: number;
                            };
                            errors_by_category: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                };
                            };
                            errors_by_severity: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                };
                            };
                            errors_by_module: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                };
                            };
                            error_rate: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            recovery_success_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    trending_data: {
                        type: string;
                        properties: {
                            error_trend: {
                                type: string;
                                enum: string[];
                            };
                            trend_confidence: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            predicted_next_hour: {
                                type: string;
                            };
                            anomaly_detected: {
                                type: string;
                            };
                            anomaly_description: {
                                type: string;
                            };
                        };
                    };
                    alert_thresholds: {
                        type: string;
                        properties: {
                            error_rate_threshold: {
                                type: string;
                            };
                            critical_error_threshold: {
                                type: string;
                            };
                            recovery_failure_threshold: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            error_notification: {
                type: string;
                properties: {
                    notification_id: {
                        $ref: string;
                    };
                    error_id: {
                        $ref: string;
                    };
                    notification_type: {
                        type: string;
                        enum: string[];
                    };
                    recipients: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                recipient_type: {
                                    type: string;
                                    enum: string[];
                                };
                                recipient_id: {
                                    type: string;
                                };
                                notification_method: {
                                    type: string;
                                    enum: string[];
                                };
                                priority: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    notification_content: {
                        type: string;
                        properties: {
                            subject: {
                                type: string;
                            };
                            summary: {
                                type: string;
                            };
                            detailed_message: {
                                type: string;
                            };
                            action_items: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            attachments: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        name: {
                                            type: string;
                                        };
                                        type: {
                                            type: string;
                                        };
                                        content: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    delivery_status: {
                        type: string;
                        properties: {
                            sent_at: {
                                $ref: string;
                            };
                            delivery_attempts: {
                                type: string;
                            };
                            successful_deliveries: {
                                type: string;
                            };
                            failed_deliveries: {
                                type: string;
                            };
                            delivery_errors: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            error_info: {
                $ref: string;
            };
            error_propagation: {
                $ref: string;
            };
            error_recovery: {
                $ref: string;
            };
            error_monitoring: {
                $ref: string;
            };
            error_notification: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                error_operation: {
                                    type: string;
                                };
                                error_code: {
                                    $ref: string;
                                };
                                error_category: {
                                    $ref: string;
                                };
                                error_severity: {
                                    $ref: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                recovery_strategy: {
                                    $ref: string;
                                };
                                error_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            error_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            error_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            error_handling_api: {
                                type: string;
                                format: string;
                            };
                            exception_analysis_api: {
                                type: string;
                                format: string;
                            };
                            system_stability_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    error_metrics: {
                        type: string;
                        properties: {
                            track_error_handling: {
                                type: string;
                            };
                            track_exception_analysis: {
                                type: string;
                            };
                            track_system_stability: {
                                type: string;
                            };
                            track_recovery_success: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            error_handling_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            error_frequency_per_hour: {
                                type: string;
                                minimum: number;
                            };
                            recovery_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            system_stability_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            exception_analysis_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_errors_count: {
                                type: string;
                                minimum: number;
                            };
                            critical_errors_count: {
                                type: string;
                                minimum: number;
                            };
                            escalation_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_recovery_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_error_handling_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_error_frequency_per_hour: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_recovery_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_system_stability_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_critical_errors_count: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                error_handling_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_strategy_change: {
                                type: string;
                            };
                            version_on_pattern_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    error_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_error_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_errors: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            error_handling_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            error_handling_details: {
                type: string;
                properties: {
                    error_category: {
                        type: string;
                    };
                    recovery_strategy: {
                        type: string;
                    };
                    escalation_level: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly coordination: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            coordination_type: {
                type: string;
                enum: string[];
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            response_status: {
                type: string;
                enum: string[];
                description: string;
            };
            error_info: {
                type: string;
                properties: {
                    error_code: {
                        type: string;
                        pattern: string;
                        description: string;
                    };
                    error_message: {
                        type: string;
                        description: string;
                    };
                    error_details: {
                        type: string;
                        description: string;
                    };
                    stack_trace: {
                        type: string;
                        items: {
                            type: string;
                        };
                        description: string;
                    };
                };
                required: string[];
            };
            coordination_request: {
                type: string;
                properties: {
                    request_id: {
                        $ref: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    coordination_type: {
                        $ref: string;
                    };
                    operation: {
                        type: string;
                        description: string;
                    };
                    payload: {
                        type: string;
                        description: string;
                    };
                    priority: {
                        $ref: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    retry_count: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    correlation_id: {
                        $ref: string;
                        description: string;
                    };
                    context: {
                        type: string;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            coordination_response: {
                type: string;
                properties: {
                    request_id: {
                        $ref: string;
                    };
                    response_id: {
                        $ref: string;
                    };
                    status: {
                        $ref: string;
                    };
                    result: {
                        type: string;
                        description: string;
                    };
                    error: {
                        $ref: string;
                    };
                    execution_time_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        description: string;
                    };
                    completed_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            coordination_notification: {
                type: string;
                properties: {
                    notification_id: {
                        $ref: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        description: string;
                    };
                    event_type: {
                        type: string;
                        description: string;
                    };
                    payload: {
                        type: string;
                        description: string;
                    };
                    priority: {
                        $ref: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            coordination_request: {
                $ref: string;
            };
            coordination_response: {
                $ref: string;
            };
            coordination_notification: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                coordination_operation: {
                                    type: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                target_module: {
                                    $ref: string;
                                };
                                coordination_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            coordination_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            synchronization_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            coordination_efficiency_api: {
                                type: string;
                                format: string;
                            };
                            synchronization_performance_api: {
                                type: string;
                                format: string;
                            };
                            conflict_resolution_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    coordination_metrics: {
                        type: string;
                        properties: {
                            track_coordination_efficiency: {
                                type: string;
                            };
                            track_synchronization_performance: {
                                type: string;
                            };
                            track_conflict_resolution: {
                                type: string;
                            };
                            track_state_consistency: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            coordination_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            synchronization_efficiency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            conflict_resolution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            state_consistency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            coordination_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_coordinations_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_coordinations_count: {
                                type: string;
                                minimum: number;
                            };
                            lock_contention_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_sync_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_coordination_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_synchronization_efficiency_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_conflict_resolution_time_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_state_consistency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_coordination_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                coordination_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_module_change: {
                                type: string;
                            };
                            version_on_strategy_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    coordination_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_coordination_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_coordinations: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            coordination_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            coordination_details: {
                type: string;
                properties: {
                    coordination_pattern: {
                        type: string;
                        enum: string[];
                    };
                    consensus_algorithm: {
                        type: string;
                        enum: string[];
                    };
                    conflict_resolution: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly orchestration: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            execution_mode: {
                type: string;
                enum: string[];
                description: string;
            };
            workflow_status: {
                type: string;
                enum: string[];
                description: string;
            };
            coordination_step: {
                type: string;
                properties: {
                    step_id: {
                        $ref: string;
                    };
                    step_name: {
                        type: string;
                        description: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    operation: {
                        type: string;
                        description: string;
                    };
                    input_data: {
                        type: string;
                        description: string;
                    };
                    dependencies: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        default: number;
                        description: string;
                    };
                    retry_policy: {
                        type: string;
                        properties: {
                            max_retries: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                default: number;
                            };
                            retry_delay_ms: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                            backoff_multiplier: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                        };
                    };
                    orchestration_details: {
                        type: string;
                        properties: {
                            orchestration_pattern: {
                                type: string;
                                enum: string[];
                            };
                            resource_allocation: {
                                type: string;
                                enum: string[];
                            };
                            failure_handling: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            coordination_plan: {
                type: string;
                properties: {
                    plan_id: {
                        $ref: string;
                    };
                    plan_name: {
                        type: string;
                        description: string;
                    };
                    steps: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        description: string;
                    };
                    execution_mode: {
                        $ref: string;
                    };
                    global_timeout_ms: {
                        type: string;
                        minimum: number;
                        default: number;
                        description: string;
                    };
                    rollback_strategy: {
                        type: string;
                        enum: string[];
                        default: string;
                        description: string;
                    };
                };
                required: string[];
            };
            performance_requirements: {
                type: string;
                properties: {
                    max_execution_time_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    max_memory_mb: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    min_success_rate: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    max_concurrent_steps: {
                        type: string;
                        minimum: number;
                        default: number;
                        description: string;
                    };
                };
            };
            orchestration_request: {
                type: string;
                properties: {
                    workflow_id: {
                        $ref: string;
                    };
                    workflow_name: {
                        type: string;
                        description: string;
                    };
                    coordination_plan: {
                        $ref: string;
                    };
                    global_context: {
                        type: string;
                        description: string;
                    };
                    performance_requirements: {
                        $ref: string;
                    };
                    priority: {
                        type: string;
                        enum: string[];
                        default: string;
                    };
                    created_by: {
                        type: string;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            orchestration_response: {
                type: string;
                properties: {
                    workflow_id: {
                        $ref: string;
                    };
                    execution_id: {
                        $ref: string;
                    };
                    status: {
                        $ref: string;
                    };
                    progress: {
                        type: string;
                        properties: {
                            completed_steps: {
                                type: string;
                                minimum: number;
                            };
                            total_steps: {
                                type: string;
                                minimum: number;
                            };
                            current_step: {
                                $ref: string;
                            };
                            completion_percentage: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                    results: {
                        type: string;
                        description: string;
                    };
                    execution_metrics: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            total_execution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            success_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    error_info: {
                        type: string;
                        properties: {
                            error_code: {
                                type: string;
                                pattern: string;
                            };
                            error_message: {
                                type: string;
                            };
                            failed_step: {
                                $ref: string;
                            };
                            error_details: {
                                type: string;
                            };
                        };
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            orchestration_request: {
                $ref: string;
            };
            orchestration_response: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                orchestration_operation: {
                                    type: string;
                                };
                                workflow_id: {
                                    $ref: string;
                                };
                                step_id: {
                                    $ref: string;
                                };
                                execution_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            orchestration_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            workflow_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            workflow_execution_api: {
                                type: string;
                                format: string;
                            };
                            resource_utilization_api: {
                                type: string;
                                format: string;
                            };
                            orchestration_efficiency_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    orchestration_metrics: {
                        type: string;
                        properties: {
                            track_workflow_execution: {
                                type: string;
                            };
                            track_resource_utilization: {
                                type: string;
                            };
                            track_orchestration_efficiency: {
                                type: string;
                            };
                            track_dependency_resolution: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            workflow_execution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            orchestration_efficiency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            resource_utilization_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            step_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            dependency_resolution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            active_workflows_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_workflows_count: {
                                type: string;
                                minimum: number;
                            };
                            rollback_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_step_execution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_workflow_execution_time_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_orchestration_efficiency_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_resource_utilization_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_step_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_rollback_frequency_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                orchestration_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_workflow_change: {
                                type: string;
                            };
                            version_on_plan_change: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    orchestration_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_workflow_data: {
                                type: string;
                            };
                            index_execution_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_workflows: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            orchestration_details: {
                type: string;
                properties: {
                    orchestration_pattern: {
                        type: string;
                        enum: string[];
                    };
                    resource_allocation: {
                        type: string;
                        enum: string[];
                    };
                    failure_handling: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            orchestration_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly stateSync: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            sync_strategy: {
                type: string;
                enum: string[];
                description: string;
            };
            consistency_level: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            conflict_resolution: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            state_snapshot: {
                type: string;
                properties: {
                    snapshot_id: {
                        $ref: string;
                    };
                    module: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    state_data: {
                        type: string;
                        description: string;
                    };
                    checksum: {
                        type: string;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        properties: {
                            size_bytes: {
                                type: string;
                            };
                            compression: {
                                type: string;
                            };
                            encoding: {
                                type: string;
                            };
                        };
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            state_delta: {
                type: string;
                properties: {
                    delta_id: {
                        $ref: string;
                    };
                    base_version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    target_version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    operations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                operation_type: {
                                    type: string;
                                    enum: string[];
                                };
                                path: {
                                    type: string;
                                    description: string;
                                };
                                old_value: {
                                    description: string;
                                };
                                new_value: {
                                    description: string;
                                };
                                timestamp: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    checksum: {
                        type: string;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            state_sync_request: {
                type: string;
                properties: {
                    sync_id: {
                        $ref: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        description: string;
                    };
                    sync_strategy: {
                        $ref: string;
                    };
                    consistency_level: {
                        $ref: string;
                    };
                    sync_scope: {
                        type: string;
                        properties: {
                            include_paths: {
                                type: string;
                                items: {
                                    type: string;
                                };
                                description: string;
                            };
                            exclude_paths: {
                                type: string;
                                items: {
                                    type: string;
                                };
                                description: string;
                            };
                            filter_conditions: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                    sync_options: {
                        type: string;
                        properties: {
                            use_delta: {
                                type: string;
                                default: boolean;
                                description: string;
                            };
                            compression_enabled: {
                                type: string;
                                default: boolean;
                            };
                            batch_size: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                            retry_count: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                        };
                    };
                    state_snapshot: {
                        $ref: string;
                    };
                    state_delta: {
                        $ref: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            state_sync_response: {
                type: string;
                properties: {
                    sync_id: {
                        $ref: string;
                    };
                    response_id: {
                        $ref: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    sync_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    applied_version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    conflicts: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                path: {
                                    type: string;
                                };
                                conflict_type: {
                                    type: string;
                                    enum: string[];
                                };
                                local_value: {
                                    description: string;
                                };
                                remote_value: {
                                    description: string;
                                };
                                resolution: {
                                    $ref: string;
                                };
                                resolved_value: {
                                    description: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    sync_metrics: {
                        type: string;
                        properties: {
                            records_processed: {
                                type: string;
                            };
                            records_applied: {
                                type: string;
                            };
                            records_skipped: {
                                type: string;
                            };
                            processing_time_ms: {
                                type: string;
                            };
                            data_size_bytes: {
                                type: string;
                            };
                        };
                    };
                    error_info: {
                        type: string;
                        properties: {
                            error_code: {
                                type: string;
                                pattern: string;
                            };
                            error_message: {
                                type: string;
                            };
                            error_details: {
                                type: string;
                            };
                        };
                    };
                    next_sync_version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    completed_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            state_sync_subscription: {
                type: string;
                properties: {
                    subscription_id: {
                        $ref: string;
                    };
                    subscriber_module: {
                        $ref: string;
                    };
                    source_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    sync_patterns: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                path_pattern: {
                                    type: string;
                                    description: string;
                                };
                                sync_strategy: {
                                    $ref: string;
                                };
                                sync_frequency_ms: {
                                    type: string;
                                    minimum: number;
                                    description: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    active: {
                        type: string;
                        default: boolean;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            state_sync_request: {
                $ref: string;
            };
            state_sync_response: {
                $ref: string;
            };
            state_sync_subscription: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                state_sync_operation: {
                                    type: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                target_module: {
                                    $ref: string;
                                };
                                sync_details: {
                                    type: string;
                                };
                                conflict_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            state_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            state_change_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            sync_performance_api: {
                                type: string;
                                format: string;
                            };
                            consistency_analysis_api: {
                                type: string;
                                format: string;
                            };
                            conflict_resolution_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    state_sync_metrics: {
                        type: string;
                        properties: {
                            track_sync_performance: {
                                type: string;
                            };
                            track_consistency_analysis: {
                                type: string;
                            };
                            track_conflict_resolution: {
                                type: string;
                            };
                            track_state_integrity: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            sync_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            consistency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            conflict_resolution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            sync_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            state_integrity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_syncs_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_syncs_count: {
                                type: string;
                                minimum: number;
                            };
                            rollback_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_sync_size_bytes: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_sync_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_consistency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_conflict_resolution_time_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_sync_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_state_integrity_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                state_sync_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_pattern_change: {
                                type: string;
                            };
                            version_on_subscription_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    state_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_state_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_syncs: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            state_sync_details: {
                type: string;
                properties: {
                    sync_strategy: {
                        type: string;
                        enum: string[];
                    };
                    conflict_resolution: {
                        type: string;
                        enum: string[];
                    };
                    consistency_level: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            state_sync_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly transaction: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            isolation_level: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            transaction_state: {
                type: string;
                enum: string[];
                description: string;
            };
            rollback_strategy: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            participant_info: {
                type: string;
                properties: {
                    module: {
                        $ref: string;
                    };
                    participant_id: {
                        $ref: string;
                    };
                    resource_locks: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                resource_id: {
                                    type: string;
                                };
                                lock_type: {
                                    type: string;
                                    enum: string[];
                                };
                                acquired_at: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    state: {
                        $ref: string;
                    };
                    last_heartbeat: {
                        $ref: string;
                    };
                    compensation_data: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
            };
            transaction_context: {
                type: string;
                properties: {
                    transaction_id: {
                        $ref: string;
                    };
                    parent_transaction_id: {
                        $ref: string;
                        description: string;
                    };
                    isolation_level: {
                        $ref: string;
                    };
                    participating_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        description: string;
                    };
                    participants: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    transaction_state: {
                        $ref: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    rollback_strategy: {
                        $ref: string;
                    };
                    coordinator_module: {
                        $ref: string;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            transaction_operation: {
                type: string;
                properties: {
                    operation_id: {
                        $ref: string;
                    };
                    transaction_id: {
                        $ref: string;
                    };
                    operation_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    operation_data: {
                        type: string;
                        description: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        default: number;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            transaction_result: {
                type: string;
                properties: {
                    operation_id: {
                        $ref: string;
                    };
                    transaction_id: {
                        $ref: string;
                    };
                    result_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    result_data: {
                        type: string;
                        description: string;
                    };
                    error_info: {
                        type: string;
                        properties: {
                            error_code: {
                                type: string;
                                pattern: string;
                            };
                            error_message: {
                                type: string;
                            };
                            error_details: {
                                type: string;
                            };
                        };
                    };
                    execution_time_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    resource_usage: {
                        type: string;
                        properties: {
                            memory_mb: {
                                type: string;
                            };
                            cpu_time_ms: {
                                type: string;
                            };
                            io_operations: {
                                type: string;
                            };
                        };
                    };
                    completed_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            compensation_action: {
                type: string;
                properties: {
                    action_id: {
                        $ref: string;
                    };
                    transaction_id: {
                        $ref: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    compensation_operation: {
                        type: string;
                        description: string;
                    };
                    compensation_data: {
                        type: string;
                        description: string;
                    };
                    execution_order: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        default: number;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            transaction_context: {
                $ref: string;
            };
            transaction_operation: {
                $ref: string;
            };
            transaction_result: {
                $ref: string;
            };
            compensation_action: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                transaction_operation: {
                                    type: string;
                                };
                                transaction_id: {
                                    $ref: string;
                                };
                                participant_modules: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                isolation_level: {
                                    $ref: string;
                                };
                                transaction_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            transaction_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            transaction_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            transaction_performance_api: {
                                type: string;
                                format: string;
                            };
                            deadlock_detection_api: {
                                type: string;
                                format: string;
                            };
                            acid_compliance_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    transaction_metrics: {
                        type: string;
                        properties: {
                            track_transaction_performance: {
                                type: string;
                            };
                            track_deadlock_detection: {
                                type: string;
                            };
                            track_acid_compliance: {
                                type: string;
                            };
                            track_lock_contention: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            transaction_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            transaction_throughput_per_second: {
                                type: string;
                                minimum: number;
                            };
                            deadlock_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            acid_compliance_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            lock_contention_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_transactions_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_transactions_count: {
                                type: string;
                                minimum: number;
                            };
                            rollback_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_lock_wait_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_transaction_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_transaction_throughput_per_second: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_deadlock_frequency_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_acid_compliance_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_lock_contention_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                transaction_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_isolation_change: {
                                type: string;
                            };
                            version_on_participant_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    transaction_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_transaction_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_transactions: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            transaction_details: {
                type: string;
                properties: {
                    isolation_level: {
                        type: string;
                        enum: string[];
                    };
                    timeout_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    rollback_strategy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly protocolVersion: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            compatibility_level: {
                type: string;
                enum: string[];
                description: string;
            };
            module_version_info: {
                type: string;
                properties: {
                    module_name: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    current_version: {
                        $ref: string;
                    };
                    supported_versions: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    deprecated_versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version: {
                                    $ref: string;
                                };
                                deprecation_date: {
                                    $ref: string;
                                };
                                removal_date: {
                                    $ref: string;
                                };
                                migration_guide: {
                                    type: string;
                                    description: string;
                                };
                                protocol_version_operation: {
                                    type: string;
                                    enum: string[];
                                };
                                protocol_version_details: {
                                    type: string;
                                    properties: {
                                        compatibility_mode: {
                                            type: string;
                                            enum: string[];
                                        };
                                        migration_strategy: {
                                            type: string;
                                        };
                                        rollback_support: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    breaking_changes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version: {
                                    $ref: string;
                                };
                                change_description: {
                                    type: string;
                                };
                                impact_level: {
                                    type: string;
                                    enum: string[];
                                };
                                migration_required: {
                                    type: string;
                                };
                                affected_apis: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            compatibility_matrix: {
                type: string;
                properties: {
                    matrix_version: {
                        $ref: string;
                    };
                    compatibility_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                source_module: {
                                    type: string;
                                };
                                source_version: {
                                    $ref: string;
                                };
                                target_module: {
                                    type: string;
                                };
                                target_version_range: {
                                    type: string;
                                    description: string;
                                };
                                compatibility_level: {
                                    $ref: string;
                                };
                                notes: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    global_constraints: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                constraint_type: {
                                    type: string;
                                    enum: string[];
                                };
                                modules: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                version_constraint: {
                                    type: string;
                                };
                                reason: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            upgrade_path: {
                type: string;
                properties: {
                    path_id: {
                        $ref: string;
                    };
                    from_version: {
                        $ref: string;
                    };
                    to_version: {
                        $ref: string;
                    };
                    upgrade_steps: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                step_number: {
                                    type: string;
                                    minimum: number;
                                };
                                step_description: {
                                    type: string;
                                };
                                step_type: {
                                    type: string;
                                    enum: string[];
                                };
                                affected_modules: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                automation_script: {
                                    type: string;
                                    description: string;
                                };
                                manual_steps: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                validation_criteria: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                rollback_procedure: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    estimated_duration_minutes: {
                        type: string;
                        minimum: number;
                    };
                    risk_level: {
                        type: string;
                        enum: string[];
                    };
                    prerequisites: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    post_upgrade_validation: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                required: string[];
            };
            deprecation_schedule: {
                type: string;
                properties: {
                    schedule_version: {
                        $ref: string;
                    };
                    deprecation_policies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                policy_name: {
                                    type: string;
                                };
                                deprecation_period_months: {
                                    type: string;
                                    minimum: number;
                                };
                                notification_schedule: {
                                    type: string;
                                    items: {
                                        type: string;
                                        properties: {
                                            notification_type: {
                                                type: string;
                                                enum: string[];
                                            };
                                            months_before_removal: {
                                                type: string;
                                                minimum: number;
                                            };
                                        };
                                        required: string[];
                                    };
                                };
                                affected_features: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    scheduled_deprecations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                item_type: {
                                    type: string;
                                    enum: string[];
                                };
                                item_identifier: {
                                    type: string;
                                };
                                deprecation_date: {
                                    $ref: string;
                                };
                                removal_date: {
                                    $ref: string;
                                };
                                replacement: {
                                    type: string;
                                };
                                migration_guide: {
                                    type: string;
                                };
                                impact_assessment: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            protocol_version_info: {
                type: string;
                properties: {
                    protocol_suite_version: {
                        $ref: string;
                    };
                    protocol_suite_name: {
                        type: string;
                        const: string;
                    };
                    release_date: {
                        $ref: string;
                    };
                    module_versions: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                    };
                    compatibility_matrix: {
                        $ref: string;
                    };
                    upgrade_paths: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    deprecation_schedule: {
                        $ref: string;
                    };
                    release_notes: {
                        type: string;
                        properties: {
                            new_features: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            improvements: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            bug_fixes: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            breaking_changes: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            security_updates: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                    metadata: {
                        type: string;
                        properties: {
                            maintainers: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            repository_url: {
                                type: string;
                                format: string;
                            };
                            documentation_url: {
                                type: string;
                                format: string;
                            };
                            support_contact: {
                                type: string;
                            };
                            license: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            protocol_version_info: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                version_operation: {
                                    type: string;
                                };
                                source_version: {
                                    $ref: string;
                                };
                                target_version: {
                                    $ref: string;
                                };
                                module_name: {
                                    type: string;
                                };
                                compatibility_result: {
                                    $ref: string;
                                };
                                version_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            version_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            version_change_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            version_management_api: {
                                type: string;
                                format: string;
                            };
                            compatibility_analysis_api: {
                                type: string;
                                format: string;
                            };
                            protocol_evolution_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    version_metrics: {
                        type: string;
                        properties: {
                            track_version_management: {
                                type: string;
                            };
                            track_compatibility_analysis: {
                                type: string;
                            };
                            track_protocol_evolution: {
                                type: string;
                            };
                            track_migration_progress: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            version_check_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            compatibility_check_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            migration_completion_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            protocol_evolution_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            version_adoption_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_versions_count: {
                                type: string;
                                minimum: number;
                            };
                            deprecated_versions_count: {
                                type: string;
                                minimum: number;
                            };
                            compatibility_conflicts_count: {
                                type: string;
                                minimum: number;
                            };
                            average_migration_time_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_version_check_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_compatibility_check_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_migration_completion_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_protocol_evolution_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_compatibility_conflicts_count: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                protocol_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_protocol_change: {
                                type: string;
                            };
                            version_on_compatibility_change: {
                                type: string;
                            };
                            version_on_deprecation_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    version_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_version_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_versions: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            protocol_version_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            protocol_version_details: {
                type: string;
                properties: {
                    compatibility_mode: {
                        type: string;
                        enum: string[];
                    };
                    migration_strategy: {
                        type: string;
                    };
                    rollback_support: {
                        type: string;
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
    };
};
export declare const SchemaMap: {
    readonly security: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            security_level: {
                type: string;
                enum: string[];
                description: string;
            };
            authentication_method: {
                type: string;
                enum: string[];
                description: string;
            };
            encryption_algorithm: {
                type: string;
                enum: string[];
                description: string;
            };
            user_identity: {
                type: string;
                properties: {
                    user_id: {
                        type: string;
                    };
                    username: {
                        type: string;
                    };
                    email: {
                        type: string;
                        format: string;
                    };
                    display_name: {
                        type: string;
                    };
                    user_type: {
                        type: string;
                        enum: string[];
                    };
                    organization: {
                        type: string;
                    };
                    department: {
                        type: string;
                    };
                    roles: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    groups: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    attributes: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
            };
            permission: {
                type: string;
                properties: {
                    permission_id: {
                        $ref: string;
                    };
                    resource_type: {
                        type: string;
                        enum: string[];
                    };
                    resource_identifier: {
                        type: string;
                    };
                    actions: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                        minItems: number;
                    };
                    conditions: {
                        type: string;
                        properties: {
                            time_restrictions: {
                                type: string;
                                properties: {
                                    start_time: {
                                        $ref: string;
                                    };
                                    end_time: {
                                        $ref: string;
                                    };
                                    allowed_hours: {
                                        type: string;
                                        items: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    allowed_days: {
                                        type: string;
                                        items: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                };
                            };
                            ip_restrictions: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            context_requirements: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                    granted_at: {
                        $ref: string;
                    };
                    expires_at: {
                        $ref: string;
                    };
                    granted_by: {
                        type: string;
                    };
                };
                required: string[];
            };
            encryption_info: {
                type: string;
                properties: {
                    algorithm: {
                        $ref: string;
                    };
                    key_id: {
                        type: string;
                    };
                    key_version: {
                        type: string;
                    };
                    initialization_vector: {
                        type: string;
                    };
                    key_derivation: {
                        type: string;
                        properties: {
                            method: {
                                type: string;
                                enum: string[];
                            };
                            iterations: {
                                type: string;
                                minimum: number;
                            };
                            salt: {
                                type: string;
                            };
                        };
                    };
                    signature: {
                        type: string;
                    };
                    certificate_chain: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                required: string[];
            };
            audit_entry: {
                type: string;
                properties: {
                    audit_id: {
                        $ref: string;
                    };
                    event_type: {
                        type: string;
                        enum: string[];
                    };
                    user_identity: {
                        $ref: string;
                    };
                    resource_accessed: {
                        type: string;
                    };
                    action_performed: {
                        type: string;
                    };
                    result: {
                        type: string;
                        enum: string[];
                    };
                    source_ip: {
                        type: string;
                    };
                    user_agent: {
                        type: string;
                    };
                    session_id: {
                        $ref: string;
                    };
                    request_id: {
                        $ref: string;
                    };
                    additional_data: {
                        type: string;
                    };
                    risk_score: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    timestamp: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            security_context: {
                type: string;
                properties: {
                    context_id: {
                        $ref: string;
                    };
                    session_id: {
                        $ref: string;
                    };
                    user_identity: {
                        $ref: string;
                    };
                    authentication_token: {
                        type: string;
                        properties: {
                            token_type: {
                                type: string;
                                enum: string[];
                            };
                            token_value: {
                                type: string;
                            };
                            issued_at: {
                                $ref: string;
                            };
                            expires_at: {
                                $ref: string;
                            };
                            issuer: {
                                type: string;
                            };
                            audience: {
                                type: string;
                            };
                            scopes: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                    permissions: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    security_level: {
                        $ref: string;
                    };
                    encryption_info: {
                        $ref: string;
                    };
                    audit_trail: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    security_policies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                policy_id: {
                                    type: string;
                                };
                                policy_name: {
                                    type: string;
                                };
                                policy_version: {
                                    type: string;
                                };
                                enforcement_level: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    threat_indicators: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                indicator_type: {
                                    type: string;
                                    enum: string[];
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                                description: {
                                    type: string;
                                };
                                detected_at: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            security_event: {
                type: string;
                properties: {
                    event_id: {
                        $ref: string;
                    };
                    event_type: {
                        type: string;
                        enum: string[];
                    };
                    severity: {
                        type: string;
                        enum: string[];
                    };
                    source_module: {
                        $ref: string;
                    };
                    affected_resources: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    security_context: {
                        $ref: string;
                    };
                    event_details: {
                        type: string;
                        description: string;
                    };
                    mitigation_actions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                action_type: {
                                    type: string;
                                    enum: string[];
                                };
                                action_description: {
                                    type: string;
                                };
                                automated: {
                                    type: string;
                                };
                                executed_at: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    investigation_status: {
                        type: string;
                        enum: string[];
                    };
                    occurred_at: {
                        $ref: string;
                    };
                    resolved_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            security_policy: {
                type: string;
                properties: {
                    policy_id: {
                        $ref: string;
                    };
                    policy_name: {
                        type: string;
                    };
                    policy_version: {
                        type: string;
                    };
                    policy_type: {
                        type: string;
                        enum: string[];
                    };
                    target_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    policy_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule_id: {
                                    type: string;
                                };
                                rule_name: {
                                    type: string;
                                };
                                condition: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                parameters: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    enforcement_level: {
                        type: string;
                        enum: string[];
                    };
                    compliance_frameworks: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    effective_date: {
                        $ref: string;
                    };
                    expiration_date: {
                        $ref: string;
                    };
                    created_by: {
                        type: string;
                    };
                    approved_by: {
                        type: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            security_context: {
                $ref: string;
            };
            security_event: {
                $ref: string;
            };
            security_policy: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                security_operation: {
                                    type: string;
                                };
                                security_level: {
                                    $ref: string;
                                };
                                authentication_method: {
                                    $ref: string;
                                };
                                encryption_algorithm: {
                                    $ref: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                target_resource: {
                                    type: string;
                                };
                                security_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            security_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            security_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            security_monitoring_api: {
                                type: string;
                                format: string;
                            };
                            threat_analysis_api: {
                                type: string;
                                format: string;
                            };
                            compliance_monitoring_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    security_metrics: {
                        type: string;
                        properties: {
                            track_security_monitoring: {
                                type: string;
                            };
                            track_threat_analysis: {
                                type: string;
                            };
                            track_compliance_monitoring: {
                                type: string;
                            };
                            track_access_control: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            security_check_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            authentication_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            authorization_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            threat_detection_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            compliance_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_sessions_count: {
                                type: string;
                                minimum: number;
                            };
                            security_violations_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_authentications_count: {
                                type: string;
                                minimum: number;
                            };
                            average_encryption_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_security_check_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_authentication_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_authorization_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_threat_detection_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_security_violations_count: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                security_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_policy_change: {
                                type: string;
                            };
                            version_on_permission_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    security_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_security_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_security_events: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            security_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            security_details: {
                type: string;
                properties: {
                    security_level: {
                        type: string;
                        enum: string[];
                    };
                    encryption_algorithm: {
                        type: string;
                        enum: string[];
                    };
                    authentication_method: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly performance: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            metric_type: {
                type: string;
                enum: string[];
                description: string;
            };
            alert_level: {
                type: string;
                enum: string[];
                description: string;
            };
            sla_status: {
                type: string;
                enum: string[];
                description: string;
            };
            performance_baseline: {
                type: string;
                properties: {
                    baseline_id: {
                        $ref: string;
                    };
                    baseline_name: {
                        type: string;
                    };
                    module_name: {
                        $ref: string;
                    };
                    baseline_period: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            duration_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                    baseline_metrics: {
                        type: string;
                        properties: {
                            response_time_p50: {
                                type: string;
                            };
                            response_time_p95: {
                                type: string;
                            };
                            response_time_p99: {
                                type: string;
                            };
                            throughput_avg: {
                                type: string;
                            };
                            throughput_peak: {
                                type: string;
                            };
                            error_rate: {
                                type: string;
                            };
                            cpu_usage_avg: {
                                type: string;
                            };
                            memory_usage_avg: {
                                type: string;
                            };
                            disk_io_avg: {
                                type: string;
                            };
                            network_io_avg: {
                                type: string;
                            };
                        };
                    };
                    confidence_level: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    sample_size: {
                        type: string;
                        minimum: number;
                    };
                    created_at: {
                        $ref: string;
                    };
                    created_by: {
                        type: string;
                    };
                };
                required: string[];
            };
            sla_definition: {
                type: string;
                properties: {
                    sla_id: {
                        $ref: string;
                    };
                    sla_name: {
                        type: string;
                    };
                    module_name: {
                        $ref: string;
                    };
                    sla_type: {
                        type: string;
                        enum: string[];
                    };
                    target_value: {
                        type: string;
                    };
                    target_unit: {
                        type: string;
                    };
                    measurement_period: {
                        type: string;
                        enum: string[];
                    };
                    calculation_method: {
                        type: string;
                        enum: string[];
                    };
                    violation_threshold: {
                        type: string;
                        properties: {
                            warning_percentage: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            critical_percentage: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            consecutive_violations: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    business_impact: {
                        type: string;
                        enum: string[];
                    };
                    penalty_clauses: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                violation_level: {
                                    type: string;
                                };
                                penalty_type: {
                                    type: string;
                                    enum: string[];
                                };
                                penalty_amount: {
                                    type: string;
                                };
                                penalty_description: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    effective_date: {
                        $ref: string;
                    };
                    expiration_date: {
                        $ref: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            performance_alert: {
                type: string;
                properties: {
                    alert_id: {
                        $ref: string;
                    };
                    alert_name: {
                        type: string;
                    };
                    alert_type: {
                        type: string;
                        enum: string[];
                    };
                    alert_level: {
                        $ref: string;
                    };
                    module_name: {
                        $ref: string;
                    };
                    metric_name: {
                        type: string;
                    };
                    current_value: {
                        type: string;
                    };
                    threshold_value: {
                        type: string;
                    };
                    deviation_percentage: {
                        type: string;
                    };
                    alert_condition: {
                        type: string;
                    };
                    alert_description: {
                        type: string;
                    };
                    affected_operations: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    impact_assessment: {
                        type: string;
                        properties: {
                            user_impact: {
                                type: string;
                                enum: string[];
                            };
                            business_impact: {
                                type: string;
                                enum: string[];
                            };
                            estimated_affected_users: {
                                type: string;
                            };
                            estimated_revenue_impact: {
                                type: string;
                            };
                        };
                    };
                    recommended_actions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                action_type: {
                                    type: string;
                                    enum: string[];
                                };
                                action_description: {
                                    type: string;
                                };
                                priority: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                estimated_time_minutes: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    alert_status: {
                        type: string;
                        enum: string[];
                    };
                    triggered_at: {
                        $ref: string;
                    };
                    acknowledged_at: {
                        $ref: string;
                    };
                    resolved_at: {
                        $ref: string;
                    };
                    acknowledged_by: {
                        type: string;
                    };
                    resolved_by: {
                        type: string;
                    };
                };
                required: string[];
            };
            performance_report: {
                type: string;
                properties: {
                    report_id: {
                        $ref: string;
                    };
                    report_name: {
                        type: string;
                    };
                    report_type: {
                        type: string;
                        enum: string[];
                    };
                    report_period: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                    modules_covered: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    performance_summary: {
                        type: string;
                        properties: {
                            overall_availability: {
                                type: string;
                            };
                            average_response_time: {
                                type: string;
                            };
                            peak_throughput: {
                                type: string;
                            };
                            total_requests: {
                                type: string;
                            };
                            total_errors: {
                                type: string;
                            };
                            error_rate: {
                                type: string;
                            };
                            sla_compliance_rate: {
                                type: string;
                            };
                        };
                    };
                    module_performance: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                module_name: {
                                    $ref: string;
                                };
                                availability: {
                                    type: string;
                                };
                                response_time_p95: {
                                    type: string;
                                };
                                throughput_avg: {
                                    type: string;
                                };
                                error_rate: {
                                    type: string;
                                };
                                sla_status: {
                                    $ref: string;
                                };
                                key_incidents: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    sla_compliance: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                sla_name: {
                                    type: string;
                                };
                                target_value: {
                                    type: string;
                                };
                                actual_value: {
                                    type: string;
                                };
                                compliance_percentage: {
                                    type: string;
                                };
                                status: {
                                    $ref: string;
                                };
                                violations_count: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    trends_analysis: {
                        type: string;
                        properties: {
                            performance_trend: {
                                type: string;
                                enum: string[];
                            };
                            trend_confidence: {
                                type: string;
                            };
                            key_observations: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            recommendations: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                    generated_at: {
                        $ref: string;
                    };
                    generated_by: {
                        type: string;
                    };
                    report_format: {
                        type: string;
                        enum: string[];
                    };
                };
                required: string[];
            };
            capacity_planning: {
                type: string;
                properties: {
                    planning_id: {
                        $ref: string;
                    };
                    planning_name: {
                        type: string;
                    };
                    module_name: {
                        $ref: string;
                    };
                    current_capacity: {
                        type: string;
                        properties: {
                            max_throughput: {
                                type: string;
                            };
                            max_concurrent_users: {
                                type: string;
                            };
                            cpu_cores: {
                                type: string;
                            };
                            memory_gb: {
                                type: string;
                            };
                            storage_gb: {
                                type: string;
                            };
                            network_bandwidth_mbps: {
                                type: string;
                            };
                        };
                    };
                    usage_patterns: {
                        type: string;
                        properties: {
                            peak_usage_times: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            seasonal_variations: {
                                type: string;
                            };
                            growth_rate_monthly: {
                                type: string;
                            };
                            usage_distribution: {
                                type: string;
                            };
                        };
                    };
                    capacity_projections: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                projection_period: {
                                    type: string;
                                };
                                projected_load: {
                                    type: string;
                                };
                                required_capacity: {
                                    type: string;
                                };
                                capacity_gap: {
                                    type: string;
                                };
                                scaling_recommendations: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    scaling_strategies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                strategy_name: {
                                    type: string;
                                };
                                strategy_type: {
                                    type: string;
                                    enum: string[];
                                };
                                trigger_conditions: {
                                    type: string;
                                };
                                scaling_actions: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                estimated_cost: {
                                    type: string;
                                };
                                implementation_time: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            monitoring_overhead_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            performance_analysis_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            sla_compliance_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            capacity_prediction_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            performance_optimization_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_monitors_count: {
                                type: string;
                                minimum: number;
                            };
                            alert_frequency_per_hour: {
                                type: string;
                                minimum: number;
                            };
                            false_positive_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_response_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_monitoring_overhead_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_performance_analysis_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_sla_compliance_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_capacity_prediction_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_false_positive_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            performance_baseline: {
                $ref: string;
            };
            sla_definition: {
                $ref: string;
            };
            performance_alert: {
                $ref: string;
            };
            performance_report: {
                $ref: string;
            };
            capacity_planning: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                performance_operation: {
                                    type: string;
                                };
                                metric_name: {
                                    type: string;
                                };
                                metric_value: {
                                    type: string;
                                };
                                alert_level: {
                                    $ref: string;
                                };
                                sla_status: {
                                    $ref: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                performance_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            performance_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            performance_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            performance_monitoring_api: {
                                type: string;
                                format: string;
                            };
                            performance_analysis_api: {
                                type: string;
                                format: string;
                            };
                            sla_monitoring_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    performance_metrics: {
                        type: string;
                        properties: {
                            track_performance_monitoring: {
                                type: string;
                            };
                            track_performance_analysis: {
                                type: string;
                            };
                            track_sla_monitoring: {
                                type: string;
                            };
                            track_capacity_planning: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                performance_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_baseline_change: {
                                type: string;
                            };
                            version_on_sla_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    performance_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_performance_data: {
                                type: string;
                            };
                            index_enterprise_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_metrics: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            performance_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            performance_details: {
                type: string;
                properties: {
                    collection_strategy: {
                        type: string;
                        enum: string[];
                    };
                    aggregation_level: {
                        type: string;
                        enum: string[];
                    };
                    retention_policy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly eventBus: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            event_type: {
                type: string;
                enum: string[];
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            delivery_mode: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            routing_strategy: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            event_message: {
                type: string;
                properties: {
                    event_id: {
                        $ref: string;
                    };
                    event_type: {
                        $ref: string;
                    };
                    event_name: {
                        type: string;
                        description: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    payload: {
                        type: string;
                        description: string;
                    };
                    routing_key: {
                        type: string;
                        description: string;
                    };
                    headers: {
                        type: string;
                        description: string;
                    };
                    priority: {
                        $ref: string;
                    };
                    delivery_mode: {
                        $ref: string;
                    };
                    ttl_ms: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    correlation_id: {
                        $ref: string;
                        description: string;
                    };
                    reply_to: {
                        type: string;
                        description: string;
                    };
                    trace_context: {
                        type: string;
                        properties: {
                            trace_id: {
                                $ref: string;
                            };
                            span_id: {
                                $ref: string;
                            };
                            parent_span_id: {
                                $ref: string;
                            };
                        };
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    expires_at: {
                        $ref: string;
                    };
                    event_bus_details: {
                        type: string;
                        properties: {
                            bus_topology: {
                                type: string;
                                enum: string[];
                            };
                            message_ordering: {
                                type: string;
                                enum: string[];
                            };
                            delivery_guarantee: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            event_subscription: {
                type: string;
                properties: {
                    subscription_id: {
                        $ref: string;
                    };
                    subscriber_module: {
                        $ref: string;
                    };
                    event_patterns: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_type: {
                                    $ref: string;
                                };
                                event_name_pattern: {
                                    type: string;
                                    description: string;
                                };
                                source_modules: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                    description: string;
                                };
                                routing_key_pattern: {
                                    type: string;
                                    description: string;
                                };
                                filter_conditions: {
                                    type: string;
                                    description: string;
                                };
                            };
                            required: string[];
                        };
                        minItems: number;
                    };
                    delivery_options: {
                        type: string;
                        properties: {
                            max_retry_count: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                default: number;
                            };
                            retry_delay_ms: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                            dead_letter_enabled: {
                                type: string;
                                default: boolean;
                            };
                            batch_size: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                default: number;
                            };
                            batch_timeout_ms: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                        };
                    };
                    active: {
                        type: string;
                        default: boolean;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            event_delivery_receipt: {
                type: string;
                properties: {
                    receipt_id: {
                        $ref: string;
                    };
                    event_id: {
                        $ref: string;
                    };
                    subscription_id: {
                        $ref: string;
                    };
                    delivery_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    delivery_attempt: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    processing_time_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    error_info: {
                        type: string;
                        properties: {
                            error_code: {
                                type: string;
                                pattern: string;
                            };
                            error_message: {
                                type: string;
                            };
                            error_details: {
                                type: string;
                            };
                        };
                    };
                    delivered_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            event_bus_metrics: {
                type: string;
                properties: {
                    metric_id: {
                        $ref: string;
                    };
                    time_window_start: {
                        $ref: string;
                    };
                    time_window_end: {
                        $ref: string;
                    };
                    throughput_metrics: {
                        type: string;
                        properties: {
                            events_published: {
                                type: string;
                            };
                            events_delivered: {
                                type: string;
                            };
                            events_failed: {
                                type: string;
                            };
                            average_latency_ms: {
                                type: string;
                            };
                            p95_latency_ms: {
                                type: string;
                            };
                            p99_latency_ms: {
                                type: string;
                            };
                        };
                    };
                    resource_metrics: {
                        type: string;
                        properties: {
                            memory_usage_mb: {
                                type: string;
                            };
                            cpu_usage_percent: {
                                type: string;
                            };
                            network_io_mb: {
                                type: string;
                            };
                            queue_depth: {
                                type: string;
                            };
                        };
                    };
                    error_metrics: {
                        type: string;
                        properties: {
                            error_rate: {
                                type: string;
                            };
                            timeout_rate: {
                                type: string;
                            };
                            dead_letter_rate: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            event_message: {
                $ref: string;
            };
            event_subscription: {
                $ref: string;
            };
            event_delivery_receipt: {
                $ref: string;
            };
            event_bus_metrics: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                event_bus_operation: {
                                    type: string;
                                };
                                message_id: {
                                    $ref: string;
                                };
                                topic_name: {
                                    type: string;
                                };
                                subscriber_id: {
                                    $ref: string;
                                };
                                delivery_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            event_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            message_content_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            event_throughput_api: {
                                type: string;
                                format: string;
                            };
                            message_latency_api: {
                                type: string;
                                format: string;
                            };
                            queue_status_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    event_bus_metrics: {
                        type: string;
                        properties: {
                            track_event_throughput: {
                                type: string;
                            };
                            track_message_latency: {
                                type: string;
                            };
                            track_queue_status: {
                                type: string;
                            };
                            track_subscription_health: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            event_throughput_per_second: {
                                type: string;
                                minimum: number;
                            };
                            message_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            queue_depth_count: {
                                type: string;
                                minimum: number;
                            };
                            delivery_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            subscription_health_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_subscribers_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_deliveries_count: {
                                type: string;
                                minimum: number;
                            };
                            dead_letter_queue_size: {
                                type: string;
                                minimum: number;
                            };
                            average_processing_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    min_throughput_per_second: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_message_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_queue_depth_count: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_delivery_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_dead_letter_queue_size: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                event_bus_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_topic_change: {
                                type: string;
                            };
                            version_on_subscription_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    event_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_message_content: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_events: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            event_bus_details: {
                type: string;
                properties: {
                    bus_topology: {
                        type: string;
                        enum: string[];
                    };
                    message_ordering: {
                        type: string;
                        enum: string[];
                    };
                    delivery_guarantee: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_bus_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly errorHandling: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            error_code: {
                type: string;
                pattern: string;
                description: string;
            };
            error_category: {
                type: string;
                enum: string[];
                description: string;
            };
            error_severity: {
                type: string;
                enum: string[];
                description: string;
            };
            recovery_strategy: {
                type: string;
                enum: string[];
                description: string;
            };
            stack_frame: {
                type: string;
                properties: {
                    module: {
                        $ref: string;
                    };
                    function_name: {
                        type: string;
                    };
                    file_path: {
                        type: string;
                    };
                    line_number: {
                        type: string;
                        minimum: number;
                    };
                    column_number: {
                        type: string;
                        minimum: number;
                    };
                    source_code: {
                        type: string;
                    };
                    error_handling_operation: {
                        type: string;
                        enum: string[];
                    };
                    error_handling_details: {
                        type: string;
                        properties: {
                            error_category: {
                                type: string;
                            };
                            recovery_strategy: {
                                type: string;
                            };
                            escalation_level: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            error_context: {
                type: string;
                properties: {
                    request_id: {
                        $ref: string;
                    };
                    session_id: {
                        $ref: string;
                    };
                    user_id: {
                        type: string;
                    };
                    operation: {
                        type: string;
                    };
                    input_parameters: {
                        type: string;
                    };
                    environment: {
                        type: string;
                        enum: string[];
                    };
                    system_state: {
                        type: string;
                    };
                    correlation_data: {
                        type: string;
                    };
                };
            };
            error_info: {
                type: string;
                properties: {
                    error_id: {
                        $ref: string;
                    };
                    error_code: {
                        $ref: string;
                    };
                    error_category: {
                        $ref: string;
                    };
                    error_severity: {
                        $ref: string;
                    };
                    error_message: {
                        type: string;
                        description: string;
                    };
                    technical_message: {
                        type: string;
                        description: string;
                    };
                    error_details: {
                        type: string;
                        description: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    source_function: {
                        type: string;
                    };
                    stack_trace: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    inner_errors: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    context: {
                        $ref: string;
                    };
                    recovery_suggestions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                strategy: {
                                    $ref: string;
                                };
                                description: {
                                    type: string;
                                };
                                automated: {
                                    type: string;
                                };
                                success_probability: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                            required: string[];
                        };
                    };
                    occurred_at: {
                        $ref: string;
                    };
                    resolved_at: {
                        $ref: string;
                    };
                    resolution_notes: {
                        type: string;
                    };
                };
                required: string[];
            };
            error_propagation: {
                type: string;
                properties: {
                    propagation_id: {
                        $ref: string;
                    };
                    original_error: {
                        $ref: string;
                    };
                    propagation_chain: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                module: {
                                    $ref: string;
                                };
                                function: {
                                    type: string;
                                };
                                transformation: {
                                    type: string;
                                    enum: string[];
                                };
                                added_context: {
                                    type: string;
                                };
                                timestamp: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    final_error: {
                        $ref: string;
                    };
                    propagation_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule_name: {
                                    type: string;
                                };
                                condition: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                transformation_template: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            error_recovery: {
                type: string;
                properties: {
                    recovery_id: {
                        $ref: string;
                    };
                    error_id: {
                        $ref: string;
                    };
                    recovery_strategy: {
                        $ref: string;
                    };
                    recovery_attempts: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                attempt_number: {
                                    type: string;
                                    minimum: number;
                                };
                                strategy_used: {
                                    $ref: string;
                                };
                                attempt_timestamp: {
                                    $ref: string;
                                };
                                success: {
                                    type: string;
                                };
                                duration_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                result_data: {
                                    type: string;
                                };
                                failure_reason: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    final_outcome: {
                        type: string;
                        enum: string[];
                    };
                    recovery_metadata: {
                        type: string;
                        properties: {
                            total_attempts: {
                                type: string;
                            };
                            total_duration_ms: {
                                type: string;
                            };
                            resources_consumed: {
                                type: string;
                            };
                            side_effects: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                    completed_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            error_monitoring: {
                type: string;
                properties: {
                    monitoring_id: {
                        $ref: string;
                    };
                    time_window: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            duration_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                    error_statistics: {
                        type: string;
                        properties: {
                            total_errors: {
                                type: string;
                                minimum: number;
                            };
                            errors_by_category: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                };
                            };
                            errors_by_severity: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                };
                            };
                            errors_by_module: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                };
                            };
                            error_rate: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            recovery_success_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    trending_data: {
                        type: string;
                        properties: {
                            error_trend: {
                                type: string;
                                enum: string[];
                            };
                            trend_confidence: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            predicted_next_hour: {
                                type: string;
                            };
                            anomaly_detected: {
                                type: string;
                            };
                            anomaly_description: {
                                type: string;
                            };
                        };
                    };
                    alert_thresholds: {
                        type: string;
                        properties: {
                            error_rate_threshold: {
                                type: string;
                            };
                            critical_error_threshold: {
                                type: string;
                            };
                            recovery_failure_threshold: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            error_notification: {
                type: string;
                properties: {
                    notification_id: {
                        $ref: string;
                    };
                    error_id: {
                        $ref: string;
                    };
                    notification_type: {
                        type: string;
                        enum: string[];
                    };
                    recipients: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                recipient_type: {
                                    type: string;
                                    enum: string[];
                                };
                                recipient_id: {
                                    type: string;
                                };
                                notification_method: {
                                    type: string;
                                    enum: string[];
                                };
                                priority: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    notification_content: {
                        type: string;
                        properties: {
                            subject: {
                                type: string;
                            };
                            summary: {
                                type: string;
                            };
                            detailed_message: {
                                type: string;
                            };
                            action_items: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            attachments: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        name: {
                                            type: string;
                                        };
                                        type: {
                                            type: string;
                                        };
                                        content: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    delivery_status: {
                        type: string;
                        properties: {
                            sent_at: {
                                $ref: string;
                            };
                            delivery_attempts: {
                                type: string;
                            };
                            successful_deliveries: {
                                type: string;
                            };
                            failed_deliveries: {
                                type: string;
                            };
                            delivery_errors: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            error_info: {
                $ref: string;
            };
            error_propagation: {
                $ref: string;
            };
            error_recovery: {
                $ref: string;
            };
            error_monitoring: {
                $ref: string;
            };
            error_notification: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                error_operation: {
                                    type: string;
                                };
                                error_code: {
                                    $ref: string;
                                };
                                error_category: {
                                    $ref: string;
                                };
                                error_severity: {
                                    $ref: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                recovery_strategy: {
                                    $ref: string;
                                };
                                error_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            error_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            error_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            error_handling_api: {
                                type: string;
                                format: string;
                            };
                            exception_analysis_api: {
                                type: string;
                                format: string;
                            };
                            system_stability_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    error_metrics: {
                        type: string;
                        properties: {
                            track_error_handling: {
                                type: string;
                            };
                            track_exception_analysis: {
                                type: string;
                            };
                            track_system_stability: {
                                type: string;
                            };
                            track_recovery_success: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            error_handling_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            error_frequency_per_hour: {
                                type: string;
                                minimum: number;
                            };
                            recovery_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            system_stability_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            exception_analysis_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_errors_count: {
                                type: string;
                                minimum: number;
                            };
                            critical_errors_count: {
                                type: string;
                                minimum: number;
                            };
                            escalation_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_recovery_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_error_handling_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_error_frequency_per_hour: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_recovery_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_system_stability_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_critical_errors_count: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                error_handling_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_strategy_change: {
                                type: string;
                            };
                            version_on_pattern_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    error_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_error_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_errors: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            error_handling_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            error_handling_details: {
                type: string;
                properties: {
                    error_category: {
                        type: string;
                    };
                    recovery_strategy: {
                        type: string;
                    };
                    escalation_level: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly coordination: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            coordination_type: {
                type: string;
                enum: string[];
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            response_status: {
                type: string;
                enum: string[];
                description: string;
            };
            error_info: {
                type: string;
                properties: {
                    error_code: {
                        type: string;
                        pattern: string;
                        description: string;
                    };
                    error_message: {
                        type: string;
                        description: string;
                    };
                    error_details: {
                        type: string;
                        description: string;
                    };
                    stack_trace: {
                        type: string;
                        items: {
                            type: string;
                        };
                        description: string;
                    };
                };
                required: string[];
            };
            coordination_request: {
                type: string;
                properties: {
                    request_id: {
                        $ref: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    coordination_type: {
                        $ref: string;
                    };
                    operation: {
                        type: string;
                        description: string;
                    };
                    payload: {
                        type: string;
                        description: string;
                    };
                    priority: {
                        $ref: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    retry_count: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    correlation_id: {
                        $ref: string;
                        description: string;
                    };
                    context: {
                        type: string;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            coordination_response: {
                type: string;
                properties: {
                    request_id: {
                        $ref: string;
                    };
                    response_id: {
                        $ref: string;
                    };
                    status: {
                        $ref: string;
                    };
                    result: {
                        type: string;
                        description: string;
                    };
                    error: {
                        $ref: string;
                    };
                    execution_time_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        description: string;
                    };
                    completed_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            coordination_notification: {
                type: string;
                properties: {
                    notification_id: {
                        $ref: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        description: string;
                    };
                    event_type: {
                        type: string;
                        description: string;
                    };
                    payload: {
                        type: string;
                        description: string;
                    };
                    priority: {
                        $ref: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            coordination_request: {
                $ref: string;
            };
            coordination_response: {
                $ref: string;
            };
            coordination_notification: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                coordination_operation: {
                                    type: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                target_module: {
                                    $ref: string;
                                };
                                coordination_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            coordination_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            synchronization_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            coordination_efficiency_api: {
                                type: string;
                                format: string;
                            };
                            synchronization_performance_api: {
                                type: string;
                                format: string;
                            };
                            conflict_resolution_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    coordination_metrics: {
                        type: string;
                        properties: {
                            track_coordination_efficiency: {
                                type: string;
                            };
                            track_synchronization_performance: {
                                type: string;
                            };
                            track_conflict_resolution: {
                                type: string;
                            };
                            track_state_consistency: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            coordination_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            synchronization_efficiency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            conflict_resolution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            state_consistency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            coordination_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_coordinations_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_coordinations_count: {
                                type: string;
                                minimum: number;
                            };
                            lock_contention_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_sync_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_coordination_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_synchronization_efficiency_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_conflict_resolution_time_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_state_consistency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_coordination_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                coordination_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_module_change: {
                                type: string;
                            };
                            version_on_strategy_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    coordination_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_coordination_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_coordinations: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            coordination_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            coordination_details: {
                type: string;
                properties: {
                    coordination_pattern: {
                        type: string;
                        enum: string[];
                    };
                    consensus_algorithm: {
                        type: string;
                        enum: string[];
                    };
                    conflict_resolution: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly orchestration: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            execution_mode: {
                type: string;
                enum: string[];
                description: string;
            };
            workflow_status: {
                type: string;
                enum: string[];
                description: string;
            };
            coordination_step: {
                type: string;
                properties: {
                    step_id: {
                        $ref: string;
                    };
                    step_name: {
                        type: string;
                        description: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    operation: {
                        type: string;
                        description: string;
                    };
                    input_data: {
                        type: string;
                        description: string;
                    };
                    dependencies: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        default: number;
                        description: string;
                    };
                    retry_policy: {
                        type: string;
                        properties: {
                            max_retries: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                default: number;
                            };
                            retry_delay_ms: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                            backoff_multiplier: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                        };
                    };
                    orchestration_details: {
                        type: string;
                        properties: {
                            orchestration_pattern: {
                                type: string;
                                enum: string[];
                            };
                            resource_allocation: {
                                type: string;
                                enum: string[];
                            };
                            failure_handling: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            coordination_plan: {
                type: string;
                properties: {
                    plan_id: {
                        $ref: string;
                    };
                    plan_name: {
                        type: string;
                        description: string;
                    };
                    steps: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        description: string;
                    };
                    execution_mode: {
                        $ref: string;
                    };
                    global_timeout_ms: {
                        type: string;
                        minimum: number;
                        default: number;
                        description: string;
                    };
                    rollback_strategy: {
                        type: string;
                        enum: string[];
                        default: string;
                        description: string;
                    };
                };
                required: string[];
            };
            performance_requirements: {
                type: string;
                properties: {
                    max_execution_time_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    max_memory_mb: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    min_success_rate: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    max_concurrent_steps: {
                        type: string;
                        minimum: number;
                        default: number;
                        description: string;
                    };
                };
            };
            orchestration_request: {
                type: string;
                properties: {
                    workflow_id: {
                        $ref: string;
                    };
                    workflow_name: {
                        type: string;
                        description: string;
                    };
                    coordination_plan: {
                        $ref: string;
                    };
                    global_context: {
                        type: string;
                        description: string;
                    };
                    performance_requirements: {
                        $ref: string;
                    };
                    priority: {
                        type: string;
                        enum: string[];
                        default: string;
                    };
                    created_by: {
                        type: string;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            orchestration_response: {
                type: string;
                properties: {
                    workflow_id: {
                        $ref: string;
                    };
                    execution_id: {
                        $ref: string;
                    };
                    status: {
                        $ref: string;
                    };
                    progress: {
                        type: string;
                        properties: {
                            completed_steps: {
                                type: string;
                                minimum: number;
                            };
                            total_steps: {
                                type: string;
                                minimum: number;
                            };
                            current_step: {
                                $ref: string;
                            };
                            completion_percentage: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                    results: {
                        type: string;
                        description: string;
                    };
                    execution_metrics: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            total_execution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            success_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    error_info: {
                        type: string;
                        properties: {
                            error_code: {
                                type: string;
                                pattern: string;
                            };
                            error_message: {
                                type: string;
                            };
                            failed_step: {
                                $ref: string;
                            };
                            error_details: {
                                type: string;
                            };
                        };
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            orchestration_request: {
                $ref: string;
            };
            orchestration_response: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                orchestration_operation: {
                                    type: string;
                                };
                                workflow_id: {
                                    $ref: string;
                                };
                                step_id: {
                                    $ref: string;
                                };
                                execution_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            orchestration_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            workflow_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            workflow_execution_api: {
                                type: string;
                                format: string;
                            };
                            resource_utilization_api: {
                                type: string;
                                format: string;
                            };
                            orchestration_efficiency_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    orchestration_metrics: {
                        type: string;
                        properties: {
                            track_workflow_execution: {
                                type: string;
                            };
                            track_resource_utilization: {
                                type: string;
                            };
                            track_orchestration_efficiency: {
                                type: string;
                            };
                            track_dependency_resolution: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            workflow_execution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            orchestration_efficiency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            resource_utilization_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            step_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            dependency_resolution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            active_workflows_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_workflows_count: {
                                type: string;
                                minimum: number;
                            };
                            rollback_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_step_execution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_workflow_execution_time_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_orchestration_efficiency_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_resource_utilization_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_step_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_rollback_frequency_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                orchestration_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_workflow_change: {
                                type: string;
                            };
                            version_on_plan_change: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    orchestration_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_workflow_data: {
                                type: string;
                            };
                            index_execution_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_workflows: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            orchestration_details: {
                type: string;
                properties: {
                    orchestration_pattern: {
                        type: string;
                        enum: string[];
                    };
                    resource_allocation: {
                        type: string;
                        enum: string[];
                    };
                    failure_handling: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            orchestration_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly stateSync: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            sync_strategy: {
                type: string;
                enum: string[];
                description: string;
            };
            consistency_level: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            conflict_resolution: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            state_snapshot: {
                type: string;
                properties: {
                    snapshot_id: {
                        $ref: string;
                    };
                    module: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    state_data: {
                        type: string;
                        description: string;
                    };
                    checksum: {
                        type: string;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        properties: {
                            size_bytes: {
                                type: string;
                            };
                            compression: {
                                type: string;
                            };
                            encoding: {
                                type: string;
                            };
                        };
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            state_delta: {
                type: string;
                properties: {
                    delta_id: {
                        $ref: string;
                    };
                    base_version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    target_version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    operations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                operation_type: {
                                    type: string;
                                    enum: string[];
                                };
                                path: {
                                    type: string;
                                    description: string;
                                };
                                old_value: {
                                    description: string;
                                };
                                new_value: {
                                    description: string;
                                };
                                timestamp: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    checksum: {
                        type: string;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            state_sync_request: {
                type: string;
                properties: {
                    sync_id: {
                        $ref: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        description: string;
                    };
                    sync_strategy: {
                        $ref: string;
                    };
                    consistency_level: {
                        $ref: string;
                    };
                    sync_scope: {
                        type: string;
                        properties: {
                            include_paths: {
                                type: string;
                                items: {
                                    type: string;
                                };
                                description: string;
                            };
                            exclude_paths: {
                                type: string;
                                items: {
                                    type: string;
                                };
                                description: string;
                            };
                            filter_conditions: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                    sync_options: {
                        type: string;
                        properties: {
                            use_delta: {
                                type: string;
                                default: boolean;
                                description: string;
                            };
                            compression_enabled: {
                                type: string;
                                default: boolean;
                            };
                            batch_size: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                            retry_count: {
                                type: string;
                                minimum: number;
                                default: number;
                            };
                        };
                    };
                    state_snapshot: {
                        $ref: string;
                    };
                    state_delta: {
                        $ref: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            state_sync_response: {
                type: string;
                properties: {
                    sync_id: {
                        $ref: string;
                    };
                    response_id: {
                        $ref: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    sync_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    applied_version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    conflicts: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                path: {
                                    type: string;
                                };
                                conflict_type: {
                                    type: string;
                                    enum: string[];
                                };
                                local_value: {
                                    description: string;
                                };
                                remote_value: {
                                    description: string;
                                };
                                resolution: {
                                    $ref: string;
                                };
                                resolved_value: {
                                    description: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    sync_metrics: {
                        type: string;
                        properties: {
                            records_processed: {
                                type: string;
                            };
                            records_applied: {
                                type: string;
                            };
                            records_skipped: {
                                type: string;
                            };
                            processing_time_ms: {
                                type: string;
                            };
                            data_size_bytes: {
                                type: string;
                            };
                        };
                    };
                    error_info: {
                        type: string;
                        properties: {
                            error_code: {
                                type: string;
                                pattern: string;
                            };
                            error_message: {
                                type: string;
                            };
                            error_details: {
                                type: string;
                            };
                        };
                    };
                    next_sync_version: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    completed_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            state_sync_subscription: {
                type: string;
                properties: {
                    subscription_id: {
                        $ref: string;
                    };
                    subscriber_module: {
                        $ref: string;
                    };
                    source_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    sync_patterns: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                path_pattern: {
                                    type: string;
                                    description: string;
                                };
                                sync_strategy: {
                                    $ref: string;
                                };
                                sync_frequency_ms: {
                                    type: string;
                                    minimum: number;
                                    description: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    active: {
                        type: string;
                        default: boolean;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            state_sync_request: {
                $ref: string;
            };
            state_sync_response: {
                $ref: string;
            };
            state_sync_subscription: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                state_sync_operation: {
                                    type: string;
                                };
                                source_module: {
                                    $ref: string;
                                };
                                target_module: {
                                    $ref: string;
                                };
                                sync_details: {
                                    type: string;
                                };
                                conflict_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            state_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            state_change_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            sync_performance_api: {
                                type: string;
                                format: string;
                            };
                            consistency_analysis_api: {
                                type: string;
                                format: string;
                            };
                            conflict_resolution_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    state_sync_metrics: {
                        type: string;
                        properties: {
                            track_sync_performance: {
                                type: string;
                            };
                            track_consistency_analysis: {
                                type: string;
                            };
                            track_conflict_resolution: {
                                type: string;
                            };
                            track_state_integrity: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            sync_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            consistency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            conflict_resolution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            sync_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            state_integrity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_syncs_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_syncs_count: {
                                type: string;
                                minimum: number;
                            };
                            rollback_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_sync_size_bytes: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_sync_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_consistency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_conflict_resolution_time_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_sync_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_state_integrity_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                state_sync_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_pattern_change: {
                                type: string;
                            };
                            version_on_subscription_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    state_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_state_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_syncs: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            state_sync_details: {
                type: string;
                properties: {
                    sync_strategy: {
                        type: string;
                        enum: string[];
                    };
                    conflict_resolution: {
                        type: string;
                        enum: string[];
                    };
                    consistency_level: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            state_sync_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly transaction: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            module_type: {
                type: string;
                enum: string[];
                description: string;
            };
            isolation_level: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            transaction_state: {
                type: string;
                enum: string[];
                description: string;
            };
            rollback_strategy: {
                type: string;
                enum: string[];
                default: string;
                description: string;
            };
            participant_info: {
                type: string;
                properties: {
                    module: {
                        $ref: string;
                    };
                    participant_id: {
                        $ref: string;
                    };
                    resource_locks: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                resource_id: {
                                    type: string;
                                };
                                lock_type: {
                                    type: string;
                                    enum: string[];
                                };
                                acquired_at: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    state: {
                        $ref: string;
                    };
                    last_heartbeat: {
                        $ref: string;
                    };
                    compensation_data: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
            };
            transaction_context: {
                type: string;
                properties: {
                    transaction_id: {
                        $ref: string;
                    };
                    parent_transaction_id: {
                        $ref: string;
                        description: string;
                    };
                    isolation_level: {
                        $ref: string;
                    };
                    participating_modules: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        description: string;
                    };
                    participants: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    transaction_state: {
                        $ref: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                        description: string;
                    };
                    rollback_strategy: {
                        $ref: string;
                    };
                    coordinator_module: {
                        $ref: string;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            transaction_operation: {
                type: string;
                properties: {
                    operation_id: {
                        $ref: string;
                    };
                    transaction_id: {
                        $ref: string;
                    };
                    operation_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    source_module: {
                        $ref: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    operation_data: {
                        type: string;
                        description: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        default: number;
                        description: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            transaction_result: {
                type: string;
                properties: {
                    operation_id: {
                        $ref: string;
                    };
                    transaction_id: {
                        $ref: string;
                    };
                    result_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    result_data: {
                        type: string;
                        description: string;
                    };
                    error_info: {
                        type: string;
                        properties: {
                            error_code: {
                                type: string;
                                pattern: string;
                            };
                            error_message: {
                                type: string;
                            };
                            error_details: {
                                type: string;
                            };
                        };
                    };
                    execution_time_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    resource_usage: {
                        type: string;
                        properties: {
                            memory_mb: {
                                type: string;
                            };
                            cpu_time_ms: {
                                type: string;
                            };
                            io_operations: {
                                type: string;
                            };
                        };
                    };
                    completed_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            compensation_action: {
                type: string;
                properties: {
                    action_id: {
                        $ref: string;
                    };
                    transaction_id: {
                        $ref: string;
                    };
                    target_module: {
                        $ref: string;
                    };
                    compensation_operation: {
                        type: string;
                        description: string;
                    };
                    compensation_data: {
                        type: string;
                        description: string;
                    };
                    execution_order: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        default: number;
                    };
                    created_at: {
                        $ref: string;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            transaction_context: {
                $ref: string;
            };
            transaction_operation: {
                $ref: string;
            };
            transaction_result: {
                $ref: string;
            };
            compensation_action: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                transaction_operation: {
                                    type: string;
                                };
                                transaction_id: {
                                    $ref: string;
                                };
                                participant_modules: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                isolation_level: {
                                    $ref: string;
                                };
                                transaction_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            transaction_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            transaction_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            transaction_performance_api: {
                                type: string;
                                format: string;
                            };
                            deadlock_detection_api: {
                                type: string;
                                format: string;
                            };
                            acid_compliance_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    transaction_metrics: {
                        type: string;
                        properties: {
                            track_transaction_performance: {
                                type: string;
                            };
                            track_deadlock_detection: {
                                type: string;
                            };
                            track_acid_compliance: {
                                type: string;
                            };
                            track_lock_contention: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            transaction_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            transaction_throughput_per_second: {
                                type: string;
                                minimum: number;
                            };
                            deadlock_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            acid_compliance_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            lock_contention_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_transactions_count: {
                                type: string;
                                minimum: number;
                            };
                            failed_transactions_count: {
                                type: string;
                                minimum: number;
                            };
                            rollback_frequency_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            average_lock_wait_time_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_transaction_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_transaction_throughput_per_second: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_deadlock_frequency_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_acid_compliance_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_lock_contention_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                transaction_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_isolation_change: {
                                type: string;
                            };
                            version_on_participant_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    transaction_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_transaction_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_transactions: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            transaction_details: {
                type: string;
                properties: {
                    isolation_level: {
                        type: string;
                        enum: string[];
                    };
                    timeout_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    rollback_strategy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        oneOf: {
            required: string[];
        }[];
    };
    readonly protocolVersion: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            compatibility_level: {
                type: string;
                enum: string[];
                description: string;
            };
            module_version_info: {
                type: string;
                properties: {
                    module_name: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    current_version: {
                        $ref: string;
                    };
                    supported_versions: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    deprecated_versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version: {
                                    $ref: string;
                                };
                                deprecation_date: {
                                    $ref: string;
                                };
                                removal_date: {
                                    $ref: string;
                                };
                                migration_guide: {
                                    type: string;
                                    description: string;
                                };
                                protocol_version_operation: {
                                    type: string;
                                    enum: string[];
                                };
                                protocol_version_details: {
                                    type: string;
                                    properties: {
                                        compatibility_mode: {
                                            type: string;
                                            enum: string[];
                                        };
                                        migration_strategy: {
                                            type: string;
                                        };
                                        rollback_support: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    breaking_changes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version: {
                                    $ref: string;
                                };
                                change_description: {
                                    type: string;
                                };
                                impact_level: {
                                    type: string;
                                    enum: string[];
                                };
                                migration_required: {
                                    type: string;
                                };
                                affected_apis: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            compatibility_matrix: {
                type: string;
                properties: {
                    matrix_version: {
                        $ref: string;
                    };
                    compatibility_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                source_module: {
                                    type: string;
                                };
                                source_version: {
                                    $ref: string;
                                };
                                target_module: {
                                    type: string;
                                };
                                target_version_range: {
                                    type: string;
                                    description: string;
                                };
                                compatibility_level: {
                                    $ref: string;
                                };
                                notes: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    global_constraints: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                constraint_type: {
                                    type: string;
                                    enum: string[];
                                };
                                modules: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                version_constraint: {
                                    type: string;
                                };
                                reason: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            upgrade_path: {
                type: string;
                properties: {
                    path_id: {
                        $ref: string;
                    };
                    from_version: {
                        $ref: string;
                    };
                    to_version: {
                        $ref: string;
                    };
                    upgrade_steps: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                step_number: {
                                    type: string;
                                    minimum: number;
                                };
                                step_description: {
                                    type: string;
                                };
                                step_type: {
                                    type: string;
                                    enum: string[];
                                };
                                affected_modules: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                automation_script: {
                                    type: string;
                                    description: string;
                                };
                                manual_steps: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                validation_criteria: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                rollback_procedure: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    estimated_duration_minutes: {
                        type: string;
                        minimum: number;
                    };
                    risk_level: {
                        type: string;
                        enum: string[];
                    };
                    prerequisites: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    post_upgrade_validation: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                required: string[];
            };
            deprecation_schedule: {
                type: string;
                properties: {
                    schedule_version: {
                        $ref: string;
                    };
                    deprecation_policies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                policy_name: {
                                    type: string;
                                };
                                deprecation_period_months: {
                                    type: string;
                                    minimum: number;
                                };
                                notification_schedule: {
                                    type: string;
                                    items: {
                                        type: string;
                                        properties: {
                                            notification_type: {
                                                type: string;
                                                enum: string[];
                                            };
                                            months_before_removal: {
                                                type: string;
                                                minimum: number;
                                            };
                                        };
                                        required: string[];
                                    };
                                };
                                affected_features: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    scheduled_deprecations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                item_type: {
                                    type: string;
                                    enum: string[];
                                };
                                item_identifier: {
                                    type: string;
                                };
                                deprecation_date: {
                                    $ref: string;
                                };
                                removal_date: {
                                    $ref: string;
                                };
                                replacement: {
                                    type: string;
                                };
                                migration_guide: {
                                    type: string;
                                };
                                impact_assessment: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            protocol_version_info: {
                type: string;
                properties: {
                    protocol_suite_version: {
                        $ref: string;
                    };
                    protocol_suite_name: {
                        type: string;
                        const: string;
                    };
                    release_date: {
                        $ref: string;
                    };
                    module_versions: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                    };
                    compatibility_matrix: {
                        $ref: string;
                    };
                    upgrade_paths: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    deprecation_schedule: {
                        $ref: string;
                    };
                    release_notes: {
                        type: string;
                        properties: {
                            new_features: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            improvements: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            bug_fixes: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            breaking_changes: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            security_updates: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                    metadata: {
                        type: string;
                        properties: {
                            maintainers: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            repository_url: {
                                type: string;
                                format: string;
                            };
                            documentation_url: {
                                type: string;
                                format: string;
                            };
                            support_contact: {
                                type: string;
                            };
                            license: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            protocol_version_info: {
                $ref: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                version_operation: {
                                    type: string;
                                };
                                source_version: {
                                    $ref: string;
                                };
                                target_version: {
                                    $ref: string;
                                };
                                module_name: {
                                    type: string;
                                };
                                compatibility_result: {
                                    $ref: string;
                                };
                                version_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            version_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            version_change_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            version_management_api: {
                                type: string;
                                format: string;
                            };
                            compatibility_analysis_api: {
                                type: string;
                                format: string;
                            };
                            protocol_evolution_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    version_metrics: {
                        type: string;
                        properties: {
                            track_version_management: {
                                type: string;
                            };
                            track_compatibility_analysis: {
                                type: string;
                            };
                            track_protocol_evolution: {
                                type: string;
                            };
                            track_migration_progress: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            version_check_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            compatibility_check_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            migration_completion_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            protocol_evolution_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            version_adoption_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_versions_count: {
                                type: string;
                                minimum: number;
                            };
                            deprecated_versions_count: {
                                type: string;
                                minimum: number;
                            };
                            compatibility_conflicts_count: {
                                type: string;
                                minimum: number;
                            };
                            average_migration_time_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_version_check_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_compatibility_check_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_migration_completion_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_protocol_evolution_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    max_compatibility_conflicts_count: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                protocol_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_protocol_change: {
                                type: string;
                            };
                            version_on_compatibility_change: {
                                type: string;
                            };
                            version_on_deprecation_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    version_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_version_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_versions: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            protocol_version_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            protocol_version_details: {
                type: string;
                properties: {
                    compatibility_mode: {
                        type: string;
                        enum: string[];
                    };
                    migration_strategy: {
                        type: string;
                    };
                    rollback_support: {
                        type: string;
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
    };
    readonly context: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            lifecycle_stage: {
                type: string;
                enum: string[];
                description: string;
            };
            shared_state: {
                type: string;
                properties: {
                    variables: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    resources: {
                        type: string;
                        properties: {
                            allocated: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                    properties: {
                                        type: {
                                            type: string;
                                        };
                                        amount: {
                                            type: string;
                                        };
                                        unit: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            requirements: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                    properties: {
                                        minimum: {
                                            type: string;
                                        };
                                        optimal: {
                                            type: string;
                                        };
                                        maximum: {
                                            type: string;
                                        };
                                        unit: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                    dependencies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                name: {
                                    type: string;
                                };
                                version: {
                                    $ref: string;
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    goals: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                description: {
                                    type: string;
                                };
                                priority: {
                                    $ref: string;
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                success_criteria: {
                                    type: string;
                                    items: {
                                        type: string;
                                        properties: {
                                            metric: {
                                                type: string;
                                            };
                                            operator: {
                                                type: string;
                                                enum: string[];
                                            };
                                            value: {
                                                type: string[];
                                            };
                                            unit: {
                                                type: string;
                                            };
                                        };
                                        required: string[];
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            access_control: {
                type: string;
                properties: {
                    owner: {
                        type: string;
                        properties: {
                            user_id: {
                                type: string;
                            };
                            role: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    permissions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                principal: {
                                    type: string;
                                };
                                principal_type: {
                                    type: string;
                                    enum: string[];
                                };
                                resource: {
                                    type: string;
                                };
                                actions: {
                                    type: string;
                                    items: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                conditions: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                        };
                    };
                    policies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                rules: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                enforcement: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            configuration: {
                type: string;
                properties: {
                    timeout_settings: {
                        type: string;
                        properties: {
                            default_timeout: {
                                type: string;
                                minimum: number;
                            };
                            max_timeout: {
                                type: string;
                                minimum: number;
                            };
                            cleanup_timeout: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                    notification_settings: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            events: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                    persistence: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            storage_backend: {
                                type: string;
                                enum: string[];
                            };
                            retention_policy: {
                                type: string;
                                properties: {
                                    duration: {
                                        type: string;
                                    };
                                    max_versions: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                required: string[];
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                context_operation: {
                                    type: string;
                                };
                                context_id: {
                                    $ref: string;
                                };
                                context_name: {
                                    type: string;
                                };
                                lifecycle_stage: {
                                    type: string;
                                };
                                shared_state_keys: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                access_level: {
                                    type: string;
                                };
                                context_details: {
                                    type: string;
                                };
                                old_value: {
                                    type: string;
                                };
                                new_value: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            context_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            context_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            context_state_api: {
                                type: string;
                                format: string;
                            };
                            cache_metrics_api: {
                                type: string;
                                format: string;
                            };
                            sync_metrics_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    context_metrics: {
                        type: string;
                        properties: {
                            track_state_changes: {
                                type: string;
                            };
                            track_cache_performance: {
                                type: string;
                            };
                            track_sync_operations: {
                                type: string;
                            };
                            track_access_patterns: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            context_access_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            context_update_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            cache_hit_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            context_sync_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            context_state_consistency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_contexts_count: {
                                type: string;
                                minimum: number;
                            };
                            context_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            context_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_context_size_bytes: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_context_access_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_context_update_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_cache_hit_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_context_sync_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_context_state_consistency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                context_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_state_change: {
                                type: string;
                            };
                            version_on_cache_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    context_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_context_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_contexts: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            caching_policy: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    cache_strategy: {
                        type: string;
                        enum: string[];
                    };
                    cache_levels: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                level: {
                                    type: string;
                                };
                                backend: {
                                    type: string;
                                    enum: string[];
                                };
                                ttl_seconds: {
                                    type: string;
                                    minimum: number;
                                };
                                max_size_mb: {
                                    type: string;
                                    minimum: number;
                                };
                                eviction_policy: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    cache_warming: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            strategies: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            sync_configuration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    sync_strategy: {
                        type: string;
                        enum: string[];
                    };
                    sync_targets: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                target_id: {
                                    type: string;
                                };
                                target_type: {
                                    type: string;
                                    enum: string[];
                                };
                                sync_frequency: {
                                    type: string;
                                };
                                conflict_resolution: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    replication: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            replication_factor: {
                                type: string;
                                minimum: number;
                            };
                            consistency_level: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            error_handling: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    error_policies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                error_type: {
                                    type: string;
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                retry_config: {
                                    type: string;
                                    properties: {
                                        max_attempts: {
                                            type: string;
                                            minimum: number;
                                        };
                                        backoff_strategy: {
                                            type: string;
                                            enum: string[];
                                        };
                                        base_delay_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    circuit_breaker: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            failure_threshold: {
                                type: string;
                                minimum: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            reset_timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    recovery_strategy: {
                        type: string;
                        properties: {
                            auto_recovery: {
                                type: string;
                            };
                            backup_sources: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            rollback_enabled: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            integration_endpoints: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    webhooks: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                webhook_id: {
                                    $ref: string;
                                };
                                url: {
                                    type: string;
                                    format: string;
                                };
                                events: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                authentication: {
                                    type: string;
                                    properties: {
                                        type: {
                                            type: string;
                                            enum: string[];
                                        };
                                        credentials: {
                                            type: string;
                                        };
                                    };
                                };
                                retry_policy: {
                                    type: string;
                                    properties: {
                                        max_attempts: {
                                            type: string;
                                        };
                                        backoff_ms: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    api_endpoints: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                endpoint_id: {
                                    type: string;
                                };
                                path: {
                                    type: string;
                                };
                                method: {
                                    type: string;
                                    enum: string[];
                                };
                                authentication_required: {
                                    type: string;
                                };
                                rate_limit: {
                                    type: string;
                                    properties: {
                                        requests_per_minute: {
                                            type: string;
                                        };
                                        burst_limit: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            context_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            context_details: {
                type: string;
                properties: {
                    context_scope: {
                        type: string;
                        enum: string[];
                    };
                    persistence_level: {
                        type: string;
                        enum: string[];
                    };
                    sharing_policy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
        examples: {
            protocol_version: string;
            timestamp: string;
            context_id: string;
            name: string;
            description: string;
            status: string;
            lifecycle_stage: string;
            shared_state: {
                variables: {
                    environment: string;
                    region: string;
                    feature_flags: {
                        new_ui: boolean;
                        beta_features: boolean;
                    };
                };
                resources: {
                    allocated: {
                        memory: {
                            type: string;
                            amount: number;
                            unit: string;
                            status: string;
                        };
                        cpu: {
                            type: string;
                            amount: number;
                            unit: string;
                            status: string;
                        };
                    };
                    requirements: {
                        storage: {
                            minimum: number;
                            optimal: number;
                            maximum: number;
                            unit: string;
                        };
                    };
                };
                dependencies: {
                    id: string;
                    type: string;
                    name: string;
                    version: string;
                    status: string;
                }[];
                goals: {
                    id: string;
                    name: string;
                    priority: string;
                    status: string;
                    success_criteria: {
                        metric: string;
                        operator: string;
                        value: number;
                        unit: string;
                    }[];
                }[];
            };
            access_control: {
                owner: {
                    user_id: string;
                    role: string;
                };
                permissions: {
                    principal: string;
                    principal_type: string;
                    resource: string;
                    actions: string[];
                }[];
            };
            configuration: {
                timeout_settings: {
                    default_timeout: number;
                    max_timeout: number;
                };
                notification_settings: {
                    enabled: boolean;
                    channels: string[];
                    events: string[];
                };
                persistence: {
                    enabled: boolean;
                    storage_backend: string;
                    retention_policy: {
                        duration: string;
                        max_versions: number;
                    };
                };
            };
        }[];
    };
    readonly plan: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
            failure_resolver: {
                type: string;
                description: string;
                properties: {
                    enabled: {
                        type: string;
                        description: string;
                    };
                    strategies: {
                        type: string;
                        description: string;
                        items: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                    };
                    retry_config: {
                        type: string;
                        description: string;
                        properties: {
                            max_attempts: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            delay_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            backoff_factor: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            max_delay_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    rollback_config: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            checkpoint_frequency: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            max_rollback_depth: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    manual_intervention_config: {
                        type: string;
                        description: string;
                        properties: {
                            timeout_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            escalation_levels: {
                                type: string;
                                items: {
                                    type: string;
                                };
                                description: string;
                            };
                            approval_required: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                    notification_channels: {
                        type: string;
                        items: {
                            type: string;
                        };
                        description: string;
                    };
                    performance_thresholds: {
                        type: string;
                        description: string;
                        properties: {
                            max_execution_time_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            max_memory_usage_mb: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            max_cpu_usage_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                        };
                    };
                    diagnostic_integration: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            supported_diagnostic_providers: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                                description: string;
                            };
                            diagnostic_endpoints: {
                                type: string;
                                properties: {
                                    failure_analysis_api: {
                                        type: string;
                                        format: string;
                                    };
                                    pattern_detection_api: {
                                        type: string;
                                        format: string;
                                    };
                                    recommendation_api: {
                                        type: string;
                                        format: string;
                                    };
                                };
                            };
                            request_format: {
                                type: string;
                                properties: {
                                    input_schema: {
                                        type: string;
                                    };
                                    output_schema: {
                                        type: string;
                                    };
                                    timeout_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                    vendor_integration: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            sync_frequency_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            data_retention_days: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            sync_detailed_diagnostics: {
                                type: string;
                                description: string;
                            };
                            receive_suggestions: {
                                type: string;
                                description: string;
                            };
                            auto_apply_suggestions: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                    proactive_prevention: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            prediction_confidence_threshold: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            auto_prevention_enabled: {
                                type: string;
                                description: string;
                            };
                            prevention_strategies: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                                description: string;
                            };
                            monitoring_interval_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    learning_integration: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                description: string;
                            };
                            supported_learning_providers: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                                description: string;
                            };
                            learning_endpoints: {
                                type: string;
                                properties: {
                                    feedback_collection_api: {
                                        type: string;
                                        format: string;
                                    };
                                    pattern_learning_api: {
                                        type: string;
                                        format: string;
                                    };
                                    strategy_optimization_api: {
                                        type: string;
                                        format: string;
                                    };
                                };
                            };
                            data_sharing: {
                                type: string;
                                properties: {
                                    anonymization_enabled: {
                                        type: string;
                                    };
                                    data_retention_days: {
                                        type: string;
                                        minimum: number;
                                    };
                                    sharing_scope: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                    external_integrations: {
                        type: string;
                        description: string;
                        properties: {
                            diagnostic_systems: {
                                type: string;
                                description: string;
                            };
                            prediction_services: {
                                type: string;
                                description: string;
                            };
                            recovery_automation: {
                                type: string;
                                description: string;
                            };
                            optimization_engines: {
                                type: string;
                                description: string;
                            };
                            monitoring_platforms: {
                                type: string;
                                description: string;
                            };
                            recommendation_services: {
                                type: string;
                                description: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            recovery_suggestion: {
                type: string;
                description: string;
                minLength: number;
                maxLength: number;
            };
            development_issue: {
                type: string;
                description: string;
                properties: {
                    id: {
                        type: string;
                        description: string;
                        pattern: string;
                        minLength: number;
                        maxLength: number;
                    };
                    type: {
                        type: string;
                        description: string;
                        enum: string[];
                    };
                    severity: {
                        type: string;
                        description: string;
                        enum: string[];
                    };
                    title: {
                        type: string;
                        description: string;
                        minLength: number;
                        maxLength: number;
                    };
                    file_path: {
                        type: string;
                        description: string;
                        pattern: string;
                    };
                    line_number: {
                        type: string;
                        description: string;
                        minimum: number;
                    };
                    description: {
                        type: string;
                        description: string;
                        maxLength: number;
                    };
                    suggested_fix: {
                        type: string;
                        description: string;
                        maxLength: number;
                    };
                    detected_at: {
                        $ref: string;
                        description: string;
                    };
                    status: {
                        type: string;
                        description: string;
                        enum: string[];
                    };
                    dependencies: {
                        type: string;
                        description: string;
                        items: {
                            type: string;
                        };
                    };
                    confidence_score: {
                        type: string;
                        description: string;
                        minimum: number;
                        maximum: number;
                    };
                };
                required: string[];
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            plan_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            priority: {
                $ref: string;
                description: string;
            };
            timeline: {
                type: string;
                properties: {
                    start_date: {
                        $ref: string;
                    };
                    end_date: {
                        $ref: string;
                    };
                    estimated_duration: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    actual_duration: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                required: string[];
            };
            tasks: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        task_id: {
                            $ref: string;
                        };
                        name: {
                            type: string;
                            minLength: number;
                            maxLength: number;
                        };
                        description: {
                            type: string;
                            maxLength: number;
                        };
                        type: {
                            type: string;
                            enum: string[];
                        };
                        status: {
                            type: string;
                            enum: string[];
                        };
                        priority: {
                            $ref: string;
                        };
                        assignee: {
                            type: string;
                            properties: {
                                user_id: {
                                    type: string;
                                };
                                role: {
                                    type: string;
                                };
                                team: {
                                    type: string;
                                };
                            };
                        };
                        estimated_effort: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        actual_effort: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        resources_required: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    resource_type: {
                                        type: string;
                                    };
                                    amount: {
                                        type: string;
                                        minimum: number;
                                    };
                                    unit: {
                                        type: string;
                                    };
                                    availability: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        acceptance_criteria: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    id: {
                                        $ref: string;
                                    };
                                    description: {
                                        type: string;
                                    };
                                    type: {
                                        type: string;
                                        enum: string[];
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    verification_method: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        sub_tasks: {
                            type: string;
                            items: {
                                $ref: string;
                            };
                        };
                        metadata: {
                            type: string;
                            properties: {
                                tags: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                category: {
                                    type: string;
                                };
                                source: {
                                    type: string;
                                };
                                complexity_score: {
                                    type: string;
                                    minimum: number;
                                };
                                risk_level: {
                                    type: string;
                                };
                                automation_level: {
                                    type: string;
                                };
                                retry_count: {
                                    type: string;
                                    minimum: number;
                                };
                                max_retry_count: {
                                    type: string;
                                    minimum: number;
                                };
                                intervention_required: {
                                    type: string;
                                };
                                intervention_reason: {
                                    type: string;
                                };
                                intervention_requested_at: {
                                    $ref: string;
                                };
                                rollback_reason: {
                                    type: string;
                                };
                                rollback_target: {
                                    $ref: string;
                                };
                                skip_reason: {
                                    type: string;
                                };
                                skip_dependents: {
                                    type: string;
                                };
                                recovery_suggestions: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                    description: string;
                                    maxItems: number;
                                    uniqueItems: boolean;
                                };
                                development_issues: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                    description: string;
                                    maxItems: number;
                                    uniqueItems: boolean;
                                };
                            };
                        };
                        started_at: {
                            $ref: string;
                        };
                        completed_at: {
                            $ref: string;
                        };
                        progress_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        actual_duration_minutes: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        error_message: {
                            type: string;
                            description: string;
                        };
                        result_data: {
                            type: string;
                            description: string;
                            additionalProperties: boolean;
                        };
                    };
                    required: string[];
                };
            };
            dependencies: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        id: {
                            $ref: string;
                        };
                        source_task_id: {
                            $ref: string;
                        };
                        target_task_id: {
                            $ref: string;
                        };
                        dependency_type: {
                            type: string;
                            enum: string[];
                        };
                        lag: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        criticality: {
                            type: string;
                            enum: string[];
                        };
                        condition: {
                            type: string;
                            description: string;
                        };
                    };
                    required: string[];
                };
            };
            milestones: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        id: {
                            $ref: string;
                        };
                        name: {
                            type: string;
                        };
                        description: {
                            type: string;
                        };
                        target_date: {
                            $ref: string;
                        };
                        status: {
                            type: string;
                            enum: string[];
                        };
                        success_criteria: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    metric: {
                                        type: string;
                                    };
                                    target_value: {
                                        type: string[];
                                    };
                                    actual_value: {
                                        type: string[];
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    required: string[];
                };
            };
            optimization: {
                type: string;
                properties: {
                    strategy: {
                        type: string;
                        enum: string[];
                    };
                    constraints: {
                        type: string;
                        properties: {
                            max_duration: {
                                type: string;
                                properties: {
                                    value: {
                                        type: string;
                                        minimum: number;
                                    };
                                    unit: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                            max_cost: {
                                type: string;
                                minimum: number;
                            };
                            min_quality: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            available_resources: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                    };
                    parameters: {
                        type: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
            risk_assessment: {
                type: string;
                properties: {
                    overall_risk_level: {
                        type: string;
                        enum: string[];
                    };
                    risks: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                description: {
                                    type: string;
                                };
                                level: {
                                    type: string;
                                    enum: string[];
                                };
                                category: {
                                    type: string;
                                    enum: string[];
                                };
                                probability: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                impact: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                mitigation_plan: {
                                    type: string;
                                };
                                contingency_plan: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            failure_resolver: {
                $ref: string;
                description: string;
            };
            configuration: {
                type: string;
                properties: {
                    auto_scheduling_enabled: {
                        type: string;
                    };
                    dependency_validation_enabled: {
                        type: string;
                    };
                    risk_monitoring_enabled: {
                        type: string;
                    };
                    failure_recovery_enabled: {
                        type: string;
                    };
                    performance_tracking_enabled: {
                        type: string;
                    };
                    notification_settings: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            channels: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            events: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            task_completion: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    optimization_settings: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            strategy: {
                                type: string;
                                enum: string[];
                            };
                            auto_reoptimize: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    timeout_settings: {
                        type: string;
                        properties: {
                            default_task_timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            plan_execution_timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            dependency_resolution_timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    parallel_execution_limit: {
                        type: string;
                        minimum: number;
                    };
                };
            };
            metadata: {
                type: string;
                additionalProperties: boolean;
                description: string;
            };
            created_at: {
                $ref: string;
                description: string;
            };
            updated_at: {
                $ref: string;
                description: string;
            };
            created_by: {
                type: string;
                description: string;
            };
            updated_by: {
                type: string;
                description: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                plan_operation: {
                                    type: string;
                                };
                                plan_id: {
                                    $ref: string;
                                };
                                plan_name: {
                                    type: string;
                                };
                                plan_status: {
                                    type: string;
                                };
                                task_ids: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                execution_stage: {
                                    type: string;
                                };
                                plan_details: {
                                    type: string;
                                };
                                old_value: {
                                    type: string;
                                };
                                new_value: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            plan_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            plan_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            plan_execution_api: {
                                type: string;
                                format: string;
                            };
                            task_metrics_api: {
                                type: string;
                                format: string;
                            };
                            resource_metrics_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    plan_metrics: {
                        type: string;
                        properties: {
                            track_execution_progress: {
                                type: string;
                            };
                            track_task_performance: {
                                type: string;
                            };
                            track_resource_usage: {
                                type: string;
                            };
                            track_failure_recovery: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            plan_execution_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            task_completion_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            plan_optimization_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            dependency_resolution_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            plan_execution_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_plans_count: {
                                type: string;
                                minimum: number;
                            };
                            plan_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            plan_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_plan_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_plan_execution_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_task_completion_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_plan_optimization_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_dependency_resolution_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_plan_execution_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                plan_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_task_change: {
                                type: string;
                            };
                            version_on_dependency_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    plan_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_plan_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_plans: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            caching_policy: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    cache_strategy: {
                        type: string;
                        enum: string[];
                    };
                    cache_levels: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                level: {
                                    type: string;
                                };
                                backend: {
                                    type: string;
                                    enum: string[];
                                };
                                ttl_seconds: {
                                    type: string;
                                    minimum: number;
                                };
                                max_size_mb: {
                                    type: string;
                                    minimum: number;
                                };
                                eviction_policy: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    cache_warming: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            strategies: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            plan_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            plan_details: {
                type: string;
                properties: {
                    planning_strategy: {
                        type: string;
                        enum: string[];
                    };
                    execution_mode: {
                        type: string;
                        enum: string[];
                    };
                    rollback_support: {
                        type: string;
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly confirm: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            confirm_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            plan_id: {
                $ref: string;
                description: string;
            };
            confirmation_type: {
                type: string;
                enum: string[];
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            priority: {
                $ref: string;
                description: string;
            };
            requester: {
                type: string;
                properties: {
                    user_id: {
                        type: string;
                    };
                    role: {
                        type: string;
                    };
                    department: {
                        type: string;
                    };
                    request_reason: {
                        type: string;
                        maxLength: number;
                    };
                };
                required: string[];
            };
            approval_workflow: {
                type: string;
                properties: {
                    workflow_type: {
                        type: string;
                        enum: string[];
                    };
                    steps: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                step_id: {
                                    $ref: string;
                                };
                                step_order: {
                                    type: string;
                                    minimum: number;
                                };
                                approver: {
                                    type: string;
                                    properties: {
                                        user_id: {
                                            type: string;
                                        };
                                        role: {
                                            type: string;
                                        };
                                        is_required: {
                                            type: string;
                                        };
                                        delegation_allowed: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                                approval_criteria: {
                                    type: string;
                                    items: {
                                        type: string;
                                        properties: {
                                            criterion: {
                                                type: string;
                                            };
                                            required: {
                                                type: string;
                                            };
                                            weight: {
                                                type: string;
                                                minimum: number;
                                                maximum: number;
                                            };
                                        };
                                        required: string[];
                                    };
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                decision: {
                                    type: string;
                                    properties: {
                                        outcome: {
                                            type: string;
                                            enum: string[];
                                        };
                                        comments: {
                                            type: string;
                                            maxLength: number;
                                        };
                                        conditions: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                        timestamp: {
                                            $ref: string;
                                        };
                                        signature: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                                timeout: {
                                    type: string;
                                    properties: {
                                        duration: {
                                            type: string;
                                            minimum: number;
                                        };
                                        unit: {
                                            type: string;
                                            enum: string[];
                                        };
                                        action_on_timeout: {
                                            type: string;
                                            enum: string[];
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    escalation_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                trigger: {
                                    type: string;
                                    enum: string[];
                                };
                                escalate_to: {
                                    type: string;
                                    properties: {
                                        user_id: {
                                            type: string;
                                        };
                                        role: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                                notification_delay: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            subject: {
                type: string;
                properties: {
                    title: {
                        type: string;
                        maxLength: number;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                    };
                    impact_assessment: {
                        type: string;
                        properties: {
                            scope: {
                                type: string;
                                enum: string[];
                            };
                            affected_systems: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            affected_users: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            business_impact: {
                                type: string;
                                enum: string[];
                            };
                            technical_impact: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    attachments: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                file_id: {
                                    type: string;
                                };
                                filename: {
                                    type: string;
                                };
                                mime_type: {
                                    type: string;
                                };
                                size: {
                                    type: string;
                                    minimum: number;
                                };
                                description: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            risk_assessment: {
                type: string;
                properties: {
                    overall_risk_level: {
                        type: string;
                        enum: string[];
                    };
                    risk_factors: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                factor: {
                                    type: string;
                                };
                                description: {
                                    type: string;
                                };
                                probability: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                impact: {
                                    type: string;
                                    enum: string[];
                                };
                                mitigation: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_requirements: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                regulation: {
                                    type: string;
                                };
                                requirement: {
                                    type: string;
                                };
                                compliance_status: {
                                    type: string;
                                    enum: string[];
                                };
                                evidence: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            notification_settings: {
                type: string;
                properties: {
                    notify_on_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    notification_channels: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    stakeholders: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                user_id: {
                                    type: string;
                                };
                                role: {
                                    type: string;
                                };
                                notification_preference: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                confirm_operation: {
                                    type: string;
                                };
                                confirm_id: {
                                    $ref: string;
                                };
                                confirmation_type: {
                                    type: string;
                                };
                                confirm_status: {
                                    type: string;
                                };
                                approval_step: {
                                    type: string;
                                };
                                decision_reason: {
                                    type: string;
                                };
                                approver_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                confirm_details: {
                                    type: string;
                                };
                                old_value: {
                                    type: string;
                                };
                                new_value: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            confirm_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            confirm_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            approval_metrics_api: {
                                type: string;
                                format: string;
                            };
                            workflow_metrics_api: {
                                type: string;
                                format: string;
                            };
                            compliance_metrics_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    approval_metrics: {
                        type: string;
                        properties: {
                            track_approval_times: {
                                type: string;
                            };
                            track_workflow_performance: {
                                type: string;
                            };
                            track_decision_patterns: {
                                type: string;
                            };
                            track_compliance_metrics: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            confirm_processing_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            approval_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            confirm_workflow_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            decision_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            confirm_compliance_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_confirmations_count: {
                                type: string;
                                minimum: number;
                            };
                            confirm_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            confirm_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_approval_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_confirm_processing_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_approval_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_confirm_workflow_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_decision_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_confirm_compliance_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                confirm_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_workflow_change: {
                                type: string;
                            };
                            version_on_status_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    confirm_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_confirm_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_confirmations: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            ai_integration_interface: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            decision_support_api: {
                                type: string;
                                format: string;
                            };
                            recommendation_api: {
                                type: string;
                                format: string;
                            };
                            risk_assessment_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    request_format: {
                        type: string;
                        properties: {
                            input_schema: {
                                type: string;
                            };
                            output_schema: {
                                type: string;
                            };
                            authentication: {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                        enum: string[];
                                    };
                                    config: {
                                        type: string;
                                    };
                                };
                            };
                        };
                    };
                    response_handling: {
                        type: string;
                        properties: {
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                        minimum: number;
                                    };
                                    backoff_strategy: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                            };
                            fallback_behavior: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            decision_support_interface: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    external_decision_engines: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                engine_id: {
                                    type: string;
                                };
                                engine_name: {
                                    type: string;
                                };
                                engine_type: {
                                    type: string;
                                    enum: string[];
                                };
                                endpoint: {
                                    type: string;
                                    format: string;
                                };
                                priority: {
                                    type: string;
                                    minimum: number;
                                };
                                enabled: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    decision_criteria: {
                        type: string;
                        properties: {
                            supported_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            criteria_weights: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                    };
                    fallback_strategy: {
                        type: string;
                        properties: {
                            when_engines_unavailable: {
                                type: string;
                                enum: string[];
                            };
                            when_engines_disagree: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
                required: string[];
            };
            confirm_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            confirm_details: {
                type: string;
                properties: {
                    approval_level: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    timeout_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    escalation_policy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly trace: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            trace_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            plan_id: {
                $ref: string;
                description: string;
            };
            task_id: {
                $ref: string;
                description: string;
            };
            trace_type: {
                type: string;
                enum: string[];
                description: string;
            };
            severity: {
                type: string;
                enum: string[];
                description: string;
            };
            event: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    name: {
                        type: string;
                        maxLength: number;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                    };
                    category: {
                        type: string;
                        enum: string[];
                    };
                    source: {
                        type: string;
                        properties: {
                            component: {
                                type: string;
                            };
                            module: {
                                type: string;
                            };
                            function: {
                                type: string;
                            };
                            line_number: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                    data: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
            context_snapshot: {
                type: string;
                properties: {
                    variables: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    environment: {
                        type: string;
                        properties: {
                            os: {
                                type: string;
                            };
                            platform: {
                                type: string;
                            };
                            runtime_version: {
                                type: string;
                            };
                            environment_variables: {
                                type: string;
                                additionalProperties: {
                                    type: string;
                                };
                            };
                        };
                    };
                    call_stack: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                function: {
                                    type: string;
                                };
                                file: {
                                    type: string;
                                };
                                line: {
                                    type: string;
                                    minimum: number;
                                };
                                arguments: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                        };
                    };
                };
            };
            error_information: {
                type: string;
                properties: {
                    error_code: {
                        type: string;
                    };
                    error_message: {
                        type: string;
                        maxLength: number;
                    };
                    error_type: {
                        type: string;
                        enum: string[];
                    };
                    stack_trace: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                file: {
                                    type: string;
                                };
                                function: {
                                    type: string;
                                };
                                line: {
                                    type: string;
                                    minimum: number;
                                };
                                column: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                            required: string[];
                        };
                    };
                    recovery_actions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                description: {
                                    type: string;
                                };
                                parameters: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            decision_log: {
                type: string;
                properties: {
                    decision_point: {
                        type: string;
                    };
                    options_considered: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                option: {
                                    type: string;
                                };
                                score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                rationale: {
                                    type: string;
                                };
                                risk_factors: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    selected_option: {
                        type: string;
                    };
                    decision_criteria: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                criterion: {
                                    type: string;
                                };
                                weight: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                evaluation: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    confidence_level: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                };
                required: string[];
            };
            correlations: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        correlation_id: {
                            $ref: string;
                        };
                        type: {
                            type: string;
                            enum: string[];
                        };
                        related_trace_id: {
                            $ref: string;
                        };
                        strength: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        description: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                trace_operation: {
                                    type: string;
                                };
                                trace_id: {
                                    $ref: string;
                                };
                                trace_type: {
                                    type: string;
                                };
                                severity: {
                                    type: string;
                                };
                                span_ids: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                trace_status: {
                                    type: string;
                                };
                                trace_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            trace_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            trace_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            trace_processing_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            span_collection_rate_per_second: {
                                type: string;
                                minimum: number;
                            };
                            trace_analysis_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            distributed_tracing_coverage_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            trace_monitoring_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_traces_count: {
                                type: string;
                                minimum: number;
                            };
                            trace_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            trace_storage_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_trace_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_trace_processing_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_span_collection_rate_per_second: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_trace_analysis_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_distributed_tracing_coverage_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_trace_monitoring_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            tracing_api: {
                                type: string;
                                format: string;
                            };
                            alerting_api: {
                                type: string;
                                format: string;
                            };
                            dashboard_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    sampling_config: {
                        type: string;
                        properties: {
                            sampling_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            adaptive_sampling: {
                                type: string;
                            };
                            max_traces_per_second: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                trace_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_update: {
                                type: string;
                            };
                            version_on_analysis: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_traces: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            trace_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            trace_details: {
                type: string;
                properties: {
                    trace_level: {
                        type: string;
                        enum: string[];
                    };
                    sampling_rate: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly role: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
            agent_type: {
                type: string;
                enum: string[];
                description: string;
            };
            agent_status: {
                type: string;
                enum: string[];
                description: string;
            };
            expertise_level: {
                type: string;
                enum: string[];
                description: string;
            };
            communication_style: {
                type: string;
                enum: string[];
                description: string;
            };
            conflict_resolution_strategy: {
                type: string;
                enum: string[];
                description: string;
            };
            agent: {
                type: string;
                description: string;
                properties: {
                    agent_id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                        minLength: number;
                    };
                    type: {
                        $ref: string;
                    };
                    domain: {
                        type: string;
                        minLength: number;
                    };
                    status: {
                        $ref: string;
                    };
                    capabilities: {
                        $ref: string;
                    };
                    configuration: {
                        $ref: string;
                    };
                    performance_metrics: {
                        $ref: string;
                    };
                    created_at: {
                        $ref: string;
                    };
                    updated_at: {
                        $ref: string;
                    };
                    created_by: {
                        type: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            agent_capabilities: {
                type: string;
                description: string;
                properties: {
                    core: {
                        type: string;
                        properties: {
                            critical_thinking: {
                                type: string;
                            };
                            scenario_validation: {
                                type: string;
                            };
                            ddsc_dialog: {
                                type: string;
                            };
                            mplp_protocols: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                    specialist: {
                        type: string;
                        properties: {
                            domain: {
                                type: string;
                            };
                            expertise_level: {
                                $ref: string;
                            };
                            knowledge_areas: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            tools: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                    collaboration: {
                        type: string;
                        properties: {
                            communication_style: {
                                $ref: string;
                            };
                            conflict_resolution: {
                                $ref: string;
                            };
                            decision_weight: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            trust_level: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                    learning: {
                        type: string;
                        properties: {
                            experience_accumulation: {
                                type: string;
                            };
                            pattern_recognition: {
                                type: string;
                            };
                            adaptation_mechanism: {
                                type: string;
                            };
                            performance_optimization: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            agent_configuration: {
                type: string;
                description: string;
                properties: {
                    basic: {
                        type: string;
                        properties: {
                            max_concurrent_tasks: {
                                type: string;
                                minimum: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            retry_policy: {
                                $ref: string;
                            };
                            priority_level: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                    communication: {
                        type: string;
                        properties: {
                            protocols: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            message_format: {
                                type: string;
                            };
                            encryption_enabled: {
                                type: string;
                            };
                            compression_enabled: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    security: {
                        type: string;
                        properties: {
                            authentication_required: {
                                type: string;
                            };
                            authorization_level: {
                                type: string;
                            };
                            audit_logging: {
                                type: string;
                            };
                            data_encryption: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            performance_metrics: {
                type: string;
                description: string;
                properties: {
                    response_time_ms: {
                        type: string;
                        minimum: number;
                    };
                    throughput_ops_per_sec: {
                        type: string;
                        minimum: number;
                    };
                    success_rate: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    error_rate: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    last_updated: {
                        $ref: string;
                    };
                };
                additionalProperties: boolean;
            };
            retry_policy: {
                type: string;
                description: string;
                properties: {
                    max_retries: {
                        type: string;
                        minimum: number;
                    };
                    backoff_ms: {
                        type: string;
                        minimum: number;
                    };
                    backoff_multiplier: {
                        type: string;
                        minimum: number;
                    };
                    max_backoff_ms: {
                        type: string;
                        minimum: number;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            role_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                pattern: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            display_name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            role_type: {
                type: string;
                enum: string[];
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            scope: {
                type: string;
                properties: {
                    level: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    context_ids: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    plan_ids: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    resource_constraints: {
                        type: string;
                        properties: {
                            max_contexts: {
                                type: string;
                                minimum: number;
                            };
                            max_plans: {
                                type: string;
                                minimum: number;
                            };
                            allowed_resource_types: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
                description: string;
            };
            permissions: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        permission_id: {
                            $ref: string;
                        };
                        resource_type: {
                            type: string;
                            enum: string[];
                        };
                        resource_id: {
                            oneOf: ({
                                $ref: string;
                                type?: undefined;
                                const?: undefined;
                            } | {
                                type: string;
                                const: string;
                                $ref?: undefined;
                            })[];
                            description: string;
                        };
                        actions: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            minItems: number;
                        };
                        conditions: {
                            type: string;
                            properties: {
                                time_based: {
                                    type: string;
                                    properties: {
                                        start_time: {
                                            type: string;
                                            format: string;
                                        };
                                        end_time: {
                                            type: string;
                                            format: string;
                                        };
                                        timezone: {
                                            type: string;
                                        };
                                        days_of_week: {
                                            type: string;
                                            items: {
                                                type: string;
                                                minimum: number;
                                                maximum: number;
                                            };
                                        };
                                    };
                                };
                                location_based: {
                                    type: string;
                                    properties: {
                                        allowed_ip_ranges: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                        geo_restrictions: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                    };
                                };
                                context_based: {
                                    type: string;
                                    properties: {
                                        required_attributes: {
                                            type: string;
                                        };
                                        forbidden_attributes: {
                                            type: string;
                                        };
                                    };
                                };
                                approval_required: {
                                    type: string;
                                    properties: {
                                        for_actions: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                        approval_threshold: {
                                            type: string;
                                            minimum: number;
                                        };
                                        approver_roles: {
                                            type: string;
                                            items: {
                                                type: string;
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        grant_type: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        expiry: {
                            $ref: string;
                            description: string;
                        };
                    };
                    required: string[];
                };
            };
            inheritance: {
                type: string;
                properties: {
                    parent_roles: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                role_id: {
                                    $ref: string;
                                };
                                inheritance_type: {
                                    type: string;
                                    enum: string[];
                                };
                                excluded_permissions: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                conditions: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                        };
                    };
                    child_roles: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                role_id: {
                                    $ref: string;
                                };
                                delegation_level: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                can_further_delegate: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    inheritance_rules: {
                        type: string;
                        properties: {
                            merge_strategy: {
                                type: string;
                                enum: string[];
                            };
                            conflict_resolution: {
                                type: string;
                                enum: string[];
                            };
                            max_inheritance_depth: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                };
            };
            delegation: {
                type: string;
                properties: {
                    can_delegate: {
                        type: string;
                    };
                    delegatable_permissions: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    delegation_constraints: {
                        type: string;
                        properties: {
                            max_delegation_depth: {
                                type: string;
                                minimum: number;
                            };
                            time_limit: {
                                type: string;
                                minimum: number;
                            };
                            require_approval: {
                                type: string;
                            };
                            revocable: {
                                type: string;
                            };
                        };
                    };
                    active_delegations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                delegation_id: {
                                    $ref: string;
                                };
                                delegated_to: {
                                    type: string;
                                };
                                permissions: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                start_time: {
                                    $ref: string;
                                };
                                end_time: {
                                    $ref: string;
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            attributes: {
                type: string;
                properties: {
                    security_clearance: {
                        type: string;
                        enum: string[];
                    };
                    department: {
                        type: string;
                    };
                    seniority_level: {
                        type: string;
                        enum: string[];
                    };
                    certification_requirements: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                certification: {
                                    type: string;
                                };
                                level: {
                                    type: string;
                                };
                                expiry: {
                                    $ref: string;
                                };
                                issuer: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    custom_attributes: {
                        type: string;
                        additionalProperties: {
                            oneOf: {
                                type: string;
                            }[];
                        };
                    };
                };
            };
            validation_rules: {
                type: string;
                properties: {
                    assignment_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule_id: {
                                    $ref: string;
                                };
                                condition: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                    enum: string[];
                                };
                                message: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    separation_of_duties: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                conflicting_roles: {
                                    type: string;
                                    items: {
                                        $ref: string;
                                    };
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                                exception_approval_required: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
            };
            audit_settings: {
                type: string;
                properties: {
                    audit_enabled: {
                        type: string;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    retention_period: {
                        type: string;
                    };
                    compliance_frameworks: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                required: string[];
            };
            agents: {
                type: string;
                description: string;
                items: {
                    $ref: string;
                };
            };
            agent_management: {
                type: string;
                description: string;
                properties: {
                    max_agents: {
                        type: string;
                        minimum: number;
                    };
                    auto_scaling: {
                        type: string;
                    };
                    load_balancing: {
                        type: string;
                    };
                    health_check_interval_ms: {
                        type: string;
                        minimum: number;
                    };
                    default_agent_config: {
                        $ref: string;
                    };
                };
            };
            team_configuration: {
                type: string;
                description: string;
                properties: {
                    max_team_size: {
                        type: string;
                        minimum: number;
                    };
                    collaboration_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule_name: {
                                    type: string;
                                };
                                rule_type: {
                                    type: string;
                                    enum: string[];
                                };
                                rule_config: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    decision_mechanism: {
                        type: string;
                        properties: {
                            type: {
                                type: string;
                                enum: string[];
                            };
                            threshold: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                };
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            role_assignment_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            permission_check_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            role_security_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            permission_accuracy_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            role_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_roles_count: {
                                type: string;
                                minimum: number;
                            };
                            role_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            role_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_role_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_role_assignment_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    max_permission_check_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_role_security_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_permission_accuracy_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_role_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            role_access_api: {
                                type: string;
                                format: string;
                            };
                            permission_metrics_api: {
                                type: string;
                                format: string;
                            };
                            security_events_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    role_metrics: {
                        type: string;
                        properties: {
                            track_role_usage: {
                                type: string;
                            };
                            track_permission_checks: {
                                type: string;
                            };
                            track_access_patterns: {
                                type: string;
                            };
                            track_security_events: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                role_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_permission_change: {
                                type: string;
                            };
                            version_on_status_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_roles: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            role_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            role_details: {
                type: string;
                properties: {
                    role_type: {
                        type: string;
                        enum: string[];
                    };
                    inheritance_mode: {
                        type: string;
                        enum: string[];
                    };
                    permission_model: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                role_operation: {
                                    type: string;
                                };
                                role_id: {
                                    $ref: string;
                                };
                                role_name: {
                                    type: string;
                                };
                                role_type: {
                                    type: string;
                                };
                                permission_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                role_status: {
                                    type: string;
                                };
                                role_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            role_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            role_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly extension: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            extension_id: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                pattern: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            display_name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            version: {
                $ref: string;
                description: string;
            };
            extension_type: {
                type: string;
                enum: string[];
                description: string;
            };
            status: {
                type: string;
                enum: string[];
                description: string;
            };
            compatibility: {
                type: string;
                properties: {
                    mplp_version: {
                        type: string;
                        description: string;
                    };
                    required_modules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                module: {
                                    type: string;
                                    enum: string[];
                                };
                                min_version: {
                                    $ref: string;
                                };
                                max_version: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    dependencies: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                extension_id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                version_range: {
                                    type: string;
                                };
                                optional: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    conflicts: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                extension_id: {
                                    $ref: string;
                                };
                                name: {
                                    type: string;
                                };
                                reason: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            configuration: {
                type: string;
                properties: {
                    schema: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    current_config: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    default_config: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    validation_rules: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                rule: {
                                    type: string;
                                };
                                message: {
                                    type: string;
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            extension_points: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        point_id: {
                            $ref: string;
                        };
                        name: {
                            type: string;
                        };
                        type: {
                            type: string;
                            enum: string[];
                        };
                        target_module: {
                            type: string;
                            enum: string[];
                        };
                        event_name: {
                            type: string;
                        };
                        execution_order: {
                            type: string;
                            minimum: number;
                        };
                        enabled: {
                            type: string;
                        };
                        handler: {
                            type: string;
                            properties: {
                                function_name: {
                                    type: string;
                                };
                                parameters: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                                timeout_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                retry_policy: {
                                    type: string;
                                    properties: {
                                        max_retries: {
                                            type: string;
                                            minimum: number;
                                        };
                                        retry_delay_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                        backoff_strategy: {
                                            type: string;
                                            enum: string[];
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                        conditions: {
                            type: string;
                            properties: {
                                when: {
                                    type: string;
                                    description: string;
                                };
                                required_permissions: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                context_filters: {
                                    type: string;
                                    additionalProperties: boolean;
                                };
                            };
                        };
                    };
                    required: string[];
                };
            };
            api_extensions: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        endpoint_id: {
                            $ref: string;
                        };
                        path: {
                            type: string;
                            pattern: string;
                        };
                        method: {
                            type: string;
                            enum: string[];
                        };
                        description: {
                            type: string;
                        };
                        handler: {
                            type: string;
                        };
                        middleware: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        authentication_required: {
                            type: string;
                        };
                        required_permissions: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        rate_limit: {
                            type: string;
                            properties: {
                                requests_per_minute: {
                                    type: string;
                                    minimum: number;
                                };
                                burst_size: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        request_schema: {
                            type: string;
                            description: string;
                            additionalProperties: boolean;
                        };
                        response_schema: {
                            type: string;
                            description: string;
                            additionalProperties: boolean;
                        };
                    };
                    required: string[];
                };
            };
            event_subscriptions: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        subscription_id: {
                            $ref: string;
                        };
                        event_pattern: {
                            type: string;
                        };
                        source_module: {
                            type: string;
                            enum: string[];
                        };
                        handler: {
                            type: string;
                        };
                        filter_conditions: {
                            type: string;
                            additionalProperties: boolean;
                        };
                        delivery_guarantees: {
                            type: string;
                            enum: string[];
                        };
                        dead_letter_queue: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            lifecycle: {
                type: string;
                properties: {
                    install_date: {
                        $ref: string;
                    };
                    last_update: {
                        $ref: string;
                    };
                    activation_count: {
                        type: string;
                        minimum: number;
                    };
                    error_count: {
                        type: string;
                        minimum: number;
                    };
                    last_error: {
                        type: string;
                        properties: {
                            timestamp: {
                                $ref: string;
                            };
                            error_type: {
                                type: string;
                            };
                            message: {
                                type: string;
                            };
                            stack_trace: {
                                type: string;
                            };
                        };
                    };
                    performance_metrics: {
                        type: string;
                        properties: {
                            average_execution_time_ms: {
                                type: string;
                                minimum: number;
                            };
                            total_executions: {
                                type: string;
                                minimum: number;
                            };
                            success_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    health_check: {
                        type: string;
                        properties: {
                            endpoint: {
                                type: string;
                            };
                            interval_seconds: {
                                type: string;
                                minimum: number;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            failure_threshold: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            security: {
                type: string;
                properties: {
                    sandbox_enabled: {
                        type: string;
                    };
                    resource_limits: {
                        type: string;
                        properties: {
                            max_memory_mb: {
                                type: string;
                                minimum: number;
                            };
                            max_cpu_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            max_file_size_mb: {
                                type: string;
                                minimum: number;
                            };
                            network_access: {
                                type: string;
                            };
                            file_system_access: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                    code_signing: {
                        type: string;
                        properties: {
                            required: {
                                type: string;
                            };
                            signature: {
                                type: string;
                            };
                            certificate: {
                                type: string;
                            };
                            timestamp: {
                                $ref: string;
                            };
                        };
                    };
                    permissions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                permission: {
                                    type: string;
                                };
                                justification: {
                                    type: string;
                                };
                                approved: {
                                    type: string;
                                };
                                approved_by: {
                                    type: string;
                                };
                                approval_date: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
            metadata: {
                type: string;
                properties: {
                    author: {
                        type: string;
                    };
                    organization: {
                        type: string;
                    };
                    license: {
                        type: string;
                    };
                    homepage: {
                        type: string;
                        format: string;
                    };
                    repository: {
                        type: string;
                        format: string;
                    };
                    documentation: {
                        type: string;
                        format: string;
                    };
                    support_contact: {
                        type: string;
                    };
                    keywords: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    categories: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    screenshots: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                url: {
                                    type: string;
                                    format: string;
                                };
                                caption: {
                                    type: string;
                                };
                            };
                            required: string[];
                        };
                    };
                };
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                extension_operation: {
                                    type: string;
                                };
                                extension_id: {
                                    $ref: string;
                                };
                                extension_name: {
                                    type: string;
                                };
                                extension_type: {
                                    type: string;
                                };
                                extension_version: {
                                    type: string;
                                };
                                lifecycle_stage: {
                                    type: string;
                                };
                                extension_status: {
                                    type: string;
                                };
                                extension_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            extension_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            extension_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            extension_activation_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            extension_lifecycle_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            extension_ecosystem_health_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            extension_compatibility_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            extension_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_extensions_count: {
                                type: string;
                                minimum: number;
                            };
                            extension_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            extension_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_extension_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_extension_activation_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_extension_lifecycle_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_extension_ecosystem_health_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_extension_compatibility_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_extension_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            extension_lifecycle_api: {
                                type: string;
                                format: string;
                            };
                            performance_metrics_api: {
                                type: string;
                                format: string;
                            };
                            security_events_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    extension_metrics: {
                        type: string;
                        properties: {
                            track_lifecycle_events: {
                                type: string;
                            };
                            track_performance_impact: {
                                type: string;
                            };
                            track_usage_statistics: {
                                type: string;
                            };
                            track_security_events: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                extension_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_install: {
                                type: string;
                            };
                            version_on_update: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_extensions: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            extension_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            extension_details: {
                type: string;
                properties: {
                    extension_type: {
                        type: string;
                        enum: string[];
                    };
                    compatibility_mode: {
                        type: string;
                        enum: string[];
                    };
                    security_level: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly core: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            priority: {
                type: string;
                enum: string[];
                description: string;
            };
            workflow_stage: {
                type: string;
                enum: string[];
                description: string;
            };
            workflow_status: {
                type: string;
                enum: string[];
                description: string;
            };
            execution_mode: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            protocol_version: {
                $ref: string;
                description: string;
                const: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            workflow_id: {
                $ref: string;
                description: string;
            };
            orchestrator_id: {
                $ref: string;
                description: string;
            };
            workflow_config: {
                type: string;
                description: string;
                properties: {
                    name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                        description: string;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                        description: string;
                    };
                    stages: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        minItems: number;
                        uniqueItems: boolean;
                        description: string;
                    };
                    execution_mode: {
                        $ref: string;
                        description: string;
                    };
                    timeout_ms: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    max_concurrent_executions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    retry_policy: {
                        type: string;
                        properties: {
                            max_attempts: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            delay_ms: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            backoff_factor: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            execution_context: {
                type: string;
                description: string;
                properties: {
                    user_id: {
                        type: string;
                        description: string;
                    };
                    session_id: {
                        $ref: string;
                        description: string;
                    };
                    request_id: {
                        $ref: string;
                        description: string;
                    };
                    priority: {
                        $ref: string;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    variables: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                additionalProperties: boolean;
            };
            execution_status: {
                type: string;
                description: string;
                properties: {
                    status: {
                        $ref: string;
                        description: string;
                    };
                    current_stage: {
                        $ref: string;
                        description: string;
                    };
                    completed_stages: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                    stage_results: {
                        type: string;
                        description: string;
                        additionalProperties: {
                            type: string;
                            properties: {
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                start_time: {
                                    $ref: string;
                                };
                                end_time: {
                                    $ref: string;
                                };
                                duration_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                result: {
                                    type: string;
                                    description: string;
                                };
                                error: {
                                    type: string;
                                    properties: {
                                        code: {
                                            type: string;
                                        };
                                        message: {
                                            type: string;
                                        };
                                        details: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    start_time: {
                        $ref: string;
                        description: string;
                    };
                    end_time: {
                        $ref: string;
                        description: string;
                    };
                    duration_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    retry_count: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            module_coordination: {
                type: string;
                description: string;
                properties: {
                    module_adapters: {
                        type: string;
                        description: string;
                        additionalProperties: {
                            type: string;
                            properties: {
                                adapter_type: {
                                    type: string;
                                    description: string;
                                };
                                config: {
                                    type: string;
                                    description: string;
                                    additionalProperties: boolean;
                                };
                                timeout_ms: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                    description: string;
                                };
                                retry_policy: {
                                    type: string;
                                    properties: {
                                        max_attempts: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                        delay_ms: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                            additionalProperties: boolean;
                        };
                    };
                    data_flow: {
                        type: string;
                        description: string;
                        properties: {
                            input_mappings: {
                                type: string;
                                description: string;
                                additionalProperties: {
                                    type: string;
                                    properties: {
                                        source_stage: {
                                            $ref: string;
                                        };
                                        source_field: {
                                            type: string;
                                        };
                                        target_field: {
                                            type: string;
                                        };
                                        transformation: {
                                            type: string;
                                            description: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            output_mappings: {
                                type: string;
                                description: string;
                                additionalProperties: {
                                    type: string;
                                    properties: {
                                        target_stage: {
                                            $ref: string;
                                        };
                                        source_field: {
                                            type: string;
                                        };
                                        target_field: {
                                            type: string;
                                        };
                                        transformation: {
                                            type: string;
                                            description: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                additionalProperties: boolean;
            };
            event_handling: {
                type: string;
                description: string;
                properties: {
                    event_listeners: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_type: {
                                    type: string;
                                    enum: string[];
                                    description: string;
                                };
                                handler: {
                                    type: string;
                                    description: string;
                                };
                                config: {
                                    type: string;
                                    description: string;
                                    additionalProperties: boolean;
                                };
                            };
                            required: string[];
                            additionalProperties: boolean;
                        };
                        description: string;
                    };
                    event_routing: {
                        type: string;
                        description: string;
                        properties: {
                            default_handler: {
                                type: string;
                                description: string;
                            };
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        condition: {
                                            type: string;
                                            description: string;
                                        };
                                        handler: {
                                            type: string;
                                            description: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                additionalProperties: boolean;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                system_operation: {
                                    type: string;
                                };
                                workflow_id: {
                                    $ref: string;
                                };
                                orchestrator_id: {
                                    $ref: string;
                                };
                                core_operation: {
                                    type: string;
                                };
                                core_status: {
                                    type: string;
                                };
                                module_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                core_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            core_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            core_data_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            system_health_api: {
                                type: string;
                                format: string;
                            };
                            workflow_metrics_api: {
                                type: string;
                                format: string;
                            };
                            resource_metrics_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    system_metrics: {
                        type: string;
                        properties: {
                            track_workflow_execution: {
                                type: string;
                            };
                            track_module_coordination: {
                                type: string;
                            };
                            track_resource_usage: {
                                type: string;
                            };
                            track_system_health: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            core_orchestration_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            workflow_coordination_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            system_reliability_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            module_integration_success_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            core_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_workflows_count: {
                                type: string;
                                minimum: number;
                            };
                            core_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            core_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_workflow_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_core_orchestration_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_workflow_coordination_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_system_reliability_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_module_integration_success_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_core_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                system_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_deployment: {
                                type: string;
                            };
                            version_on_scaling: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    system_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_workflow_data: {
                                type: string;
                            };
                            index_system_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_workflows: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            core_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            core_details: {
                type: string;
                properties: {
                    orchestration_mode: {
                        type: string;
                        enum: string[];
                    };
                    resource_allocation: {
                        type: string;
                        enum: string[];
                    };
                    fault_tolerance: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly collab: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            entityStatus: {
                type: string;
                enum: string[];
                description: string;
            };
            decision_algorithm: {
                type: string;
                enum: string[];
                description: string;
            };
            voting_mechanism: {
                type: string;
                description: string;
                properties: {
                    anonymity: {
                        type: string;
                        description: string;
                    };
                    transparency: {
                        type: string;
                        description: string;
                    };
                    revision_allowed: {
                        type: string;
                        description: string;
                    };
                    time_limit_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            weighting_strategy: {
                type: string;
                description: string;
                properties: {
                    strategy: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    weights: {
                        type: string;
                        additionalProperties: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            consensus_requirements: {
                type: string;
                description: string;
                properties: {
                    threshold: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    quorum: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    unanimity_required: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
        };
        properties: {
            collaboration_id: {
                $ref: string;
                description: string;
            };
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            plan_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            mode: {
                type: string;
                enum: string[];
                description: string;
            };
            participants: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        participant_id: {
                            $ref: string;
                            description: string;
                        };
                        agent_id: {
                            $ref: string;
                            description: string;
                        };
                        role_id: {
                            $ref: string;
                            description: string;
                        };
                        status: {
                            $ref: string;
                            description: string;
                        };
                        capabilities: {
                            type: string;
                            items: {
                                type: string;
                            };
                            maxItems: number;
                            description: string;
                        };
                        priority: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        weight: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        joined_at: {
                            $ref: string;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                minItems: number;
                maxItems: number;
                description: string;
            };
            coordination_strategy: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    coordinator_id: {
                        $ref: string;
                        description: string;
                    };
                    decision_making: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            status: {
                $ref: string;
                description: string;
            };
            created_at: {
                $ref: string;
                description: string;
            };
            updated_at: {
                $ref: string;
                description: string;
            };
            created_by: {
                $ref: string;
                description: string;
            };
            decision_making: {
                type: string;
                description: string;
                properties: {
                    enabled: {
                        type: string;
                        description: string;
                    };
                    algorithm: {
                        $ref: string;
                    };
                    voting: {
                        $ref: string;
                    };
                    weighting: {
                        $ref: string;
                    };
                    consensus: {
                        $ref: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            council_configuration: {
                type: string;
                description: string;
                properties: {
                    council_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    session_management: {
                        type: string;
                        properties: {
                            max_session_duration_ms: {
                                type: string;
                                minimum: number;
                            };
                            quorum_enforcement: {
                                type: string;
                            };
                            automatic_adjournment: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                    voting_rules: {
                        type: string;
                        properties: {
                            multiple_rounds_allowed: {
                                type: string;
                            };
                            abstention_allowed: {
                                type: string;
                            };
                            delegation_allowed: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                additionalProperties: boolean;
            };
            metadata: {
                type: string;
                additionalProperties: boolean;
                description: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                collaboration_operation: {
                                    type: string;
                                };
                                collab_id: {
                                    $ref: string;
                                };
                                collab_name: {
                                    type: string;
                                };
                                collab_type: {
                                    type: string;
                                };
                                participant_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                collab_status: {
                                    type: string;
                                };
                                participant_id: {
                                    $ref: string;
                                };
                                task_details: {
                                    type: string;
                                };
                                decision_details: {
                                    type: string;
                                };
                                collab_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            collab_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            collab_data_logging: {
                                type: string;
                            };
                            decision_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            collaboration_efficiency_api: {
                                type: string;
                                format: string;
                            };
                            team_performance_api: {
                                type: string;
                                format: string;
                            };
                            task_coordination_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    collaboration_metrics: {
                        type: string;
                        properties: {
                            track_collaboration_efficiency: {
                                type: string;
                            };
                            track_team_performance: {
                                type: string;
                            };
                            track_task_coordination: {
                                type: string;
                            };
                            track_decision_quality: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            collab_coordination_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            team_collaboration_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            collaboration_quality_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            participant_engagement_satisfaction_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            collab_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_collaborations_count: {
                                type: string;
                                minimum: number;
                            };
                            collab_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            collab_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_collaboration_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_collab_coordination_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_team_collaboration_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_collaboration_quality_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_participant_engagement_satisfaction_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_collab_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                collaboration_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_participant_change: {
                                type: string;
                            };
                            version_on_strategy_change: {
                                type: string;
                            };
                            version_on_permission_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    collaboration_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_task_data: {
                                type: string;
                            };
                            index_decision_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_collaborations: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            collab_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            collab_details: {
                type: string;
                properties: {
                    collaboration_type: {
                        type: string;
                        enum: string[];
                    };
                    participant_limit: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    coordination_strategy: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            task_assignment_data: {
                type: string;
                properties: {
                    task_id: {
                        $ref: string;
                        description: string;
                    };
                    collaboration_id: {
                        $ref: string;
                        description: string;
                    };
                    assignee_id: {
                        $ref: string;
                        description: string;
                    };
                    task_name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                        description: string;
                    };
                    task_description: {
                        type: string;
                        maxLength: number;
                        description: string;
                    };
                    task_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    priority: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    assigned_at: {
                        $ref: string;
                        description: string;
                    };
                    due_date: {
                        $ref: string;
                        description: string;
                    };
                    estimated_duration_ms: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    dependencies: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            resource_allocation_data: {
                type: string;
                properties: {
                    allocation_id: {
                        $ref: string;
                        description: string;
                    };
                    collaboration_id: {
                        $ref: string;
                        description: string;
                    };
                    resource_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    resource_name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                        description: string;
                    };
                    allocated_to: {
                        $ref: string;
                        description: string;
                    };
                    allocation_amount: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    allocation_unit: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    allocation_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    allocated_at: {
                        $ref: string;
                        description: string;
                    };
                    expires_at: {
                        $ref: string;
                        description: string;
                    };
                    priority: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            collaboration_effectiveness_analysis: {
                type: string;
                properties: {
                    analysis_id: {
                        $ref: string;
                        description: string;
                    };
                    collaboration_id: {
                        $ref: string;
                        description: string;
                    };
                    effectiveness_score: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    efficiency_metrics: {
                        type: string;
                        properties: {
                            task_completion_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            average_response_time_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            resource_utilization_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            participant_engagement_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    quality_metrics: {
                        type: string;
                        properties: {
                            decision_quality_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            communication_effectiveness: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            conflict_resolution_rate: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    analyzed_at: {
                        $ref: string;
                        description: string;
                    };
                    recommendations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                recommendation_id: {
                                    $ref: string;
                                };
                                category: {
                                    type: string;
                                    enum: string[];
                                };
                                priority: {
                                    type: string;
                                    enum: string[];
                                };
                                description: {
                                    type: string;
                                    maxLength: number;
                                };
                                expected_impact: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                            required: string[];
                        };
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            collaboration_pattern_analysis: {
                type: string;
                properties: {
                    analysis_id: {
                        $ref: string;
                        description: string;
                    };
                    time_range: {
                        type: string;
                        properties: {
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                    identified_patterns: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                pattern_id: {
                                    $ref: string;
                                };
                                pattern_type: {
                                    type: string;
                                    enum: string[];
                                };
                                pattern_name: {
                                    type: string;
                                    maxLength: number;
                                };
                                frequency: {
                                    type: string;
                                    minimum: number;
                                    description: string;
                                };
                                confidence_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                    description: string;
                                };
                                impact_assessment: {
                                    type: string;
                                    properties: {
                                        positive_impact: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                        negative_impact: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                        overall_impact: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    trend_analysis: {
                        type: string;
                        properties: {
                            collaboration_frequency_trend: {
                                type: string;
                                enum: string[];
                            };
                            efficiency_trend: {
                                type: string;
                                enum: string[];
                            };
                            participant_engagement_trend: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    analyzed_at: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            governance_check_result: {
                type: string;
                properties: {
                    check_id: {
                        $ref: string;
                        description: string;
                    };
                    collaboration_id: {
                        $ref: string;
                        description: string;
                    };
                    check_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    check_status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    compliance_score: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    violations: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                violation_id: {
                                    $ref: string;
                                };
                                violation_type: {
                                    type: string;
                                    enum: string[];
                                };
                                severity: {
                                    type: string;
                                    enum: string[];
                                };
                                description: {
                                    type: string;
                                    maxLength: number;
                                };
                                remediation_required: {
                                    type: string;
                                };
                                remediation_steps: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                            };
                            required: string[];
                        };
                    };
                    checked_at: {
                        $ref: string;
                        description: string;
                    };
                    next_check_due: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
    readonly dialog: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            dialog_capabilities: {
                type: string;
                description: string;
                properties: {
                    basic: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                                const: boolean;
                            };
                            message_history: {
                                type: string;
                            };
                            participant_management: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    intelligent_control: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            adaptive_rounds: {
                                type: string;
                            };
                            dynamic_strategy: {
                                type: string;
                            };
                            completeness_evaluation: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    critical_thinking: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            analysis_depth: {
                                type: string;
                                enum: string[];
                            };
                            question_generation: {
                                type: string;
                            };
                            logic_validation: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    knowledge_search: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            real_time_search: {
                                type: string;
                            };
                            knowledge_validation: {
                                type: string;
                            };
                            source_verification: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    multimodal: {
                        type: string;
                        description: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            supported_modalities: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            cross_modal_translation: {
                                type: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            dialog_strategy: {
                type: string;
                description: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    rounds: {
                        type: string;
                        properties: {
                            min: {
                                type: string;
                                minimum: number;
                            };
                            max: {
                                type: string;
                                minimum: number;
                            };
                            target: {
                                type: string;
                                minimum: number;
                            };
                        };
                        additionalProperties: boolean;
                    };
                    exit_criteria: {
                        type: string;
                        properties: {
                            completeness_threshold: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            user_satisfaction_threshold: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            time_limit: {
                                type: string;
                                minimum: number;
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            dialog_content: {
                type: string;
                description: string;
                properties: {
                    text: {
                        type: string;
                    };
                    multimodal: {
                        type: string;
                        properties: {
                            audio: {
                                type: string;
                            };
                            image: {
                                type: string;
                            };
                            video: {
                                type: string;
                            };
                            file: {
                                type: string;
                            };
                        };
                        additionalProperties: boolean;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    priority: {
                        type: string;
                        enum: string[];
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
        };
        properties: {
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            dialog_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            participants: {
                type: string;
                items: {
                    type: string;
                };
                minItems: number;
                maxItems: number;
                description: string;
            };
            capabilities: {
                $ref: string;
                description: string;
            };
            strategy: {
                $ref: string;
                description: string;
            };
            context: {
                type: string;
                description: string;
                properties: {
                    session_id: {
                        type: string;
                    };
                    context_id: {
                        type: string;
                    };
                    knowledge_base: {
                        type: string;
                    };
                    previous_dialogs: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                };
                additionalProperties: boolean;
            };
            configuration: {
                type: string;
                description: string;
                properties: {
                    timeout: {
                        type: string;
                        minimum: number;
                    };
                    max_participants: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    retry_policy: {
                        type: string;
                        properties: {
                            max_retries: {
                                type: string;
                                minimum: number;
                            };
                            backoff_ms: {
                                type: string;
                                minimum: number;
                            };
                        };
                        additionalProperties: boolean;
                    };
                    security: {
                        type: string;
                        properties: {
                            encryption: {
                                type: string;
                            };
                            authentication: {
                                type: string;
                            };
                            audit_logging: {
                                type: string;
                            };
                        };
                        additionalProperties: boolean;
                    };
                };
                additionalProperties: boolean;
            };
            metadata: {
                type: string;
                additionalProperties: boolean;
                description: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    type: string;
                                    format: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                dialog_operation: {
                                    type: string;
                                };
                                dialog_id: {
                                    $ref: string;
                                };
                                dialog_name: {
                                    type: string;
                                };
                                dialog_type: {
                                    type: string;
                                };
                                participant_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                dialog_status: {
                                    type: string;
                                };
                                content_hash: {
                                    type: string;
                                };
                                dialog_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            dialog_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            dialog_data_logging: {
                                type: string;
                            };
                            content_retention_policy: {
                                type: string;
                            };
                            privacy_protection: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            dialog_quality_api: {
                                type: string;
                                format: string;
                            };
                            response_time_api: {
                                type: string;
                                format: string;
                            };
                            satisfaction_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    dialog_metrics: {
                        type: string;
                        properties: {
                            track_response_times: {
                                type: string;
                            };
                            track_dialog_quality: {
                                type: string;
                            };
                            track_user_satisfaction: {
                                type: string;
                            };
                            track_content_moderation: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            dialog_response_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            dialog_completion_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            dialog_quality_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            user_experience_satisfaction_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            dialog_interaction_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_dialogs_count: {
                                type: string;
                                minimum: number;
                            };
                            dialog_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            dialog_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_dialog_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                type: string;
                                format: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_dialog_response_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_dialog_completion_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_dialog_quality_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_user_experience_satisfaction_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_dialog_interaction_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    type: string;
                                    format: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                dialog_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_config_change: {
                                type: string;
                            };
                            version_on_participant_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    type: string;
                                    format: string;
                                };
                                last_updated: {
                                    type: string;
                                    format: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    content_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_message_content: {
                                type: string;
                            };
                            privacy_filtering: {
                                type: string;
                            };
                            sensitive_data_masking: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_dialogs: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            dialog_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            dialog_details: {
                type: string;
                properties: {
                    dialog_type: {
                        type: string;
                        enum: string[];
                    };
                    turn_management: {
                        type: string;
                        enum: string[];
                    };
                    context_retention: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
        examples: ({
            dialog_id: string;
            name: string;
            participants: string[];
            capabilities: {
                basic: {
                    enabled: boolean;
                    message_history: boolean;
                    participant_management: boolean;
                };
                intelligent_control?: undefined;
                critical_thinking?: undefined;
                knowledge_search?: undefined;
            };
            strategy?: undefined;
        } | {
            dialog_id: string;
            name: string;
            participants: string[];
            capabilities: {
                basic: {
                    enabled: boolean;
                    message_history: boolean;
                    participant_management: boolean;
                };
                intelligent_control: {
                    enabled: boolean;
                    adaptive_rounds: boolean;
                    dynamic_strategy: boolean;
                    completeness_evaluation: boolean;
                };
                critical_thinking: {
                    enabled: boolean;
                    analysis_depth: string;
                    question_generation: boolean;
                    logic_validation: boolean;
                };
                knowledge_search: {
                    enabled: boolean;
                    real_time_search: boolean;
                    knowledge_validation: boolean;
                    source_verification: boolean;
                };
            };
            strategy: {
                type: string;
                rounds: {
                    min: number;
                    max: number;
                    target: number;
                };
                exit_criteria: {
                    completeness_threshold: number;
                    user_satisfaction_threshold: number;
                };
            };
        })[];
    };
    readonly network: {
        $schema: string;
        $id: string;
        title: string;
        description: string;
        type: string;
        $defs: {
            uuid: {
                type: string;
                pattern: string;
                description: string;
            };
            timestamp: {
                type: string;
                format: string;
                description: string;
            };
            version: {
                type: string;
                pattern: string;
                description: string;
            };
            entityStatus: {
                type: string;
                enum: string[];
                description: string;
            };
        };
        properties: {
            network_id: {
                $ref: string;
                description: string;
            };
            protocol_version: {
                type: string;
                const: string;
                description: string;
            };
            timestamp: {
                $ref: string;
                description: string;
            };
            context_id: {
                $ref: string;
                description: string;
            };
            name: {
                type: string;
                minLength: number;
                maxLength: number;
                description: string;
            };
            description: {
                type: string;
                maxLength: number;
                description: string;
            };
            topology: {
                type: string;
                enum: string[];
                description: string;
            };
            nodes: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        node_id: {
                            $ref: string;
                            description: string;
                        };
                        agent_id: {
                            $ref: string;
                            description: string;
                        };
                        node_type: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        status: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        capabilities: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            maxItems: number;
                            description: string;
                        };
                        address: {
                            type: string;
                            properties: {
                                host: {
                                    type: string;
                                    description: string;
                                };
                                port: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                    description: string;
                                };
                                protocol: {
                                    type: string;
                                    enum: string[];
                                    description: string;
                                };
                            };
                            required: string[];
                            additionalProperties: boolean;
                            description: string;
                        };
                        metadata: {
                            type: string;
                            additionalProperties: boolean;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                minItems: number;
                maxItems: number;
                description: string;
            };
            edges: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        edge_id: {
                            $ref: string;
                            description: string;
                        };
                        source_node_id: {
                            $ref: string;
                            description: string;
                        };
                        target_node_id: {
                            $ref: string;
                            description: string;
                        };
                        edge_type: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        direction: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                        status: {
                            $ref: string;
                            description: string;
                        };
                        weight: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        metadata: {
                            type: string;
                            additionalProperties: boolean;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                maxItems: number;
                description: string;
            };
            discovery_mechanism: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    registry_config: {
                        type: string;
                        properties: {
                            endpoint: {
                                type: string;
                                format: string;
                                description: string;
                            };
                            authentication: {
                                type: string;
                                default: boolean;
                                description: string;
                            };
                            refresh_interval: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            routing_strategy: {
                type: string;
                properties: {
                    algorithm: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    load_balancing: {
                        type: string;
                        properties: {
                            method: {
                                type: string;
                                enum: string[];
                                description: string;
                            };
                        };
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
                description: string;
            };
            status: {
                $ref: string;
                description: string;
            };
            created_at: {
                $ref: string;
                description: string;
            };
            updated_at: {
                $ref: string;
                description: string;
            };
            created_by: {
                $ref: string;
                description: string;
            };
            metadata: {
                type: string;
                additionalProperties: boolean;
                description: string;
            };
            audit_trail: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    retention_days: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    audit_events: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                event_id: {
                                    $ref: string;
                                };
                                event_type: {
                                    type: string;
                                    enum: string[];
                                };
                                timestamp: {
                                    $ref: string;
                                };
                                user_id: {
                                    type: string;
                                };
                                user_role: {
                                    type: string;
                                };
                                action: {
                                    type: string;
                                };
                                resource: {
                                    type: string;
                                };
                                network_operation: {
                                    type: string;
                                };
                                network_id: {
                                    $ref: string;
                                };
                                network_name: {
                                    type: string;
                                };
                                network_type: {
                                    type: string;
                                };
                                node_ids: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                network_status: {
                                    type: string;
                                };
                                node_id: {
                                    $ref: string;
                                };
                                connection_details: {
                                    type: string;
                                };
                                network_details: {
                                    type: string;
                                };
                                ip_address: {
                                    type: string;
                                };
                                user_agent: {
                                    type: string;
                                };
                                session_id: {
                                    type: string;
                                };
                                correlation_id: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    compliance_settings: {
                        type: string;
                        properties: {
                            gdpr_enabled: {
                                type: string;
                            };
                            hipaa_enabled: {
                                type: string;
                            };
                            sox_enabled: {
                                type: string;
                            };
                            network_audit_level: {
                                type: string;
                                enum: string[];
                            };
                            network_data_logging: {
                                type: string;
                            };
                            traffic_logging: {
                                type: string;
                            };
                            custom_compliance: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            monitoring_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    supported_providers: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    integration_endpoints: {
                        type: string;
                        properties: {
                            metrics_api: {
                                type: string;
                                format: string;
                            };
                            network_performance_api: {
                                type: string;
                                format: string;
                            };
                            traffic_analysis_api: {
                                type: string;
                                format: string;
                            };
                            connection_status_api: {
                                type: string;
                                format: string;
                            };
                        };
                    };
                    network_metrics: {
                        type: string;
                        properties: {
                            track_network_performance: {
                                type: string;
                            };
                            track_traffic_flow: {
                                type: string;
                            };
                            track_connection_status: {
                                type: string;
                            };
                            track_security_events: {
                                type: string;
                            };
                        };
                    };
                    export_formats: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                required: string[];
            };
            performance_metrics: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    collection_interval_seconds: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    metrics: {
                        type: string;
                        properties: {
                            network_communication_latency_ms: {
                                type: string;
                                minimum: number;
                            };
                            network_topology_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            network_reliability_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            connection_success_rate_percent: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            network_management_efficiency_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            active_connections_count: {
                                type: string;
                                minimum: number;
                            };
                            network_operations_per_second: {
                                type: string;
                                minimum: number;
                            };
                            network_memory_usage_mb: {
                                type: string;
                                minimum: number;
                            };
                            average_network_complexity_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                    health_status: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            last_check: {
                                $ref: string;
                            };
                            checks: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        check_name: {
                                            type: string;
                                        };
                                        status: {
                                            type: string;
                                            enum: string[];
                                        };
                                        message: {
                                            type: string;
                                        };
                                        duration_ms: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                    alerting: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            thresholds: {
                                type: string;
                                properties: {
                                    max_network_communication_latency_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    min_network_topology_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_network_reliability_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_connection_success_rate_percent: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    min_network_management_efficiency_score: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                            notification_channels: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
            version_history: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    max_versions: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        default: number;
                    };
                    versions: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                version_id: {
                                    $ref: string;
                                };
                                version_number: {
                                    type: string;
                                    minimum: number;
                                };
                                created_at: {
                                    $ref: string;
                                };
                                created_by: {
                                    type: string;
                                };
                                change_summary: {
                                    type: string;
                                };
                                network_snapshot: {
                                    type: string;
                                };
                                change_type: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    auto_versioning: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            version_on_topology_change: {
                                type: string;
                            };
                            version_on_node_change: {
                                type: string;
                            };
                            version_on_routing_change: {
                                type: string;
                            };
                        };
                    };
                };
                required: string[];
            };
            search_metadata: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    indexing_strategy: {
                        type: string;
                        enum: string[];
                    };
                    searchable_fields: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    search_indexes: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                index_id: {
                                    type: string;
                                };
                                index_name: {
                                    type: string;
                                };
                                fields: {
                                    type: string;
                                    items: {
                                        type: string;
                                    };
                                };
                                index_type: {
                                    type: string;
                                    enum: string[];
                                };
                                created_at: {
                                    $ref: string;
                                };
                                last_updated: {
                                    $ref: string;
                                };
                            };
                            required: string[];
                        };
                    };
                    network_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_topology_data: {
                                type: string;
                            };
                            index_performance_metrics: {
                                type: string;
                            };
                            index_audit_logs: {
                                type: string;
                            };
                        };
                    };
                    auto_indexing: {
                        type: string;
                        properties: {
                            enabled: {
                                type: string;
                            };
                            index_new_networks: {
                                type: string;
                            };
                            reindex_interval_hours: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                };
                required: string[];
            };
            network_operation: {
                type: string;
                enum: string[];
                description: string;
            };
            network_details: {
                type: string;
                properties: {
                    network_topology: {
                        type: string;
                        enum: string[];
                    };
                    protocol_type: {
                        type: string;
                        enum: string[];
                    };
                    security_mode: {
                        type: string;
                        enum: string[];
                    };
                };
                description: string;
            };
            event_integration: {
                type: string;
                properties: {
                    enabled: {
                        type: string;
                    };
                    event_bus_connection: {
                        type: string;
                        properties: {
                            bus_type: {
                                type: string;
                                enum: string[];
                            };
                            connection_string: {
                                type: string;
                            };
                            topic_prefix: {
                                type: string;
                            };
                            consumer_group: {
                                type: string;
                            };
                        };
                    };
                    published_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    subscribed_events: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                    };
                    event_routing: {
                        type: string;
                        properties: {
                            routing_rules: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        rule_id: {
                                            type: string;
                                        };
                                        condition: {
                                            type: string;
                                        };
                                        target_topic: {
                                            type: string;
                                        };
                                        enabled: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        required: string[];
        additionalProperties: boolean;
    };
};
export type CoreModuleSchemaName = keyof typeof CoreModulesSchemaMap;
export type CrossCuttingConcernSchemaName = keyof typeof CrossCuttingConcernsSchemaMap;
export type SchemaName = keyof typeof SchemaMap;
export declare const AllCoreModulesSchemas: ({
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        lifecycle_stage: {
            type: string;
            enum: string[];
            description: string;
        };
        shared_state: {
            type: string;
            properties: {
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                resources: {
                    type: string;
                    properties: {
                        allocated: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                    };
                                    amount: {
                                        type: string;
                                    };
                                    unit: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        requirements: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    minimum: {
                                        type: string;
                                    };
                                    optimal: {
                                        type: string;
                                    };
                                    maximum: {
                                        type: string;
                                    };
                                    unit: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    required: string[];
                };
                dependencies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            type: {
                                type: string;
                                enum: string[];
                            };
                            name: {
                                type: string;
                            };
                            version: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                goals: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            priority: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            success_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        metric: {
                                            type: string;
                                        };
                                        operator: {
                                            type: string;
                                            enum: string[];
                                        };
                                        value: {
                                            type: string[];
                                        };
                                        unit: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        access_control: {
            type: string;
            properties: {
                owner: {
                    type: string;
                    properties: {
                        user_id: {
                            type: string;
                        };
                        role: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                permissions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            principal: {
                                type: string;
                            };
                            principal_type: {
                                type: string;
                                enum: string[];
                            };
                            resource: {
                                type: string;
                            };
                            actions: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            conditions: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
                policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            type: {
                                type: string;
                                enum: string[];
                            };
                            rules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            enforcement: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        configuration: {
            type: string;
            properties: {
                timeout_settings: {
                    type: string;
                    properties: {
                        default_timeout: {
                            type: string;
                            minimum: number;
                        };
                        max_timeout: {
                            type: string;
                            minimum: number;
                        };
                        cleanup_timeout: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                notification_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        events: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                    required: string[];
                };
                persistence: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        storage_backend: {
                            type: string;
                            enum: string[];
                        };
                        retention_policy: {
                            type: string;
                            properties: {
                                duration: {
                                    type: string;
                                };
                                max_versions: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            context_operation: {
                                type: string;
                            };
                            context_id: {
                                $ref: string;
                            };
                            context_name: {
                                type: string;
                            };
                            lifecycle_stage: {
                                type: string;
                            };
                            shared_state_keys: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            access_level: {
                                type: string;
                            };
                            context_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        context_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        context_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        context_state_api: {
                            type: string;
                            format: string;
                        };
                        cache_metrics_api: {
                            type: string;
                            format: string;
                        };
                        sync_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                context_metrics: {
                    type: string;
                    properties: {
                        track_state_changes: {
                            type: string;
                        };
                        track_cache_performance: {
                            type: string;
                        };
                        track_sync_operations: {
                            type: string;
                        };
                        track_access_patterns: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        context_access_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        context_update_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        cache_hit_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        context_sync_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        context_state_consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_contexts_count: {
                            type: string;
                            minimum: number;
                        };
                        context_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        context_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_context_size_bytes: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_context_access_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_context_update_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_cache_hit_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_context_sync_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_context_state_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            context_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_state_change: {
                            type: string;
                        };
                        version_on_cache_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                context_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_context_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_contexts: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        caching_policy: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                cache_strategy: {
                    type: string;
                    enum: string[];
                };
                cache_levels: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            level: {
                                type: string;
                            };
                            backend: {
                                type: string;
                                enum: string[];
                            };
                            ttl_seconds: {
                                type: string;
                                minimum: number;
                            };
                            max_size_mb: {
                                type: string;
                                minimum: number;
                            };
                            eviction_policy: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                cache_warming: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategies: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        sync_configuration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                sync_strategy: {
                    type: string;
                    enum: string[];
                };
                sync_targets: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            target_id: {
                                type: string;
                            };
                            target_type: {
                                type: string;
                                enum: string[];
                            };
                            sync_frequency: {
                                type: string;
                            };
                            conflict_resolution: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                replication: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        replication_factor: {
                            type: string;
                            minimum: number;
                        };
                        consistency_level: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        error_handling: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                error_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            error_type: {
                                type: string;
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            retry_config: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                        minimum: number;
                                    };
                                    backoff_strategy: {
                                        type: string;
                                        enum: string[];
                                    };
                                    base_delay_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                circuit_breaker: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        failure_threshold: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        reset_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                recovery_strategy: {
                    type: string;
                    properties: {
                        auto_recovery: {
                            type: string;
                        };
                        backup_sources: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        rollback_enabled: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        integration_endpoints: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                webhooks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            webhook_id: {
                                $ref: string;
                            };
                            url: {
                                type: string;
                                format: string;
                            };
                            events: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            authentication: {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                        enum: string[];
                                    };
                                    credentials: {
                                        type: string;
                                    };
                                };
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                    };
                                    backoff_ms: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                api_endpoints: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            endpoint_id: {
                                type: string;
                            };
                            path: {
                                type: string;
                            };
                            method: {
                                type: string;
                                enum: string[];
                            };
                            authentication_required: {
                                type: string;
                            };
                            rate_limit: {
                                type: string;
                                properties: {
                                    requests_per_minute: {
                                        type: string;
                                    };
                                    burst_limit: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        context_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        context_details: {
            type: string;
            properties: {
                context_scope: {
                    type: string;
                    enum: string[];
                };
                persistence_level: {
                    type: string;
                    enum: string[];
                };
                sharing_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
    examples: {
        protocol_version: string;
        timestamp: string;
        context_id: string;
        name: string;
        description: string;
        status: string;
        lifecycle_stage: string;
        shared_state: {
            variables: {
                environment: string;
                region: string;
                feature_flags: {
                    new_ui: boolean;
                    beta_features: boolean;
                };
            };
            resources: {
                allocated: {
                    memory: {
                        type: string;
                        amount: number;
                        unit: string;
                        status: string;
                    };
                    cpu: {
                        type: string;
                        amount: number;
                        unit: string;
                        status: string;
                    };
                };
                requirements: {
                    storage: {
                        minimum: number;
                        optimal: number;
                        maximum: number;
                        unit: string;
                    };
                };
            };
            dependencies: {
                id: string;
                type: string;
                name: string;
                version: string;
                status: string;
            }[];
            goals: {
                id: string;
                name: string;
                priority: string;
                status: string;
                success_criteria: {
                    metric: string;
                    operator: string;
                    value: number;
                    unit: string;
                }[];
            }[];
        };
        access_control: {
            owner: {
                user_id: string;
                role: string;
            };
            permissions: {
                principal: string;
                principal_type: string;
                resource: string;
                actions: string[];
            }[];
        };
        configuration: {
            timeout_settings: {
                default_timeout: number;
                max_timeout: number;
            };
            notification_settings: {
                enabled: boolean;
                channels: string[];
                events: string[];
            };
            persistence: {
                enabled: boolean;
                storage_backend: string;
                retention_policy: {
                    duration: string;
                    max_versions: number;
                };
            };
        };
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        failure_resolver: {
            type: string;
            description: string;
            properties: {
                enabled: {
                    type: string;
                    description: string;
                };
                strategies: {
                    type: string;
                    description: string;
                    items: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                };
                retry_config: {
                    type: string;
                    description: string;
                    properties: {
                        max_attempts: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        delay_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        backoff_factor: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_delay_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                rollback_config: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        checkpoint_frequency: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_rollback_depth: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                manual_intervention_config: {
                    type: string;
                    description: string;
                    properties: {
                        timeout_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        escalation_levels: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        approval_required: {
                            type: string;
                            description: string;
                        };
                    };
                };
                notification_channels: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                performance_thresholds: {
                    type: string;
                    description: string;
                    properties: {
                        max_execution_time_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_memory_usage_mb: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_cpu_usage_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                };
                diagnostic_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        supported_diagnostic_providers: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        diagnostic_endpoints: {
                            type: string;
                            properties: {
                                failure_analysis_api: {
                                    type: string;
                                    format: string;
                                };
                                pattern_detection_api: {
                                    type: string;
                                    format: string;
                                };
                                recommendation_api: {
                                    type: string;
                                    format: string;
                                };
                            };
                        };
                        request_format: {
                            type: string;
                            properties: {
                                input_schema: {
                                    type: string;
                                };
                                output_schema: {
                                    type: string;
                                };
                                timeout_ms: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                    };
                    required: string[];
                };
                vendor_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        sync_frequency_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        data_retention_days: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        sync_detailed_diagnostics: {
                            type: string;
                            description: string;
                        };
                        receive_suggestions: {
                            type: string;
                            description: string;
                        };
                        auto_apply_suggestions: {
                            type: string;
                            description: string;
                        };
                    };
                };
                proactive_prevention: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        prediction_confidence_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        auto_prevention_enabled: {
                            type: string;
                            description: string;
                        };
                        prevention_strategies: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        monitoring_interval_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                learning_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        supported_learning_providers: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        learning_endpoints: {
                            type: string;
                            properties: {
                                feedback_collection_api: {
                                    type: string;
                                    format: string;
                                };
                                pattern_learning_api: {
                                    type: string;
                                    format: string;
                                };
                                strategy_optimization_api: {
                                    type: string;
                                    format: string;
                                };
                            };
                        };
                        data_sharing: {
                            type: string;
                            properties: {
                                anonymization_enabled: {
                                    type: string;
                                };
                                data_retention_days: {
                                    type: string;
                                    minimum: number;
                                };
                                sharing_scope: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                    required: string[];
                };
                external_integrations: {
                    type: string;
                    description: string;
                    properties: {
                        diagnostic_systems: {
                            type: string;
                            description: string;
                        };
                        prediction_services: {
                            type: string;
                            description: string;
                        };
                        recovery_automation: {
                            type: string;
                            description: string;
                        };
                        optimization_engines: {
                            type: string;
                            description: string;
                        };
                        monitoring_platforms: {
                            type: string;
                            description: string;
                        };
                        recommendation_services: {
                            type: string;
                            description: string;
                        };
                    };
                };
            };
            required: string[];
        };
        recovery_suggestion: {
            type: string;
            description: string;
            minLength: number;
            maxLength: number;
        };
        development_issue: {
            type: string;
            description: string;
            properties: {
                id: {
                    type: string;
                    description: string;
                    pattern: string;
                    minLength: number;
                    maxLength: number;
                };
                type: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                severity: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                title: {
                    type: string;
                    description: string;
                    minLength: number;
                    maxLength: number;
                };
                file_path: {
                    type: string;
                    description: string;
                    pattern: string;
                };
                line_number: {
                    type: string;
                    description: string;
                    minimum: number;
                };
                description: {
                    type: string;
                    description: string;
                    maxLength: number;
                };
                suggested_fix: {
                    type: string;
                    description: string;
                    maxLength: number;
                };
                detected_at: {
                    $ref: string;
                    description: string;
                };
                status: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                dependencies: {
                    type: string;
                    description: string;
                    items: {
                        type: string;
                    };
                };
                confidence_score: {
                    type: string;
                    description: string;
                    minimum: number;
                    maximum: number;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            $ref: string;
            description: string;
        };
        timeline: {
            type: string;
            properties: {
                start_date: {
                    $ref: string;
                };
                end_date: {
                    $ref: string;
                };
                estimated_duration: {
                    type: string;
                    properties: {
                        value: {
                            type: string;
                            minimum: number;
                        };
                        unit: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                actual_duration: {
                    type: string;
                    properties: {
                        value: {
                            type: string;
                            minimum: number;
                        };
                        unit: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
        };
        tasks: {
            type: string;
            items: {
                type: string;
                properties: {
                    task_id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    status: {
                        type: string;
                        enum: string[];
                    };
                    priority: {
                        $ref: string;
                    };
                    assignee: {
                        type: string;
                        properties: {
                            user_id: {
                                type: string;
                            };
                            role: {
                                type: string;
                            };
                            team: {
                                type: string;
                            };
                        };
                    };
                    estimated_effort: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    actual_effort: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    resources_required: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                resource_type: {
                                    type: string;
                                };
                                amount: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                };
                                availability: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    acceptance_criteria: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                description: {
                                    type: string;
                                };
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                verification_method: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    sub_tasks: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    metadata: {
                        type: string;
                        properties: {
                            tags: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            category: {
                                type: string;
                            };
                            source: {
                                type: string;
                            };
                            complexity_score: {
                                type: string;
                                minimum: number;
                            };
                            risk_level: {
                                type: string;
                            };
                            automation_level: {
                                type: string;
                            };
                            retry_count: {
                                type: string;
                                minimum: number;
                            };
                            max_retry_count: {
                                type: string;
                                minimum: number;
                            };
                            intervention_required: {
                                type: string;
                            };
                            intervention_reason: {
                                type: string;
                            };
                            intervention_requested_at: {
                                $ref: string;
                            };
                            rollback_reason: {
                                type: string;
                            };
                            rollback_target: {
                                $ref: string;
                            };
                            skip_reason: {
                                type: string;
                            };
                            skip_dependents: {
                                type: string;
                            };
                            recovery_suggestions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                                maxItems: number;
                                uniqueItems: boolean;
                            };
                            development_issues: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                                maxItems: number;
                                uniqueItems: boolean;
                            };
                        };
                    };
                    started_at: {
                        $ref: string;
                    };
                    completed_at: {
                        $ref: string;
                    };
                    progress_percentage: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    actual_duration_minutes: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    error_message: {
                        type: string;
                        description: string;
                    };
                    result_data: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
        };
        dependencies: {
            type: string;
            items: {
                type: string;
                properties: {
                    id: {
                        $ref: string;
                    };
                    source_task_id: {
                        $ref: string;
                    };
                    target_task_id: {
                        $ref: string;
                    };
                    dependency_type: {
                        type: string;
                        enum: string[];
                    };
                    lag: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    criticality: {
                        type: string;
                        enum: string[];
                    };
                    condition: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
            };
        };
        milestones: {
            type: string;
            items: {
                type: string;
                properties: {
                    id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    target_date: {
                        $ref: string;
                    };
                    status: {
                        type: string;
                        enum: string[];
                    };
                    success_criteria: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                metric: {
                                    type: string;
                                };
                                target_value: {
                                    type: string[];
                                };
                                actual_value: {
                                    type: string[];
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
        };
        optimization: {
            type: string;
            properties: {
                strategy: {
                    type: string;
                    enum: string[];
                };
                constraints: {
                    type: string;
                    properties: {
                        max_duration: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        max_cost: {
                            type: string;
                            minimum: number;
                        };
                        min_quality: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        available_resources: {
                            type: string;
                            additionalProperties: boolean;
                        };
                    };
                };
                parameters: {
                    type: string;
                    additionalProperties: boolean;
                };
            };
            required: string[];
        };
        risk_assessment: {
            type: string;
            properties: {
                overall_risk_level: {
                    type: string;
                    enum: string[];
                };
                risks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            level: {
                                type: string;
                                enum: string[];
                            };
                            category: {
                                type: string;
                                enum: string[];
                            };
                            probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            impact: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            mitigation_plan: {
                                type: string;
                            };
                            contingency_plan: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        failure_resolver: {
            $ref: string;
            description: string;
        };
        configuration: {
            type: string;
            properties: {
                auto_scheduling_enabled: {
                    type: string;
                };
                dependency_validation_enabled: {
                    type: string;
                };
                risk_monitoring_enabled: {
                    type: string;
                };
                failure_recovery_enabled: {
                    type: string;
                };
                performance_tracking_enabled: {
                    type: string;
                };
                notification_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        channels: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        events: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        task_completion: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                optimization_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategy: {
                            type: string;
                            enum: string[];
                        };
                        auto_reoptimize: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                timeout_settings: {
                    type: string;
                    properties: {
                        default_task_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        plan_execution_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        dependency_resolution_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                parallel_execution_limit: {
                    type: string;
                    minimum: number;
                };
            };
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            type: string;
            description: string;
        };
        updated_by: {
            type: string;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            plan_operation: {
                                type: string;
                            };
                            plan_id: {
                                $ref: string;
                            };
                            plan_name: {
                                type: string;
                            };
                            plan_status: {
                                type: string;
                            };
                            task_ids: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            execution_stage: {
                                type: string;
                            };
                            plan_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        plan_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        plan_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        plan_execution_api: {
                            type: string;
                            format: string;
                        };
                        task_metrics_api: {
                            type: string;
                            format: string;
                        };
                        resource_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                plan_metrics: {
                    type: string;
                    properties: {
                        track_execution_progress: {
                            type: string;
                        };
                        track_task_performance: {
                            type: string;
                        };
                        track_resource_usage: {
                            type: string;
                        };
                        track_failure_recovery: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        plan_execution_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        task_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        plan_optimization_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dependency_resolution_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        plan_execution_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_plans_count: {
                            type: string;
                            minimum: number;
                        };
                        plan_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        plan_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_plan_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    required: string[];
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_plan_execution_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_task_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_plan_optimization_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dependency_resolution_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_plan_execution_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            plan_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_task_change: {
                            type: string;
                        };
                        version_on_dependency_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                plan_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_plan_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_plans: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        caching_policy: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                cache_strategy: {
                    type: string;
                    enum: string[];
                };
                cache_levels: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            level: {
                                type: string;
                            };
                            backend: {
                                type: string;
                                enum: string[];
                            };
                            ttl_seconds: {
                                type: string;
                                minimum: number;
                            };
                            max_size_mb: {
                                type: string;
                                minimum: number;
                            };
                            eviction_policy: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                cache_warming: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategies: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        plan_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        plan_details: {
            type: string;
            properties: {
                planning_strategy: {
                    type: string;
                    enum: string[];
                };
                execution_mode: {
                    type: string;
                    enum: string[];
                };
                rollback_support: {
                    type: string;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        confirm_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        confirmation_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            $ref: string;
            description: string;
        };
        requester: {
            type: string;
            properties: {
                user_id: {
                    type: string;
                };
                role: {
                    type: string;
                };
                department: {
                    type: string;
                };
                request_reason: {
                    type: string;
                    maxLength: number;
                };
            };
            required: string[];
        };
        approval_workflow: {
            type: string;
            properties: {
                workflow_type: {
                    type: string;
                    enum: string[];
                };
                steps: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            step_id: {
                                $ref: string;
                            };
                            step_order: {
                                type: string;
                                minimum: number;
                            };
                            approver: {
                                type: string;
                                properties: {
                                    user_id: {
                                        type: string;
                                    };
                                    role: {
                                        type: string;
                                    };
                                    is_required: {
                                        type: string;
                                    };
                                    delegation_allowed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            approval_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        criterion: {
                                            type: string;
                                        };
                                        required: {
                                            type: string;
                                        };
                                        weight: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            decision: {
                                type: string;
                                properties: {
                                    outcome: {
                                        type: string;
                                        enum: string[];
                                    };
                                    comments: {
                                        type: string;
                                        maxLength: number;
                                    };
                                    conditions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    timestamp: {
                                        $ref: string;
                                    };
                                    signature: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            timeout: {
                                type: string;
                                properties: {
                                    duration: {
                                        type: string;
                                        minimum: number;
                                    };
                                    unit: {
                                        type: string;
                                        enum: string[];
                                    };
                                    action_on_timeout: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                    };
                };
                escalation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            trigger: {
                                type: string;
                                enum: string[];
                            };
                            escalate_to: {
                                type: string;
                                properties: {
                                    user_id: {
                                        type: string;
                                    };
                                    role: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            notification_delay: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        subject: {
            type: string;
            properties: {
                title: {
                    type: string;
                    maxLength: number;
                };
                description: {
                    type: string;
                    maxLength: number;
                };
                impact_assessment: {
                    type: string;
                    properties: {
                        scope: {
                            type: string;
                            enum: string[];
                        };
                        affected_systems: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        affected_users: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        business_impact: {
                            type: string;
                            enum: string[];
                        };
                        technical_impact: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                attachments: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            file_id: {
                                type: string;
                            };
                            filename: {
                                type: string;
                            };
                            mime_type: {
                                type: string;
                            };
                            size: {
                                type: string;
                                minimum: number;
                            };
                            description: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        risk_assessment: {
            type: string;
            properties: {
                overall_risk_level: {
                    type: string;
                    enum: string[];
                };
                risk_factors: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            factor: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            impact: {
                                type: string;
                                enum: string[];
                            };
                            mitigation: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_requirements: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            regulation: {
                                type: string;
                            };
                            requirement: {
                                type: string;
                            };
                            compliance_status: {
                                type: string;
                                enum: string[];
                            };
                            evidence: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        notification_settings: {
            type: string;
            properties: {
                notify_on_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                notification_channels: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                stakeholders: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            user_id: {
                                type: string;
                            };
                            role: {
                                type: string;
                            };
                            notification_preference: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            confirm_operation: {
                                type: string;
                            };
                            confirm_id: {
                                $ref: string;
                            };
                            confirmation_type: {
                                type: string;
                            };
                            confirm_status: {
                                type: string;
                            };
                            approval_step: {
                                type: string;
                            };
                            decision_reason: {
                                type: string;
                            };
                            approver_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            confirm_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        confirm_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        confirm_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        approval_metrics_api: {
                            type: string;
                            format: string;
                        };
                        workflow_metrics_api: {
                            type: string;
                            format: string;
                        };
                        compliance_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                approval_metrics: {
                    type: string;
                    properties: {
                        track_approval_times: {
                            type: string;
                        };
                        track_workflow_performance: {
                            type: string;
                        };
                        track_decision_patterns: {
                            type: string;
                        };
                        track_compliance_metrics: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        confirm_processing_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        approval_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        confirm_workflow_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        decision_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        confirm_compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_confirmations_count: {
                            type: string;
                            minimum: number;
                        };
                        confirm_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        confirm_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_approval_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_confirm_processing_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_approval_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_confirm_workflow_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_decision_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_confirm_compliance_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            confirm_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_workflow_change: {
                            type: string;
                        };
                        version_on_status_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                confirm_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_confirm_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_confirmations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        ai_integration_interface: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        decision_support_api: {
                            type: string;
                            format: string;
                        };
                        recommendation_api: {
                            type: string;
                            format: string;
                        };
                        risk_assessment_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                request_format: {
                    type: string;
                    properties: {
                        input_schema: {
                            type: string;
                        };
                        output_schema: {
                            type: string;
                        };
                        authentication: {
                            type: string;
                            properties: {
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                config: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                response_handling: {
                    type: string;
                    properties: {
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        retry_policy: {
                            type: string;
                            properties: {
                                max_attempts: {
                                    type: string;
                                    minimum: number;
                                };
                                backoff_strategy: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                        fallback_behavior: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        decision_support_interface: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                external_decision_engines: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            engine_id: {
                                type: string;
                            };
                            engine_name: {
                                type: string;
                            };
                            engine_type: {
                                type: string;
                                enum: string[];
                            };
                            endpoint: {
                                type: string;
                                format: string;
                            };
                            priority: {
                                type: string;
                                minimum: number;
                            };
                            enabled: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                decision_criteria: {
                    type: string;
                    properties: {
                        supported_criteria: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        criteria_weights: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                };
                fallback_strategy: {
                    type: string;
                    properties: {
                        when_engines_unavailable: {
                            type: string;
                            enum: string[];
                        };
                        when_engines_disagree: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        confirm_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        confirm_details: {
            type: string;
            properties: {
                approval_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                timeout_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                escalation_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        trace_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        task_id: {
            $ref: string;
            description: string;
        };
        trace_type: {
            type: string;
            enum: string[];
            description: string;
        };
        severity: {
            type: string;
            enum: string[];
            description: string;
        };
        event: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
                name: {
                    type: string;
                    maxLength: number;
                };
                description: {
                    type: string;
                    maxLength: number;
                };
                category: {
                    type: string;
                    enum: string[];
                };
                source: {
                    type: string;
                    properties: {
                        component: {
                            type: string;
                        };
                        module: {
                            type: string;
                        };
                        function: {
                            type: string;
                        };
                        line_number: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                data: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
            };
            required: string[];
        };
        context_snapshot: {
            type: string;
            properties: {
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                environment: {
                    type: string;
                    properties: {
                        os: {
                            type: string;
                        };
                        platform: {
                            type: string;
                        };
                        runtime_version: {
                            type: string;
                        };
                        environment_variables: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                    };
                };
                call_stack: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            function: {
                                type: string;
                            };
                            file: {
                                type: string;
                            };
                            line: {
                                type: string;
                                minimum: number;
                            };
                            arguments: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        error_information: {
            type: string;
            properties: {
                error_code: {
                    type: string;
                };
                error_message: {
                    type: string;
                    maxLength: number;
                };
                error_type: {
                    type: string;
                    enum: string[];
                };
                stack_trace: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            file: {
                                type: string;
                            };
                            function: {
                                type: string;
                            };
                            line: {
                                type: string;
                                minimum: number;
                            };
                            column: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                };
                recovery_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                            };
                            parameters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        decision_log: {
            type: string;
            properties: {
                decision_point: {
                    type: string;
                };
                options_considered: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            option: {
                                type: string;
                            };
                            score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            rationale: {
                                type: string;
                            };
                            risk_factors: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                selected_option: {
                    type: string;
                };
                decision_criteria: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            criterion: {
                                type: string;
                            };
                            weight: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            evaluation: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                confidence_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            required: string[];
        };
        correlations: {
            type: string;
            items: {
                type: string;
                properties: {
                    correlation_id: {
                        $ref: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    related_trace_id: {
                        $ref: string;
                    };
                    strength: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    description: {
                        type: string;
                    };
                };
                required: string[];
            };
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            trace_operation: {
                                type: string;
                            };
                            trace_id: {
                                $ref: string;
                            };
                            trace_type: {
                                type: string;
                            };
                            severity: {
                                type: string;
                            };
                            span_ids: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            trace_status: {
                                type: string;
                            };
                            trace_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        trace_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        trace_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        trace_processing_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        span_collection_rate_per_second: {
                            type: string;
                            minimum: number;
                        };
                        trace_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        distributed_tracing_coverage_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        trace_monitoring_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_traces_count: {
                            type: string;
                            minimum: number;
                        };
                        trace_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        trace_storage_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_trace_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_trace_processing_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_span_collection_rate_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                min_trace_analysis_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_distributed_tracing_coverage_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_trace_monitoring_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        tracing_api: {
                            type: string;
                            format: string;
                        };
                        alerting_api: {
                            type: string;
                            format: string;
                        };
                        dashboard_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                sampling_config: {
                    type: string;
                    properties: {
                        sampling_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        adaptive_sampling: {
                            type: string;
                        };
                        max_traces_per_second: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            trace_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_update: {
                            type: string;
                        };
                        version_on_analysis: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_traces: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        trace_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        trace_details: {
            type: string;
            properties: {
                trace_level: {
                    type: string;
                    enum: string[];
                };
                sampling_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        agent_type: {
            type: string;
            enum: string[];
            description: string;
        };
        agent_status: {
            type: string;
            enum: string[];
            description: string;
        };
        expertise_level: {
            type: string;
            enum: string[];
            description: string;
        };
        communication_style: {
            type: string;
            enum: string[];
            description: string;
        };
        conflict_resolution_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        agent: {
            type: string;
            description: string;
            properties: {
                agent_id: {
                    $ref: string;
                };
                name: {
                    type: string;
                    minLength: number;
                };
                type: {
                    $ref: string;
                };
                domain: {
                    type: string;
                    minLength: number;
                };
                status: {
                    $ref: string;
                };
                capabilities: {
                    $ref: string;
                };
                configuration: {
                    $ref: string;
                };
                performance_metrics: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        agent_capabilities: {
            type: string;
            description: string;
            properties: {
                core: {
                    type: string;
                    properties: {
                        critical_thinking: {
                            type: string;
                        };
                        scenario_validation: {
                            type: string;
                        };
                        ddsc_dialog: {
                            type: string;
                        };
                        mplp_protocols: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                specialist: {
                    type: string;
                    properties: {
                        domain: {
                            type: string;
                        };
                        expertise_level: {
                            $ref: string;
                        };
                        knowledge_areas: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        tools: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                collaboration: {
                    type: string;
                    properties: {
                        communication_style: {
                            $ref: string;
                        };
                        conflict_resolution: {
                            $ref: string;
                        };
                        decision_weight: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        trust_level: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
                learning: {
                    type: string;
                    properties: {
                        experience_accumulation: {
                            type: string;
                        };
                        pattern_recognition: {
                            type: string;
                        };
                        adaptation_mechanism: {
                            type: string;
                        };
                        performance_optimization: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        agent_configuration: {
            type: string;
            description: string;
            properties: {
                basic: {
                    type: string;
                    properties: {
                        max_concurrent_tasks: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        retry_policy: {
                            $ref: string;
                        };
                        priority_level: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                communication: {
                    type: string;
                    properties: {
                        protocols: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        message_format: {
                            type: string;
                        };
                        encryption_enabled: {
                            type: string;
                        };
                        compression_enabled: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                security: {
                    type: string;
                    properties: {
                        authentication_required: {
                            type: string;
                        };
                        authorization_level: {
                            type: string;
                        };
                        audit_logging: {
                            type: string;
                        };
                        data_encryption: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        performance_metrics: {
            type: string;
            description: string;
            properties: {
                response_time_ms: {
                    type: string;
                    minimum: number;
                };
                throughput_ops_per_sec: {
                    type: string;
                    minimum: number;
                };
                success_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                error_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                last_updated: {
                    $ref: string;
                };
            };
            additionalProperties: boolean;
        };
        retry_policy: {
            type: string;
            description: string;
            properties: {
                max_retries: {
                    type: string;
                    minimum: number;
                };
                backoff_ms: {
                    type: string;
                    minimum: number;
                };
                backoff_multiplier: {
                    type: string;
                    minimum: number;
                };
                max_backoff_ms: {
                    type: string;
                    minimum: number;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        role_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            pattern: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        display_name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        role_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        scope: {
            type: string;
            properties: {
                level: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                context_ids: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                plan_ids: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                resource_constraints: {
                    type: string;
                    properties: {
                        max_contexts: {
                            type: string;
                            minimum: number;
                        };
                        max_plans: {
                            type: string;
                            minimum: number;
                        };
                        allowed_resource_types: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
            description: string;
        };
        permissions: {
            type: string;
            items: {
                type: string;
                properties: {
                    permission_id: {
                        $ref: string;
                    };
                    resource_type: {
                        type: string;
                        enum: string[];
                    };
                    resource_id: {
                        oneOf: ({
                            $ref: string;
                            type?: undefined;
                            const?: undefined;
                        } | {
                            type: string;
                            const: string;
                            $ref?: undefined;
                        })[];
                        description: string;
                    };
                    actions: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                        minItems: number;
                    };
                    conditions: {
                        type: string;
                        properties: {
                            time_based: {
                                type: string;
                                properties: {
                                    start_time: {
                                        type: string;
                                        format: string;
                                    };
                                    end_time: {
                                        type: string;
                                        format: string;
                                    };
                                    timezone: {
                                        type: string;
                                    };
                                    days_of_week: {
                                        type: string;
                                        items: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                };
                            };
                            location_based: {
                                type: string;
                                properties: {
                                    allowed_ip_ranges: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    geo_restrictions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            context_based: {
                                type: string;
                                properties: {
                                    required_attributes: {
                                        type: string;
                                    };
                                    forbidden_attributes: {
                                        type: string;
                                    };
                                };
                            };
                            approval_required: {
                                type: string;
                                properties: {
                                    for_actions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    approval_threshold: {
                                        type: string;
                                        minimum: number;
                                    };
                                    approver_roles: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                        };
                    };
                    grant_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    expiry: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
            };
        };
        inheritance: {
            type: string;
            properties: {
                parent_roles: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            role_id: {
                                $ref: string;
                            };
                            inheritance_type: {
                                type: string;
                                enum: string[];
                            };
                            excluded_permissions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            conditions: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
                child_roles: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            role_id: {
                                $ref: string;
                            };
                            delegation_level: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            can_further_delegate: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                inheritance_rules: {
                    type: string;
                    properties: {
                        merge_strategy: {
                            type: string;
                            enum: string[];
                        };
                        conflict_resolution: {
                            type: string;
                            enum: string[];
                        };
                        max_inheritance_depth: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
            };
        };
        delegation: {
            type: string;
            properties: {
                can_delegate: {
                    type: string;
                };
                delegatable_permissions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                delegation_constraints: {
                    type: string;
                    properties: {
                        max_delegation_depth: {
                            type: string;
                            minimum: number;
                        };
                        time_limit: {
                            type: string;
                            minimum: number;
                        };
                        require_approval: {
                            type: string;
                        };
                        revocable: {
                            type: string;
                        };
                    };
                };
                active_delegations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            delegation_id: {
                                $ref: string;
                            };
                            delegated_to: {
                                type: string;
                            };
                            permissions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        attributes: {
            type: string;
            properties: {
                security_clearance: {
                    type: string;
                    enum: string[];
                };
                department: {
                    type: string;
                };
                seniority_level: {
                    type: string;
                    enum: string[];
                };
                certification_requirements: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            certification: {
                                type: string;
                            };
                            level: {
                                type: string;
                            };
                            expiry: {
                                $ref: string;
                            };
                            issuer: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                custom_attributes: {
                    type: string;
                    additionalProperties: {
                        oneOf: {
                            type: string;
                        }[];
                    };
                };
            };
        };
        validation_rules: {
            type: string;
            properties: {
                assignment_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_id: {
                                $ref: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            message: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                separation_of_duties: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            conflicting_roles: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            exception_approval_required: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        audit_settings: {
            type: string;
            properties: {
                audit_enabled: {
                    type: string;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                retention_period: {
                    type: string;
                };
                compliance_frameworks: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        agents: {
            type: string;
            description: string;
            items: {
                $ref: string;
            };
        };
        agent_management: {
            type: string;
            description: string;
            properties: {
                max_agents: {
                    type: string;
                    minimum: number;
                };
                auto_scaling: {
                    type: string;
                };
                load_balancing: {
                    type: string;
                };
                health_check_interval_ms: {
                    type: string;
                    minimum: number;
                };
                default_agent_config: {
                    $ref: string;
                };
            };
        };
        team_configuration: {
            type: string;
            description: string;
            properties: {
                max_team_size: {
                    type: string;
                    minimum: number;
                };
                collaboration_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_name: {
                                type: string;
                            };
                            rule_type: {
                                type: string;
                                enum: string[];
                            };
                            rule_config: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                decision_mechanism: {
                    type: string;
                    properties: {
                        type: {
                            type: string;
                            enum: string[];
                        };
                        threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
            };
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        role_assignment_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        permission_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        role_security_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        permission_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        role_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_roles_count: {
                            type: string;
                            minimum: number;
                        };
                        role_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        role_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_role_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_role_assignment_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_permission_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_role_security_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_permission_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_role_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        role_access_api: {
                            type: string;
                            format: string;
                        };
                        permission_metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_events_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                role_metrics: {
                    type: string;
                    properties: {
                        track_role_usage: {
                            type: string;
                        };
                        track_permission_checks: {
                            type: string;
                        };
                        track_access_patterns: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            role_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                        version_on_status_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_roles: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        role_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        role_details: {
            type: string;
            properties: {
                role_type: {
                    type: string;
                    enum: string[];
                };
                inheritance_mode: {
                    type: string;
                    enum: string[];
                };
                permission_model: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            role_operation: {
                                type: string;
                            };
                            role_id: {
                                $ref: string;
                            };
                            role_name: {
                                type: string;
                            };
                            role_type: {
                                type: string;
                            };
                            permission_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            role_status: {
                                type: string;
                            };
                            role_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        role_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        role_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        extension_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            pattern: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        display_name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        version: {
            $ref: string;
            description: string;
        };
        extension_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        compatibility: {
            type: string;
            properties: {
                mplp_version: {
                    type: string;
                    description: string;
                };
                required_modules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module: {
                                type: string;
                                enum: string[];
                            };
                            min_version: {
                                $ref: string;
                            };
                            max_version: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                dependencies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            extension_id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            version_range: {
                                type: string;
                            };
                            optional: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                conflicts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            extension_id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        configuration: {
            type: string;
            properties: {
                schema: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                current_config: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                default_config: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                validation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule: {
                                type: string;
                            };
                            message: {
                                type: string;
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        extension_points: {
            type: string;
            items: {
                type: string;
                properties: {
                    point_id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    target_module: {
                        type: string;
                        enum: string[];
                    };
                    event_name: {
                        type: string;
                    };
                    execution_order: {
                        type: string;
                        minimum: number;
                    };
                    enabled: {
                        type: string;
                    };
                    handler: {
                        type: string;
                        properties: {
                            function_name: {
                                type: string;
                            };
                            parameters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_retries: {
                                        type: string;
                                        minimum: number;
                                    };
                                    retry_delay_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    backoff_strategy: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                    conditions: {
                        type: string;
                        properties: {
                            when: {
                                type: string;
                                description: string;
                            };
                            required_permissions: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            context_filters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        api_extensions: {
            type: string;
            items: {
                type: string;
                properties: {
                    endpoint_id: {
                        $ref: string;
                    };
                    path: {
                        type: string;
                        pattern: string;
                    };
                    method: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    handler: {
                        type: string;
                    };
                    middleware: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    authentication_required: {
                        type: string;
                    };
                    required_permissions: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    rate_limit: {
                        type: string;
                        properties: {
                            requests_per_minute: {
                                type: string;
                                minimum: number;
                            };
                            burst_size: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    request_schema: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    response_schema: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
        };
        event_subscriptions: {
            type: string;
            items: {
                type: string;
                properties: {
                    subscription_id: {
                        $ref: string;
                    };
                    event_pattern: {
                        type: string;
                    };
                    source_module: {
                        type: string;
                        enum: string[];
                    };
                    handler: {
                        type: string;
                    };
                    filter_conditions: {
                        type: string;
                        additionalProperties: boolean;
                    };
                    delivery_guarantees: {
                        type: string;
                        enum: string[];
                    };
                    dead_letter_queue: {
                        type: string;
                    };
                };
                required: string[];
            };
        };
        lifecycle: {
            type: string;
            properties: {
                install_date: {
                    $ref: string;
                };
                last_update: {
                    $ref: string;
                };
                activation_count: {
                    type: string;
                    minimum: number;
                };
                error_count: {
                    type: string;
                    minimum: number;
                };
                last_error: {
                    type: string;
                    properties: {
                        timestamp: {
                            $ref: string;
                        };
                        error_type: {
                            type: string;
                        };
                        message: {
                            type: string;
                        };
                        stack_trace: {
                            type: string;
                        };
                    };
                };
                performance_metrics: {
                    type: string;
                    properties: {
                        average_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        total_executions: {
                            type: string;
                            minimum: number;
                        };
                        success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_check: {
                    type: string;
                    properties: {
                        endpoint: {
                            type: string;
                        };
                        interval_seconds: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        failure_threshold: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        security: {
            type: string;
            properties: {
                sandbox_enabled: {
                    type: string;
                };
                resource_limits: {
                    type: string;
                    properties: {
                        max_memory_mb: {
                            type: string;
                            minimum: number;
                        };
                        max_cpu_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        max_file_size_mb: {
                            type: string;
                            minimum: number;
                        };
                        network_access: {
                            type: string;
                        };
                        file_system_access: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                code_signing: {
                    type: string;
                    properties: {
                        required: {
                            type: string;
                        };
                        signature: {
                            type: string;
                        };
                        certificate: {
                            type: string;
                        };
                        timestamp: {
                            $ref: string;
                        };
                    };
                };
                permissions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            permission: {
                                type: string;
                            };
                            justification: {
                                type: string;
                            };
                            approved: {
                                type: string;
                            };
                            approved_by: {
                                type: string;
                            };
                            approval_date: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        metadata: {
            type: string;
            properties: {
                author: {
                    type: string;
                };
                organization: {
                    type: string;
                };
                license: {
                    type: string;
                };
                homepage: {
                    type: string;
                    format: string;
                };
                repository: {
                    type: string;
                    format: string;
                };
                documentation: {
                    type: string;
                    format: string;
                };
                support_contact: {
                    type: string;
                };
                keywords: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                categories: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                screenshots: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            url: {
                                type: string;
                                format: string;
                            };
                            caption: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            extension_operation: {
                                type: string;
                            };
                            extension_id: {
                                $ref: string;
                            };
                            extension_name: {
                                type: string;
                            };
                            extension_type: {
                                type: string;
                            };
                            extension_version: {
                                type: string;
                            };
                            lifecycle_stage: {
                                type: string;
                            };
                            extension_status: {
                                type: string;
                            };
                            extension_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        extension_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        extension_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        extension_activation_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        extension_lifecycle_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_ecosystem_health_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_compatibility_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_extensions_count: {
                            type: string;
                            minimum: number;
                        };
                        extension_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        extension_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_extension_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_extension_activation_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_extension_lifecycle_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_ecosystem_health_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_compatibility_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        extension_lifecycle_api: {
                            type: string;
                            format: string;
                        };
                        performance_metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_events_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                extension_metrics: {
                    type: string;
                    properties: {
                        track_lifecycle_events: {
                            type: string;
                        };
                        track_performance_impact: {
                            type: string;
                        };
                        track_usage_statistics: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            extension_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_install: {
                            type: string;
                        };
                        version_on_update: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_extensions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        extension_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        extension_details: {
            type: string;
            properties: {
                extension_type: {
                    type: string;
                    enum: string[];
                };
                compatibility_mode: {
                    type: string;
                    enum: string[];
                };
                security_level: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_stage: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_status: {
            type: string;
            enum: string[];
            description: string;
        };
        execution_mode: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        workflow_id: {
            $ref: string;
            description: string;
        };
        orchestrator_id: {
            $ref: string;
            description: string;
        };
        workflow_config: {
            type: string;
            description: string;
            properties: {
                name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                description: {
                    type: string;
                    maxLength: number;
                    description: string;
                };
                stages: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    uniqueItems: boolean;
                    description: string;
                };
                execution_mode: {
                    $ref: string;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                max_concurrent_executions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_attempts: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        delay_ms: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        backoff_factor: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        execution_context: {
            type: string;
            description: string;
            properties: {
                user_id: {
                    type: string;
                    description: string;
                };
                session_id: {
                    $ref: string;
                    description: string;
                };
                request_id: {
                    $ref: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        execution_status: {
            type: string;
            description: string;
            properties: {
                status: {
                    $ref: string;
                    description: string;
                };
                current_stage: {
                    $ref: string;
                    description: string;
                };
                completed_stages: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                stage_results: {
                    type: string;
                    description: string;
                    additionalProperties: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            duration_ms: {
                                type: string;
                                minimum: number;
                            };
                            result: {
                                type: string;
                                description: string;
                            };
                            error: {
                                type: string;
                                properties: {
                                    code: {
                                        type: string;
                                    };
                                    message: {
                                        type: string;
                                    };
                                    details: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                start_time: {
                    $ref: string;
                    description: string;
                };
                end_time: {
                    $ref: string;
                    description: string;
                };
                duration_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                retry_count: {
                    type: string;
                    minimum: number;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        module_coordination: {
            type: string;
            description: string;
            properties: {
                module_adapters: {
                    type: string;
                    description: string;
                    additionalProperties: {
                        type: string;
                        properties: {
                            adapter_type: {
                                type: string;
                                description: string;
                            };
                            config: {
                                type: string;
                                description: string;
                                additionalProperties: boolean;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    delay_ms: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                };
                data_flow: {
                    type: string;
                    description: string;
                    properties: {
                        input_mappings: {
                            type: string;
                            description: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    source_stage: {
                                        $ref: string;
                                    };
                                    source_field: {
                                        type: string;
                                    };
                                    target_field: {
                                        type: string;
                                    };
                                    transformation: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                        output_mappings: {
                            type: string;
                            description: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    target_stage: {
                                        $ref: string;
                                    };
                                    source_field: {
                                        type: string;
                                    };
                                    target_field: {
                                        type: string;
                                    };
                                    transformation: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        event_handling: {
            type: string;
            description: string;
            properties: {
                event_listeners: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_type: {
                                type: string;
                                enum: string[];
                                description: string;
                            };
                            handler: {
                                type: string;
                                description: string;
                            };
                            config: {
                                type: string;
                                description: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    description: string;
                };
                event_routing: {
                    type: string;
                    description: string;
                    properties: {
                        default_handler: {
                            type: string;
                            description: string;
                        };
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    condition: {
                                        type: string;
                                        description: string;
                                    };
                                    handler: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            system_operation: {
                                type: string;
                            };
                            workflow_id: {
                                $ref: string;
                            };
                            orchestrator_id: {
                                $ref: string;
                            };
                            core_operation: {
                                type: string;
                            };
                            core_status: {
                                type: string;
                            };
                            module_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            core_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        core_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        core_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        system_health_api: {
                            type: string;
                            format: string;
                        };
                        workflow_metrics_api: {
                            type: string;
                            format: string;
                        };
                        resource_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                system_metrics: {
                    type: string;
                    properties: {
                        track_workflow_execution: {
                            type: string;
                        };
                        track_module_coordination: {
                            type: string;
                        };
                        track_resource_usage: {
                            type: string;
                        };
                        track_system_health: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        core_orchestration_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        workflow_coordination_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        system_reliability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        module_integration_success_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        core_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        core_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        core_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_workflow_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_core_orchestration_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_workflow_coordination_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_system_reliability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_module_integration_success_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_core_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            system_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_deployment: {
                            type: string;
                        };
                        version_on_scaling: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                system_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_workflow_data: {
                            type: string;
                        };
                        index_system_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_workflows: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        core_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        core_details: {
            type: string;
            properties: {
                orchestration_mode: {
                    type: string;
                    enum: string[];
                };
                resource_allocation: {
                    type: string;
                    enum: string[];
                };
                fault_tolerance: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        entityStatus: {
            type: string;
            enum: string[];
            description: string;
        };
        decision_algorithm: {
            type: string;
            enum: string[];
            description: string;
        };
        voting_mechanism: {
            type: string;
            description: string;
            properties: {
                anonymity: {
                    type: string;
                    description: string;
                };
                transparency: {
                    type: string;
                    description: string;
                };
                revision_allowed: {
                    type: string;
                    description: string;
                };
                time_limit_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        weighting_strategy: {
            type: string;
            description: string;
            properties: {
                strategy: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                weights: {
                    type: string;
                    additionalProperties: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        consensus_requirements: {
            type: string;
            description: string;
            properties: {
                threshold: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                quorum: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                unanimity_required: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        collaboration_id: {
            $ref: string;
            description: string;
        };
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        mode: {
            type: string;
            enum: string[];
            description: string;
        };
        participants: {
            type: string;
            items: {
                type: string;
                properties: {
                    participant_id: {
                        $ref: string;
                        description: string;
                    };
                    agent_id: {
                        $ref: string;
                        description: string;
                    };
                    role_id: {
                        $ref: string;
                        description: string;
                    };
                    status: {
                        $ref: string;
                        description: string;
                    };
                    capabilities: {
                        type: string;
                        items: {
                            type: string;
                        };
                        maxItems: number;
                        description: string;
                    };
                    priority: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    weight: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    joined_at: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        coordination_strategy: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                coordinator_id: {
                    $ref: string;
                    description: string;
                };
                decision_making: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        status: {
            $ref: string;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            $ref: string;
            description: string;
        };
        decision_making: {
            type: string;
            description: string;
            properties: {
                enabled: {
                    type: string;
                    description: string;
                };
                algorithm: {
                    $ref: string;
                };
                voting: {
                    $ref: string;
                };
                weighting: {
                    $ref: string;
                };
                consensus: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        council_configuration: {
            type: string;
            description: string;
            properties: {
                council_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                session_management: {
                    type: string;
                    properties: {
                        max_session_duration_ms: {
                            type: string;
                            minimum: number;
                        };
                        quorum_enforcement: {
                            type: string;
                        };
                        automatic_adjournment: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                voting_rules: {
                    type: string;
                    properties: {
                        multiple_rounds_allowed: {
                            type: string;
                        };
                        abstention_allowed: {
                            type: string;
                        };
                        delegation_allowed: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            additionalProperties: boolean;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            collaboration_operation: {
                                type: string;
                            };
                            collab_id: {
                                $ref: string;
                            };
                            collab_name: {
                                type: string;
                            };
                            collab_type: {
                                type: string;
                            };
                            participant_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            collab_status: {
                                type: string;
                            };
                            participant_id: {
                                $ref: string;
                            };
                            task_details: {
                                type: string;
                            };
                            decision_details: {
                                type: string;
                            };
                            collab_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        collab_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        collab_data_logging: {
                            type: string;
                        };
                        decision_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        collaboration_efficiency_api: {
                            type: string;
                            format: string;
                        };
                        team_performance_api: {
                            type: string;
                            format: string;
                        };
                        task_coordination_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                collaboration_metrics: {
                    type: string;
                    properties: {
                        track_collaboration_efficiency: {
                            type: string;
                        };
                        track_team_performance: {
                            type: string;
                        };
                        track_task_coordination: {
                            type: string;
                        };
                        track_decision_quality: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        collab_coordination_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        team_collaboration_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        collaboration_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        participant_engagement_satisfaction_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        collab_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_collaborations_count: {
                            type: string;
                            minimum: number;
                        };
                        collab_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        collab_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_collaboration_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_collab_coordination_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_team_collaboration_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_collaboration_quality_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_participant_engagement_satisfaction_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_collab_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            collaboration_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                collaboration_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_task_data: {
                            type: string;
                        };
                        index_decision_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_collaborations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        collab_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        collab_details: {
            type: string;
            properties: {
                collaboration_type: {
                    type: string;
                    enum: string[];
                };
                participant_limit: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                coordination_strategy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        task_assignment_data: {
            type: string;
            properties: {
                task_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                assignee_id: {
                    $ref: string;
                    description: string;
                };
                task_name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                task_description: {
                    type: string;
                    maxLength: number;
                    description: string;
                };
                task_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                assigned_at: {
                    $ref: string;
                    description: string;
                };
                due_date: {
                    $ref: string;
                    description: string;
                };
                estimated_duration_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                dependencies: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        resource_allocation_data: {
            type: string;
            properties: {
                allocation_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                resource_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                resource_name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                allocated_to: {
                    $ref: string;
                    description: string;
                };
                allocation_amount: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                allocation_unit: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                allocation_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                allocated_at: {
                    $ref: string;
                    description: string;
                };
                expires_at: {
                    $ref: string;
                    description: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        collaboration_effectiveness_analysis: {
            type: string;
            properties: {
                analysis_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                effectiveness_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                efficiency_metrics: {
                    type: string;
                    properties: {
                        task_completion_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        average_response_time_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        resource_utilization_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        participant_engagement_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                quality_metrics: {
                    type: string;
                    properties: {
                        decision_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        communication_effectiveness: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        conflict_resolution_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                analyzed_at: {
                    $ref: string;
                    description: string;
                };
                recommendations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            recommendation_id: {
                                $ref: string;
                            };
                            category: {
                                type: string;
                                enum: string[];
                            };
                            priority: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                                maxLength: number;
                            };
                            expected_impact: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        collaboration_pattern_analysis: {
            type: string;
            properties: {
                analysis_id: {
                    $ref: string;
                    description: string;
                };
                time_range: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                identified_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            pattern_id: {
                                $ref: string;
                            };
                            pattern_type: {
                                type: string;
                                enum: string[];
                            };
                            pattern_name: {
                                type: string;
                                maxLength: number;
                            };
                            frequency: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            confidence_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            impact_assessment: {
                                type: string;
                                properties: {
                                    positive_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    negative_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    overall_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                    };
                };
                trend_analysis: {
                    type: string;
                    properties: {
                        collaboration_frequency_trend: {
                            type: string;
                            enum: string[];
                        };
                        efficiency_trend: {
                            type: string;
                            enum: string[];
                        };
                        participant_engagement_trend: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                analyzed_at: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        governance_check_result: {
            type: string;
            properties: {
                check_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                check_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                check_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                compliance_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                violations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            violation_id: {
                                $ref: string;
                            };
                            violation_type: {
                                type: string;
                                enum: string[];
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                                maxLength: number;
                            };
                            remediation_required: {
                                type: string;
                            };
                            remediation_steps: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                checked_at: {
                    $ref: string;
                    description: string;
                };
                next_check_due: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        dialog_capabilities: {
            type: string;
            description: string;
            properties: {
                basic: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            const: boolean;
                        };
                        message_history: {
                            type: string;
                        };
                        participant_management: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                intelligent_control: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        adaptive_rounds: {
                            type: string;
                        };
                        dynamic_strategy: {
                            type: string;
                        };
                        completeness_evaluation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                critical_thinking: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        analysis_depth: {
                            type: string;
                            enum: string[];
                        };
                        question_generation: {
                            type: string;
                        };
                        logic_validation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                knowledge_search: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        real_time_search: {
                            type: string;
                        };
                        knowledge_validation: {
                            type: string;
                        };
                        source_verification: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                multimodal: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        supported_modalities: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        cross_modal_translation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        dialog_strategy: {
            type: string;
            description: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
                rounds: {
                    type: string;
                    properties: {
                        min: {
                            type: string;
                            minimum: number;
                        };
                        max: {
                            type: string;
                            minimum: number;
                        };
                        target: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
                exit_criteria: {
                    type: string;
                    properties: {
                        completeness_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        user_satisfaction_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        time_limit: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        dialog_content: {
            type: string;
            description: string;
            properties: {
                text: {
                    type: string;
                };
                multimodal: {
                    type: string;
                    properties: {
                        audio: {
                            type: string;
                        };
                        image: {
                            type: string;
                        };
                        video: {
                            type: string;
                        };
                        file: {
                            type: string;
                        };
                    };
                    additionalProperties: boolean;
                };
                type: {
                    type: string;
                    enum: string[];
                };
                priority: {
                    type: string;
                    enum: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        dialog_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        participants: {
            type: string;
            items: {
                type: string;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        capabilities: {
            $ref: string;
            description: string;
        };
        strategy: {
            $ref: string;
            description: string;
        };
        context: {
            type: string;
            description: string;
            properties: {
                session_id: {
                    type: string;
                };
                context_id: {
                    type: string;
                };
                knowledge_base: {
                    type: string;
                };
                previous_dialogs: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            additionalProperties: boolean;
        };
        configuration: {
            type: string;
            description: string;
            properties: {
                timeout: {
                    type: string;
                    minimum: number;
                };
                max_participants: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_retries: {
                            type: string;
                            minimum: number;
                        };
                        backoff_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
                security: {
                    type: string;
                    properties: {
                        encryption: {
                            type: string;
                        };
                        authentication: {
                            type: string;
                        };
                        audit_logging: {
                            type: string;
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                type: string;
                                format: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            dialog_operation: {
                                type: string;
                            };
                            dialog_id: {
                                $ref: string;
                            };
                            dialog_name: {
                                type: string;
                            };
                            dialog_type: {
                                type: string;
                            };
                            participant_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            dialog_status: {
                                type: string;
                            };
                            content_hash: {
                                type: string;
                            };
                            dialog_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        dialog_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        dialog_data_logging: {
                            type: string;
                        };
                        content_retention_policy: {
                            type: string;
                        };
                        privacy_protection: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        dialog_quality_api: {
                            type: string;
                            format: string;
                        };
                        response_time_api: {
                            type: string;
                            format: string;
                        };
                        satisfaction_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                dialog_metrics: {
                    type: string;
                    properties: {
                        track_response_times: {
                            type: string;
                        };
                        track_dialog_quality: {
                            type: string;
                        };
                        track_user_satisfaction: {
                            type: string;
                        };
                        track_content_moderation: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        dialog_response_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        dialog_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dialog_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        user_experience_satisfaction_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dialog_interaction_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_dialogs_count: {
                            type: string;
                            minimum: number;
                        };
                        dialog_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        dialog_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_dialog_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            type: string;
                            format: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_dialog_response_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_dialog_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dialog_quality_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_user_experience_satisfaction_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dialog_interaction_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                type: string;
                                format: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            dialog_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                type: string;
                                format: string;
                            };
                            last_updated: {
                                type: string;
                                format: string;
                            };
                        };
                        required: string[];
                    };
                };
                content_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_message_content: {
                            type: string;
                        };
                        privacy_filtering: {
                            type: string;
                        };
                        sensitive_data_masking: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_dialogs: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        dialog_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        dialog_details: {
            type: string;
            properties: {
                dialog_type: {
                    type: string;
                    enum: string[];
                };
                turn_management: {
                    type: string;
                    enum: string[];
                };
                context_retention: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
    examples: ({
        dialog_id: string;
        name: string;
        participants: string[];
        capabilities: {
            basic: {
                enabled: boolean;
                message_history: boolean;
                participant_management: boolean;
            };
            intelligent_control?: undefined;
            critical_thinking?: undefined;
            knowledge_search?: undefined;
        };
        strategy?: undefined;
    } | {
        dialog_id: string;
        name: string;
        participants: string[];
        capabilities: {
            basic: {
                enabled: boolean;
                message_history: boolean;
                participant_management: boolean;
            };
            intelligent_control: {
                enabled: boolean;
                adaptive_rounds: boolean;
                dynamic_strategy: boolean;
                completeness_evaluation: boolean;
            };
            critical_thinking: {
                enabled: boolean;
                analysis_depth: string;
                question_generation: boolean;
                logic_validation: boolean;
            };
            knowledge_search: {
                enabled: boolean;
                real_time_search: boolean;
                knowledge_validation: boolean;
                source_verification: boolean;
            };
        };
        strategy: {
            type: string;
            rounds: {
                min: number;
                max: number;
                target: number;
            };
            exit_criteria: {
                completeness_threshold: number;
                user_satisfaction_threshold: number;
            };
        };
    })[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        entityStatus: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        network_id: {
            $ref: string;
            description: string;
        };
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        topology: {
            type: string;
            enum: string[];
            description: string;
        };
        nodes: {
            type: string;
            items: {
                type: string;
                properties: {
                    node_id: {
                        $ref: string;
                        description: string;
                    };
                    agent_id: {
                        $ref: string;
                        description: string;
                    };
                    node_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    capabilities: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                        maxItems: number;
                        description: string;
                    };
                    address: {
                        type: string;
                        properties: {
                            host: {
                                type: string;
                                description: string;
                            };
                            port: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            protocol: {
                                type: string;
                                enum: string[];
                                description: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        edges: {
            type: string;
            items: {
                type: string;
                properties: {
                    edge_id: {
                        $ref: string;
                        description: string;
                    };
                    source_node_id: {
                        $ref: string;
                        description: string;
                    };
                    target_node_id: {
                        $ref: string;
                        description: string;
                    };
                    edge_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    direction: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    status: {
                        $ref: string;
                        description: string;
                    };
                    weight: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            maxItems: number;
            description: string;
        };
        discovery_mechanism: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                registry_config: {
                    type: string;
                    properties: {
                        endpoint: {
                            type: string;
                            format: string;
                            description: string;
                        };
                        authentication: {
                            type: string;
                            default: boolean;
                            description: string;
                        };
                        refresh_interval: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        routing_strategy: {
            type: string;
            properties: {
                algorithm: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                load_balancing: {
                    type: string;
                    properties: {
                        method: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                    };
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        status: {
            $ref: string;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            $ref: string;
            description: string;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            network_operation: {
                                type: string;
                            };
                            network_id: {
                                $ref: string;
                            };
                            network_name: {
                                type: string;
                            };
                            network_type: {
                                type: string;
                            };
                            node_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            network_status: {
                                type: string;
                            };
                            node_id: {
                                $ref: string;
                            };
                            connection_details: {
                                type: string;
                            };
                            network_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        network_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        network_data_logging: {
                            type: string;
                        };
                        traffic_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        network_performance_api: {
                            type: string;
                            format: string;
                        };
                        traffic_analysis_api: {
                            type: string;
                            format: string;
                        };
                        connection_status_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                network_metrics: {
                    type: string;
                    properties: {
                        track_network_performance: {
                            type: string;
                        };
                        track_traffic_flow: {
                            type: string;
                        };
                        track_connection_status: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        network_communication_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        network_topology_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        network_reliability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        connection_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        network_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_connections_count: {
                            type: string;
                            minimum: number;
                        };
                        network_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        network_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_network_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_network_communication_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_network_topology_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_network_reliability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_connection_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_network_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            network_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_topology_change: {
                            type: string;
                        };
                        version_on_node_change: {
                            type: string;
                        };
                        version_on_routing_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                network_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_topology_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_networks: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        network_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        network_details: {
            type: string;
            properties: {
                network_topology: {
                    type: string;
                    enum: string[];
                };
                protocol_type: {
                    type: string;
                    enum: string[];
                };
                security_mode: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
})[];
export declare const AllCrossCuttingConcernsSchemas: ({
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        security_level: {
            type: string;
            enum: string[];
            description: string;
        };
        authentication_method: {
            type: string;
            enum: string[];
            description: string;
        };
        encryption_algorithm: {
            type: string;
            enum: string[];
            description: string;
        };
        user_identity: {
            type: string;
            properties: {
                user_id: {
                    type: string;
                };
                username: {
                    type: string;
                };
                email: {
                    type: string;
                    format: string;
                };
                display_name: {
                    type: string;
                };
                user_type: {
                    type: string;
                    enum: string[];
                };
                organization: {
                    type: string;
                };
                department: {
                    type: string;
                };
                roles: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                groups: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                attributes: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
        };
        permission: {
            type: string;
            properties: {
                permission_id: {
                    $ref: string;
                };
                resource_type: {
                    type: string;
                    enum: string[];
                };
                resource_identifier: {
                    type: string;
                };
                actions: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                    minItems: number;
                };
                conditions: {
                    type: string;
                    properties: {
                        time_restrictions: {
                            type: string;
                            properties: {
                                start_time: {
                                    $ref: string;
                                };
                                end_time: {
                                    $ref: string;
                                };
                                allowed_hours: {
                                    type: string;
                                    items: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                allowed_days: {
                                    type: string;
                                    items: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                        };
                        ip_restrictions: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        context_requirements: {
                            type: string;
                            description: string;
                        };
                    };
                };
                granted_at: {
                    $ref: string;
                };
                expires_at: {
                    $ref: string;
                };
                granted_by: {
                    type: string;
                };
            };
            required: string[];
        };
        encryption_info: {
            type: string;
            properties: {
                algorithm: {
                    $ref: string;
                };
                key_id: {
                    type: string;
                };
                key_version: {
                    type: string;
                };
                initialization_vector: {
                    type: string;
                };
                key_derivation: {
                    type: string;
                    properties: {
                        method: {
                            type: string;
                            enum: string[];
                        };
                        iterations: {
                            type: string;
                            minimum: number;
                        };
                        salt: {
                            type: string;
                        };
                    };
                };
                signature: {
                    type: string;
                };
                certificate_chain: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        audit_entry: {
            type: string;
            properties: {
                audit_id: {
                    $ref: string;
                };
                event_type: {
                    type: string;
                    enum: string[];
                };
                user_identity: {
                    $ref: string;
                };
                resource_accessed: {
                    type: string;
                };
                action_performed: {
                    type: string;
                };
                result: {
                    type: string;
                    enum: string[];
                };
                source_ip: {
                    type: string;
                };
                user_agent: {
                    type: string;
                };
                session_id: {
                    $ref: string;
                };
                request_id: {
                    $ref: string;
                };
                additional_data: {
                    type: string;
                };
                risk_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                timestamp: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_context: {
            type: string;
            properties: {
                context_id: {
                    $ref: string;
                };
                session_id: {
                    $ref: string;
                };
                user_identity: {
                    $ref: string;
                };
                authentication_token: {
                    type: string;
                    properties: {
                        token_type: {
                            type: string;
                            enum: string[];
                        };
                        token_value: {
                            type: string;
                        };
                        issued_at: {
                            $ref: string;
                        };
                        expires_at: {
                            $ref: string;
                        };
                        issuer: {
                            type: string;
                        };
                        audience: {
                            type: string;
                        };
                        scopes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                permissions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                security_level: {
                    $ref: string;
                };
                encryption_info: {
                    $ref: string;
                };
                audit_trail: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                security_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            policy_id: {
                                type: string;
                            };
                            policy_name: {
                                type: string;
                            };
                            policy_version: {
                                type: string;
                            };
                            enforcement_level: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                threat_indicators: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            indicator_type: {
                                type: string;
                                enum: string[];
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                            };
                            detected_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_event: {
            type: string;
            properties: {
                event_id: {
                    $ref: string;
                };
                event_type: {
                    type: string;
                    enum: string[];
                };
                severity: {
                    type: string;
                    enum: string[];
                };
                source_module: {
                    $ref: string;
                };
                affected_resources: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                security_context: {
                    $ref: string;
                };
                event_details: {
                    type: string;
                    description: string;
                };
                mitigation_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action_type: {
                                type: string;
                                enum: string[];
                            };
                            action_description: {
                                type: string;
                            };
                            automated: {
                                type: string;
                            };
                            executed_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                investigation_status: {
                    type: string;
                    enum: string[];
                };
                occurred_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_policy: {
            type: string;
            properties: {
                policy_id: {
                    $ref: string;
                };
                policy_name: {
                    type: string;
                };
                policy_version: {
                    type: string;
                };
                policy_type: {
                    type: string;
                    enum: string[];
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                policy_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_id: {
                                type: string;
                            };
                            rule_name: {
                                type: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            parameters: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                enforcement_level: {
                    type: string;
                    enum: string[];
                };
                compliance_frameworks: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                effective_date: {
                    $ref: string;
                };
                expiration_date: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
                approved_by: {
                    type: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        security_context: {
            $ref: string;
        };
        security_event: {
            $ref: string;
        };
        security_policy: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            security_operation: {
                                type: string;
                            };
                            security_level: {
                                $ref: string;
                            };
                            authentication_method: {
                                $ref: string;
                            };
                            encryption_algorithm: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_resource: {
                                type: string;
                            };
                            security_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        security_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        security_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_monitoring_api: {
                            type: string;
                            format: string;
                        };
                        threat_analysis_api: {
                            type: string;
                            format: string;
                        };
                        compliance_monitoring_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                security_metrics: {
                    type: string;
                    properties: {
                        track_security_monitoring: {
                            type: string;
                        };
                        track_threat_analysis: {
                            type: string;
                        };
                        track_compliance_monitoring: {
                            type: string;
                        };
                        track_access_control: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        security_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        authentication_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        authorization_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        threat_detection_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_sessions_count: {
                            type: string;
                            minimum: number;
                        };
                        security_violations_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_authentications_count: {
                            type: string;
                            minimum: number;
                        };
                        average_encryption_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_security_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_authentication_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_authorization_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_threat_detection_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_security_violations_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            security_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_policy_change: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                security_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_security_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_security_events: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        security_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        security_details: {
            type: string;
            properties: {
                security_level: {
                    type: string;
                    enum: string[];
                };
                encryption_algorithm: {
                    type: string;
                    enum: string[];
                };
                authentication_method: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        metric_type: {
            type: string;
            enum: string[];
            description: string;
        };
        alert_level: {
            type: string;
            enum: string[];
            description: string;
        };
        sla_status: {
            type: string;
            enum: string[];
            description: string;
        };
        performance_baseline: {
            type: string;
            properties: {
                baseline_id: {
                    $ref: string;
                };
                baseline_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                baseline_period: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        duration_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                baseline_metrics: {
                    type: string;
                    properties: {
                        response_time_p50: {
                            type: string;
                        };
                        response_time_p95: {
                            type: string;
                        };
                        response_time_p99: {
                            type: string;
                        };
                        throughput_avg: {
                            type: string;
                        };
                        throughput_peak: {
                            type: string;
                        };
                        error_rate: {
                            type: string;
                        };
                        cpu_usage_avg: {
                            type: string;
                        };
                        memory_usage_avg: {
                            type: string;
                        };
                        disk_io_avg: {
                            type: string;
                        };
                        network_io_avg: {
                            type: string;
                        };
                    };
                };
                confidence_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                sample_size: {
                    type: string;
                    minimum: number;
                };
                created_at: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
            };
            required: string[];
        };
        sla_definition: {
            type: string;
            properties: {
                sla_id: {
                    $ref: string;
                };
                sla_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                sla_type: {
                    type: string;
                    enum: string[];
                };
                target_value: {
                    type: string;
                };
                target_unit: {
                    type: string;
                };
                measurement_period: {
                    type: string;
                    enum: string[];
                };
                calculation_method: {
                    type: string;
                    enum: string[];
                };
                violation_threshold: {
                    type: string;
                    properties: {
                        warning_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        critical_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        consecutive_violations: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                business_impact: {
                    type: string;
                    enum: string[];
                };
                penalty_clauses: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            violation_level: {
                                type: string;
                            };
                            penalty_type: {
                                type: string;
                                enum: string[];
                            };
                            penalty_amount: {
                                type: string;
                            };
                            penalty_description: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                effective_date: {
                    $ref: string;
                };
                expiration_date: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        performance_alert: {
            type: string;
            properties: {
                alert_id: {
                    $ref: string;
                };
                alert_name: {
                    type: string;
                };
                alert_type: {
                    type: string;
                    enum: string[];
                };
                alert_level: {
                    $ref: string;
                };
                module_name: {
                    $ref: string;
                };
                metric_name: {
                    type: string;
                };
                current_value: {
                    type: string;
                };
                threshold_value: {
                    type: string;
                };
                deviation_percentage: {
                    type: string;
                };
                alert_condition: {
                    type: string;
                };
                alert_description: {
                    type: string;
                };
                affected_operations: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                impact_assessment: {
                    type: string;
                    properties: {
                        user_impact: {
                            type: string;
                            enum: string[];
                        };
                        business_impact: {
                            type: string;
                            enum: string[];
                        };
                        estimated_affected_users: {
                            type: string;
                        };
                        estimated_revenue_impact: {
                            type: string;
                        };
                    };
                };
                recommended_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action_type: {
                                type: string;
                                enum: string[];
                            };
                            action_description: {
                                type: string;
                            };
                            priority: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            estimated_time_minutes: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                alert_status: {
                    type: string;
                    enum: string[];
                };
                triggered_at: {
                    $ref: string;
                };
                acknowledged_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
                acknowledged_by: {
                    type: string;
                };
                resolved_by: {
                    type: string;
                };
            };
            required: string[];
        };
        performance_report: {
            type: string;
            properties: {
                report_id: {
                    $ref: string;
                };
                report_name: {
                    type: string;
                };
                report_type: {
                    type: string;
                    enum: string[];
                };
                report_period: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                modules_covered: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                performance_summary: {
                    type: string;
                    properties: {
                        overall_availability: {
                            type: string;
                        };
                        average_response_time: {
                            type: string;
                        };
                        peak_throughput: {
                            type: string;
                        };
                        total_requests: {
                            type: string;
                        };
                        total_errors: {
                            type: string;
                        };
                        error_rate: {
                            type: string;
                        };
                        sla_compliance_rate: {
                            type: string;
                        };
                    };
                };
                module_performance: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module_name: {
                                $ref: string;
                            };
                            availability: {
                                type: string;
                            };
                            response_time_p95: {
                                type: string;
                            };
                            throughput_avg: {
                                type: string;
                            };
                            error_rate: {
                                type: string;
                            };
                            sla_status: {
                                $ref: string;
                            };
                            key_incidents: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                sla_compliance: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            sla_name: {
                                type: string;
                            };
                            target_value: {
                                type: string;
                            };
                            actual_value: {
                                type: string;
                            };
                            compliance_percentage: {
                                type: string;
                            };
                            status: {
                                $ref: string;
                            };
                            violations_count: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                trends_analysis: {
                    type: string;
                    properties: {
                        performance_trend: {
                            type: string;
                            enum: string[];
                        };
                        trend_confidence: {
                            type: string;
                        };
                        key_observations: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        recommendations: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                generated_at: {
                    $ref: string;
                };
                generated_by: {
                    type: string;
                };
                report_format: {
                    type: string;
                    enum: string[];
                };
            };
            required: string[];
        };
        capacity_planning: {
            type: string;
            properties: {
                planning_id: {
                    $ref: string;
                };
                planning_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                current_capacity: {
                    type: string;
                    properties: {
                        max_throughput: {
                            type: string;
                        };
                        max_concurrent_users: {
                            type: string;
                        };
                        cpu_cores: {
                            type: string;
                        };
                        memory_gb: {
                            type: string;
                        };
                        storage_gb: {
                            type: string;
                        };
                        network_bandwidth_mbps: {
                            type: string;
                        };
                    };
                };
                usage_patterns: {
                    type: string;
                    properties: {
                        peak_usage_times: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        seasonal_variations: {
                            type: string;
                        };
                        growth_rate_monthly: {
                            type: string;
                        };
                        usage_distribution: {
                            type: string;
                        };
                    };
                };
                capacity_projections: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            projection_period: {
                                type: string;
                            };
                            projected_load: {
                                type: string;
                            };
                            required_capacity: {
                                type: string;
                            };
                            capacity_gap: {
                                type: string;
                            };
                            scaling_recommendations: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                scaling_strategies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            strategy_name: {
                                type: string;
                            };
                            strategy_type: {
                                type: string;
                                enum: string[];
                            };
                            trigger_conditions: {
                                type: string;
                            };
                            scaling_actions: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            estimated_cost: {
                                type: string;
                            };
                            implementation_time: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        monitoring_overhead_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        performance_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        sla_compliance_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        capacity_prediction_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        performance_optimization_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_monitors_count: {
                            type: string;
                            minimum: number;
                        };
                        alert_frequency_per_hour: {
                            type: string;
                            minimum: number;
                        };
                        false_positive_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_response_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_monitoring_overhead_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_performance_analysis_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_sla_compliance_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_capacity_prediction_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_false_positive_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_baseline: {
            $ref: string;
        };
        sla_definition: {
            $ref: string;
        };
        performance_alert: {
            $ref: string;
        };
        performance_report: {
            $ref: string;
        };
        capacity_planning: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            performance_operation: {
                                type: string;
                            };
                            metric_name: {
                                type: string;
                            };
                            metric_value: {
                                type: string;
                            };
                            alert_level: {
                                $ref: string;
                            };
                            sla_status: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            performance_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        performance_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        performance_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        performance_monitoring_api: {
                            type: string;
                            format: string;
                        };
                        performance_analysis_api: {
                            type: string;
                            format: string;
                        };
                        sla_monitoring_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                performance_metrics: {
                    type: string;
                    properties: {
                        track_performance_monitoring: {
                            type: string;
                        };
                        track_performance_analysis: {
                            type: string;
                        };
                        track_sla_monitoring: {
                            type: string;
                        };
                        track_capacity_planning: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            performance_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_baseline_change: {
                            type: string;
                        };
                        version_on_sla_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                performance_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_performance_data: {
                            type: string;
                        };
                        index_enterprise_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_metrics: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        performance_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        performance_details: {
            type: string;
            properties: {
                collection_strategy: {
                    type: string;
                    enum: string[];
                };
                aggregation_level: {
                    type: string;
                    enum: string[];
                };
                retention_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        event_type: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        delivery_mode: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        routing_strategy: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        event_message: {
            type: string;
            properties: {
                event_id: {
                    $ref: string;
                };
                event_type: {
                    $ref: string;
                };
                event_name: {
                    type: string;
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                routing_key: {
                    type: string;
                    description: string;
                };
                headers: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                delivery_mode: {
                    $ref: string;
                };
                ttl_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                correlation_id: {
                    $ref: string;
                    description: string;
                };
                reply_to: {
                    type: string;
                    description: string;
                };
                trace_context: {
                    type: string;
                    properties: {
                        trace_id: {
                            $ref: string;
                        };
                        span_id: {
                            $ref: string;
                        };
                        parent_span_id: {
                            $ref: string;
                        };
                    };
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                expires_at: {
                    $ref: string;
                };
                event_bus_details: {
                    type: string;
                    properties: {
                        bus_topology: {
                            type: string;
                            enum: string[];
                        };
                        message_ordering: {
                            type: string;
                            enum: string[];
                        };
                        delivery_guarantee: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        event_subscription: {
            type: string;
            properties: {
                subscription_id: {
                    $ref: string;
                };
                subscriber_module: {
                    $ref: string;
                };
                event_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_type: {
                                $ref: string;
                            };
                            event_name_pattern: {
                                type: string;
                                description: string;
                            };
                            source_modules: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                            };
                            routing_key_pattern: {
                                type: string;
                                description: string;
                            };
                            filter_conditions: {
                                type: string;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    minItems: number;
                };
                delivery_options: {
                    type: string;
                    properties: {
                        max_retry_count: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        retry_delay_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        dead_letter_enabled: {
                            type: string;
                            default: boolean;
                        };
                        batch_size: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        batch_timeout_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                active: {
                    type: string;
                    default: boolean;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        event_delivery_receipt: {
            type: string;
            properties: {
                receipt_id: {
                    $ref: string;
                };
                event_id: {
                    $ref: string;
                };
                subscription_id: {
                    $ref: string;
                };
                delivery_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                delivery_attempt: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                processing_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                delivered_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        event_bus_metrics: {
            type: string;
            properties: {
                metric_id: {
                    $ref: string;
                };
                time_window_start: {
                    $ref: string;
                };
                time_window_end: {
                    $ref: string;
                };
                throughput_metrics: {
                    type: string;
                    properties: {
                        events_published: {
                            type: string;
                        };
                        events_delivered: {
                            type: string;
                        };
                        events_failed: {
                            type: string;
                        };
                        average_latency_ms: {
                            type: string;
                        };
                        p95_latency_ms: {
                            type: string;
                        };
                        p99_latency_ms: {
                            type: string;
                        };
                    };
                };
                resource_metrics: {
                    type: string;
                    properties: {
                        memory_usage_mb: {
                            type: string;
                        };
                        cpu_usage_percent: {
                            type: string;
                        };
                        network_io_mb: {
                            type: string;
                        };
                        queue_depth: {
                            type: string;
                        };
                    };
                };
                error_metrics: {
                    type: string;
                    properties: {
                        error_rate: {
                            type: string;
                        };
                        timeout_rate: {
                            type: string;
                        };
                        dead_letter_rate: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        event_message: {
            $ref: string;
        };
        event_subscription: {
            $ref: string;
        };
        event_delivery_receipt: {
            $ref: string;
        };
        event_bus_metrics: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            event_bus_operation: {
                                type: string;
                            };
                            message_id: {
                                $ref: string;
                            };
                            topic_name: {
                                type: string;
                            };
                            subscriber_id: {
                                $ref: string;
                            };
                            delivery_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        event_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        message_content_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        event_throughput_api: {
                            type: string;
                            format: string;
                        };
                        message_latency_api: {
                            type: string;
                            format: string;
                        };
                        queue_status_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                event_bus_metrics: {
                    type: string;
                    properties: {
                        track_event_throughput: {
                            type: string;
                        };
                        track_message_latency: {
                            type: string;
                        };
                        track_queue_status: {
                            type: string;
                        };
                        track_subscription_health: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        event_throughput_per_second: {
                            type: string;
                            minimum: number;
                        };
                        message_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        queue_depth_count: {
                            type: string;
                            minimum: number;
                        };
                        delivery_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        subscription_health_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_subscribers_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_deliveries_count: {
                            type: string;
                            minimum: number;
                        };
                        dead_letter_queue_size: {
                            type: string;
                            minimum: number;
                        };
                        average_processing_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                min_throughput_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                max_message_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_queue_depth_count: {
                                    type: string;
                                    minimum: number;
                                };
                                min_delivery_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_dead_letter_queue_size: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            event_bus_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_topic_change: {
                            type: string;
                        };
                        version_on_subscription_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                event_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_message_content: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_events: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        event_bus_details: {
            type: string;
            properties: {
                bus_topology: {
                    type: string;
                    enum: string[];
                };
                message_ordering: {
                    type: string;
                    enum: string[];
                };
                delivery_guarantee: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_bus_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        error_code: {
            type: string;
            pattern: string;
            description: string;
        };
        error_category: {
            type: string;
            enum: string[];
            description: string;
        };
        error_severity: {
            type: string;
            enum: string[];
            description: string;
        };
        recovery_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        stack_frame: {
            type: string;
            properties: {
                module: {
                    $ref: string;
                };
                function_name: {
                    type: string;
                };
                file_path: {
                    type: string;
                };
                line_number: {
                    type: string;
                    minimum: number;
                };
                column_number: {
                    type: string;
                    minimum: number;
                };
                source_code: {
                    type: string;
                };
                error_handling_operation: {
                    type: string;
                    enum: string[];
                };
                error_handling_details: {
                    type: string;
                    properties: {
                        error_category: {
                            type: string;
                        };
                        recovery_strategy: {
                            type: string;
                        };
                        escalation_level: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        error_context: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                session_id: {
                    $ref: string;
                };
                user_id: {
                    type: string;
                };
                operation: {
                    type: string;
                };
                input_parameters: {
                    type: string;
                };
                environment: {
                    type: string;
                    enum: string[];
                };
                system_state: {
                    type: string;
                };
                correlation_data: {
                    type: string;
                };
            };
        };
        error_info: {
            type: string;
            properties: {
                error_id: {
                    $ref: string;
                };
                error_code: {
                    $ref: string;
                };
                error_category: {
                    $ref: string;
                };
                error_severity: {
                    $ref: string;
                };
                error_message: {
                    type: string;
                    description: string;
                };
                technical_message: {
                    type: string;
                    description: string;
                };
                error_details: {
                    type: string;
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                source_function: {
                    type: string;
                };
                stack_trace: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                inner_errors: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                context: {
                    $ref: string;
                };
                recovery_suggestions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            strategy: {
                                $ref: string;
                            };
                            description: {
                                type: string;
                            };
                            automated: {
                                type: string;
                            };
                            success_probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                };
                occurred_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
                resolution_notes: {
                    type: string;
                };
            };
            required: string[];
        };
        error_propagation: {
            type: string;
            properties: {
                propagation_id: {
                    $ref: string;
                };
                original_error: {
                    $ref: string;
                };
                propagation_chain: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module: {
                                $ref: string;
                            };
                            function: {
                                type: string;
                            };
                            transformation: {
                                type: string;
                                enum: string[];
                            };
                            added_context: {
                                type: string;
                            };
                            timestamp: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                final_error: {
                    $ref: string;
                };
                propagation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_name: {
                                type: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            transformation_template: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        error_recovery: {
            type: string;
            properties: {
                recovery_id: {
                    $ref: string;
                };
                error_id: {
                    $ref: string;
                };
                recovery_strategy: {
                    $ref: string;
                };
                recovery_attempts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            attempt_number: {
                                type: string;
                                minimum: number;
                            };
                            strategy_used: {
                                $ref: string;
                            };
                            attempt_timestamp: {
                                $ref: string;
                            };
                            success: {
                                type: string;
                            };
                            duration_ms: {
                                type: string;
                                minimum: number;
                            };
                            result_data: {
                                type: string;
                            };
                            failure_reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                final_outcome: {
                    type: string;
                    enum: string[];
                };
                recovery_metadata: {
                    type: string;
                    properties: {
                        total_attempts: {
                            type: string;
                        };
                        total_duration_ms: {
                            type: string;
                        };
                        resources_consumed: {
                            type: string;
                        };
                        side_effects: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        error_monitoring: {
            type: string;
            properties: {
                monitoring_id: {
                    $ref: string;
                };
                time_window: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        duration_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                error_statistics: {
                    type: string;
                    properties: {
                        total_errors: {
                            type: string;
                            minimum: number;
                        };
                        errors_by_category: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        errors_by_severity: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        errors_by_module: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        error_rate: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        recovery_success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                trending_data: {
                    type: string;
                    properties: {
                        error_trend: {
                            type: string;
                            enum: string[];
                        };
                        trend_confidence: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        predicted_next_hour: {
                            type: string;
                        };
                        anomaly_detected: {
                            type: string;
                        };
                        anomaly_description: {
                            type: string;
                        };
                    };
                };
                alert_thresholds: {
                    type: string;
                    properties: {
                        error_rate_threshold: {
                            type: string;
                        };
                        critical_error_threshold: {
                            type: string;
                        };
                        recovery_failure_threshold: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        error_notification: {
            type: string;
            properties: {
                notification_id: {
                    $ref: string;
                };
                error_id: {
                    $ref: string;
                };
                notification_type: {
                    type: string;
                    enum: string[];
                };
                recipients: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            recipient_type: {
                                type: string;
                                enum: string[];
                            };
                            recipient_id: {
                                type: string;
                            };
                            notification_method: {
                                type: string;
                                enum: string[];
                            };
                            priority: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                notification_content: {
                    type: string;
                    properties: {
                        subject: {
                            type: string;
                        };
                        summary: {
                            type: string;
                        };
                        detailed_message: {
                            type: string;
                        };
                        action_items: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        attachments: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    name: {
                                        type: string;
                                    };
                                    type: {
                                        type: string;
                                    };
                                    content: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                delivery_status: {
                    type: string;
                    properties: {
                        sent_at: {
                            $ref: string;
                        };
                        delivery_attempts: {
                            type: string;
                        };
                        successful_deliveries: {
                            type: string;
                        };
                        failed_deliveries: {
                            type: string;
                        };
                        delivery_errors: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        error_info: {
            $ref: string;
        };
        error_propagation: {
            $ref: string;
        };
        error_recovery: {
            $ref: string;
        };
        error_monitoring: {
            $ref: string;
        };
        error_notification: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            error_operation: {
                                type: string;
                            };
                            error_code: {
                                $ref: string;
                            };
                            error_category: {
                                $ref: string;
                            };
                            error_severity: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            recovery_strategy: {
                                $ref: string;
                            };
                            error_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        error_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        error_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        error_handling_api: {
                            type: string;
                            format: string;
                        };
                        exception_analysis_api: {
                            type: string;
                            format: string;
                        };
                        system_stability_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                error_metrics: {
                    type: string;
                    properties: {
                        track_error_handling: {
                            type: string;
                        };
                        track_exception_analysis: {
                            type: string;
                        };
                        track_system_stability: {
                            type: string;
                        };
                        track_recovery_success: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        error_handling_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        error_frequency_per_hour: {
                            type: string;
                            minimum: number;
                        };
                        recovery_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        system_stability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        exception_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_errors_count: {
                            type: string;
                            minimum: number;
                        };
                        critical_errors_count: {
                            type: string;
                            minimum: number;
                        };
                        escalation_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_recovery_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_error_handling_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_error_frequency_per_hour: {
                                    type: string;
                                    minimum: number;
                                };
                                min_recovery_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_system_stability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_critical_errors_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            error_handling_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                        version_on_pattern_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                error_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_error_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_errors: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        error_handling_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        error_handling_details: {
            type: string;
            properties: {
                error_category: {
                    type: string;
                };
                recovery_strategy: {
                    type: string;
                };
                escalation_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_type: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        response_status: {
            type: string;
            enum: string[];
            description: string;
        };
        error_info: {
            type: string;
            properties: {
                error_code: {
                    type: string;
                    pattern: string;
                    description: string;
                };
                error_message: {
                    type: string;
                    description: string;
                };
                error_details: {
                    type: string;
                    description: string;
                };
                stack_trace: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            required: string[];
        };
        coordination_request: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                coordination_type: {
                    $ref: string;
                };
                operation: {
                    type: string;
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                retry_count: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                correlation_id: {
                    $ref: string;
                    description: string;
                };
                context: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        coordination_response: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                response_id: {
                    $ref: string;
                };
                status: {
                    $ref: string;
                };
                result: {
                    type: string;
                    description: string;
                };
                error: {
                    $ref: string;
                };
                execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        coordination_notification: {
            type: string;
            properties: {
                notification_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                event_type: {
                    type: string;
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        coordination_request: {
            $ref: string;
        };
        coordination_response: {
            $ref: string;
        };
        coordination_notification: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            coordination_operation: {
                                type: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_module: {
                                $ref: string;
                            };
                            coordination_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        coordination_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        synchronization_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        coordination_efficiency_api: {
                            type: string;
                            format: string;
                        };
                        synchronization_performance_api: {
                            type: string;
                            format: string;
                        };
                        conflict_resolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                coordination_metrics: {
                    type: string;
                    properties: {
                        track_coordination_efficiency: {
                            type: string;
                        };
                        track_synchronization_performance: {
                            type: string;
                        };
                        track_conflict_resolution: {
                            type: string;
                        };
                        track_state_consistency: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        coordination_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        synchronization_efficiency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        conflict_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        state_consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        coordination_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_coordinations_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_coordinations_count: {
                            type: string;
                            minimum: number;
                        };
                        lock_contention_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_sync_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_coordination_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_synchronization_efficiency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_conflict_resolution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_state_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_coordination_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            coordination_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_module_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                coordination_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_coordination_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_coordinations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        coordination_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_details: {
            type: string;
            properties: {
                coordination_pattern: {
                    type: string;
                    enum: string[];
                };
                consensus_algorithm: {
                    type: string;
                    enum: string[];
                };
                conflict_resolution: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        execution_mode: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_status: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_step: {
            type: string;
            properties: {
                step_id: {
                    $ref: string;
                };
                step_name: {
                    type: string;
                    description: string;
                };
                target_module: {
                    $ref: string;
                };
                operation: {
                    type: string;
                    description: string;
                };
                input_data: {
                    type: string;
                    description: string;
                };
                dependencies: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_retries: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        retry_delay_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        backoff_multiplier: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                orchestration_details: {
                    type: string;
                    properties: {
                        orchestration_pattern: {
                            type: string;
                            enum: string[];
                        };
                        resource_allocation: {
                            type: string;
                            enum: string[];
                        };
                        failure_handling: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        coordination_plan: {
            type: string;
            properties: {
                plan_id: {
                    $ref: string;
                };
                plan_name: {
                    type: string;
                    description: string;
                };
                steps: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                execution_mode: {
                    $ref: string;
                };
                global_timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                rollback_strategy: {
                    type: string;
                    enum: string[];
                    default: string;
                    description: string;
                };
            };
            required: string[];
        };
        performance_requirements: {
            type: string;
            properties: {
                max_execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                max_memory_mb: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                min_success_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                max_concurrent_steps: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
            };
        };
        orchestration_request: {
            type: string;
            properties: {
                workflow_id: {
                    $ref: string;
                };
                workflow_name: {
                    type: string;
                    description: string;
                };
                coordination_plan: {
                    $ref: string;
                };
                global_context: {
                    type: string;
                    description: string;
                };
                performance_requirements: {
                    $ref: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    default: string;
                };
                created_by: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        orchestration_response: {
            type: string;
            properties: {
                workflow_id: {
                    $ref: string;
                };
                execution_id: {
                    $ref: string;
                };
                status: {
                    $ref: string;
                };
                progress: {
                    type: string;
                    properties: {
                        completed_steps: {
                            type: string;
                            minimum: number;
                        };
                        total_steps: {
                            type: string;
                            minimum: number;
                        };
                        current_step: {
                            $ref: string;
                        };
                        completion_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
                results: {
                    type: string;
                    description: string;
                };
                execution_metrics: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        total_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        failed_step: {
                            $ref: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        orchestration_request: {
            $ref: string;
        };
        orchestration_response: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            orchestration_operation: {
                                type: string;
                            };
                            workflow_id: {
                                $ref: string;
                            };
                            step_id: {
                                $ref: string;
                            };
                            execution_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        orchestration_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        workflow_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        workflow_execution_api: {
                            type: string;
                            format: string;
                        };
                        resource_utilization_api: {
                            type: string;
                            format: string;
                        };
                        orchestration_efficiency_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                orchestration_metrics: {
                    type: string;
                    properties: {
                        track_workflow_execution: {
                            type: string;
                        };
                        track_resource_utilization: {
                            type: string;
                        };
                        track_orchestration_efficiency: {
                            type: string;
                        };
                        track_dependency_resolution: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        workflow_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        orchestration_efficiency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        resource_utilization_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        step_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dependency_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        active_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_step_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_workflow_execution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_orchestration_efficiency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_resource_utilization_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_step_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_rollback_frequency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            orchestration_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_workflow_change: {
                            type: string;
                        };
                        version_on_plan_change: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                orchestration_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_workflow_data: {
                            type: string;
                        };
                        index_execution_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_workflows: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        orchestration_details: {
            type: string;
            properties: {
                orchestration_pattern: {
                    type: string;
                    enum: string[];
                };
                resource_allocation: {
                    type: string;
                    enum: string[];
                };
                failure_handling: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        orchestration_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        sync_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        consistency_level: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        conflict_resolution: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        state_snapshot: {
            type: string;
            properties: {
                snapshot_id: {
                    $ref: string;
                };
                module: {
                    $ref: string;
                };
                version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                state_data: {
                    type: string;
                    description: string;
                };
                checksum: {
                    type: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    properties: {
                        size_bytes: {
                            type: string;
                        };
                        compression: {
                            type: string;
                        };
                        encoding: {
                            type: string;
                        };
                    };
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_delta: {
            type: string;
            properties: {
                delta_id: {
                    $ref: string;
                };
                base_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                target_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                operations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            operation_type: {
                                type: string;
                                enum: string[];
                            };
                            path: {
                                type: string;
                                description: string;
                            };
                            old_value: {
                                description: string;
                            };
                            new_value: {
                                description: string;
                            };
                            timestamp: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                checksum: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_request: {
            type: string;
            properties: {
                sync_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                sync_strategy: {
                    $ref: string;
                };
                consistency_level: {
                    $ref: string;
                };
                sync_scope: {
                    type: string;
                    properties: {
                        include_paths: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        exclude_paths: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        filter_conditions: {
                            type: string;
                            description: string;
                        };
                    };
                };
                sync_options: {
                    type: string;
                    properties: {
                        use_delta: {
                            type: string;
                            default: boolean;
                            description: string;
                        };
                        compression_enabled: {
                            type: string;
                            default: boolean;
                        };
                        batch_size: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        retry_count: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                state_snapshot: {
                    $ref: string;
                };
                state_delta: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_response: {
            type: string;
            properties: {
                sync_id: {
                    $ref: string;
                };
                response_id: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                sync_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                applied_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                conflicts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            path: {
                                type: string;
                            };
                            conflict_type: {
                                type: string;
                                enum: string[];
                            };
                            local_value: {
                                description: string;
                            };
                            remote_value: {
                                description: string;
                            };
                            resolution: {
                                $ref: string;
                            };
                            resolved_value: {
                                description: string;
                            };
                        };
                        required: string[];
                    };
                };
                sync_metrics: {
                    type: string;
                    properties: {
                        records_processed: {
                            type: string;
                        };
                        records_applied: {
                            type: string;
                        };
                        records_skipped: {
                            type: string;
                        };
                        processing_time_ms: {
                            type: string;
                        };
                        data_size_bytes: {
                            type: string;
                        };
                    };
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                next_sync_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_subscription: {
            type: string;
            properties: {
                subscription_id: {
                    $ref: string;
                };
                subscriber_module: {
                    $ref: string;
                };
                source_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                sync_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            path_pattern: {
                                type: string;
                                description: string;
                            };
                            sync_strategy: {
                                $ref: string;
                            };
                            sync_frequency_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                };
                active: {
                    type: string;
                    default: boolean;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        state_sync_request: {
            $ref: string;
        };
        state_sync_response: {
            $ref: string;
        };
        state_sync_subscription: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            state_sync_operation: {
                                type: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_module: {
                                $ref: string;
                            };
                            sync_details: {
                                type: string;
                            };
                            conflict_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        state_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        state_change_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        sync_performance_api: {
                            type: string;
                            format: string;
                        };
                        consistency_analysis_api: {
                            type: string;
                            format: string;
                        };
                        conflict_resolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                state_sync_metrics: {
                    type: string;
                    properties: {
                        track_sync_performance: {
                            type: string;
                        };
                        track_consistency_analysis: {
                            type: string;
                        };
                        track_conflict_resolution: {
                            type: string;
                        };
                        track_state_integrity: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        sync_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        conflict_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        sync_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        state_integrity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_syncs_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_syncs_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_sync_size_bytes: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_sync_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_conflict_resolution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_sync_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_state_integrity_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            state_sync_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_pattern_change: {
                            type: string;
                        };
                        version_on_subscription_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                state_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_state_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_syncs: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        state_sync_details: {
            type: string;
            properties: {
                sync_strategy: {
                    type: string;
                    enum: string[];
                };
                conflict_resolution: {
                    type: string;
                    enum: string[];
                };
                consistency_level: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        state_sync_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        isolation_level: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        transaction_state: {
            type: string;
            enum: string[];
            description: string;
        };
        rollback_strategy: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        participant_info: {
            type: string;
            properties: {
                module: {
                    $ref: string;
                };
                participant_id: {
                    $ref: string;
                };
                resource_locks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            resource_id: {
                                type: string;
                            };
                            lock_type: {
                                type: string;
                                enum: string[];
                            };
                            acquired_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                state: {
                    $ref: string;
                };
                last_heartbeat: {
                    $ref: string;
                };
                compensation_data: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
        };
        transaction_context: {
            type: string;
            properties: {
                transaction_id: {
                    $ref: string;
                };
                parent_transaction_id: {
                    $ref: string;
                    description: string;
                };
                isolation_level: {
                    $ref: string;
                };
                participating_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                participants: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                transaction_state: {
                    $ref: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                rollback_strategy: {
                    $ref: string;
                };
                coordinator_module: {
                    $ref: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        transaction_operation: {
            type: string;
            properties: {
                operation_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                operation_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                operation_data: {
                    type: string;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        transaction_result: {
            type: string;
            properties: {
                operation_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                result_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                result_data: {
                    type: string;
                    description: string;
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                resource_usage: {
                    type: string;
                    properties: {
                        memory_mb: {
                            type: string;
                        };
                        cpu_time_ms: {
                            type: string;
                        };
                        io_operations: {
                            type: string;
                        };
                    };
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        compensation_action: {
            type: string;
            properties: {
                action_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                compensation_operation: {
                    type: string;
                    description: string;
                };
                compensation_data: {
                    type: string;
                    description: string;
                };
                execution_order: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        transaction_context: {
            $ref: string;
        };
        transaction_operation: {
            $ref: string;
        };
        transaction_result: {
            $ref: string;
        };
        compensation_action: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            transaction_operation: {
                                type: string;
                            };
                            transaction_id: {
                                $ref: string;
                            };
                            participant_modules: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            isolation_level: {
                                $ref: string;
                            };
                            transaction_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        transaction_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        transaction_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        transaction_performance_api: {
                            type: string;
                            format: string;
                        };
                        deadlock_detection_api: {
                            type: string;
                            format: string;
                        };
                        acid_compliance_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                transaction_metrics: {
                    type: string;
                    properties: {
                        track_transaction_performance: {
                            type: string;
                        };
                        track_deadlock_detection: {
                            type: string;
                        };
                        track_acid_compliance: {
                            type: string;
                        };
                        track_lock_contention: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        transaction_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        transaction_throughput_per_second: {
                            type: string;
                            minimum: number;
                        };
                        deadlock_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        acid_compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        lock_contention_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_transactions_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_transactions_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_lock_wait_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_transaction_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_transaction_throughput_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                max_deadlock_frequency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_acid_compliance_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_lock_contention_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            transaction_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_isolation_change: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                transaction_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_transaction_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_transactions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        transaction_details: {
            type: string;
            properties: {
                isolation_level: {
                    type: string;
                    enum: string[];
                };
                timeout_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                rollback_strategy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        compatibility_level: {
            type: string;
            enum: string[];
            description: string;
        };
        module_version_info: {
            type: string;
            properties: {
                module_name: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                current_version: {
                    $ref: string;
                };
                supported_versions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                deprecated_versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version: {
                                $ref: string;
                            };
                            deprecation_date: {
                                $ref: string;
                            };
                            removal_date: {
                                $ref: string;
                            };
                            migration_guide: {
                                type: string;
                                description: string;
                            };
                            protocol_version_operation: {
                                type: string;
                                enum: string[];
                            };
                            protocol_version_details: {
                                type: string;
                                properties: {
                                    compatibility_mode: {
                                        type: string;
                                        enum: string[];
                                    };
                                    migration_strategy: {
                                        type: string;
                                    };
                                    rollback_support: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                breaking_changes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version: {
                                $ref: string;
                            };
                            change_description: {
                                type: string;
                            };
                            impact_level: {
                                type: string;
                                enum: string[];
                            };
                            migration_required: {
                                type: string;
                            };
                            affected_apis: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        compatibility_matrix: {
            type: string;
            properties: {
                matrix_version: {
                    $ref: string;
                };
                compatibility_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            source_module: {
                                type: string;
                            };
                            source_version: {
                                $ref: string;
                            };
                            target_module: {
                                type: string;
                            };
                            target_version_range: {
                                type: string;
                                description: string;
                            };
                            compatibility_level: {
                                $ref: string;
                            };
                            notes: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                global_constraints: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            constraint_type: {
                                type: string;
                                enum: string[];
                            };
                            modules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            version_constraint: {
                                type: string;
                            };
                            reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        upgrade_path: {
            type: string;
            properties: {
                path_id: {
                    $ref: string;
                };
                from_version: {
                    $ref: string;
                };
                to_version: {
                    $ref: string;
                };
                upgrade_steps: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            step_number: {
                                type: string;
                                minimum: number;
                            };
                            step_description: {
                                type: string;
                            };
                            step_type: {
                                type: string;
                                enum: string[];
                            };
                            affected_modules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            automation_script: {
                                type: string;
                                description: string;
                            };
                            manual_steps: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            validation_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            rollback_procedure: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                estimated_duration_minutes: {
                    type: string;
                    minimum: number;
                };
                risk_level: {
                    type: string;
                    enum: string[];
                };
                prerequisites: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                post_upgrade_validation: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        deprecation_schedule: {
            type: string;
            properties: {
                schedule_version: {
                    $ref: string;
                };
                deprecation_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            policy_name: {
                                type: string;
                            };
                            deprecation_period_months: {
                                type: string;
                                minimum: number;
                            };
                            notification_schedule: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        notification_type: {
                                            type: string;
                                            enum: string[];
                                        };
                                        months_before_removal: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            affected_features: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                scheduled_deprecations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            item_type: {
                                type: string;
                                enum: string[];
                            };
                            item_identifier: {
                                type: string;
                            };
                            deprecation_date: {
                                $ref: string;
                            };
                            removal_date: {
                                $ref: string;
                            };
                            replacement: {
                                type: string;
                            };
                            migration_guide: {
                                type: string;
                            };
                            impact_assessment: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        protocol_version_info: {
            type: string;
            properties: {
                protocol_suite_version: {
                    $ref: string;
                };
                protocol_suite_name: {
                    type: string;
                    const: string;
                };
                release_date: {
                    $ref: string;
                };
                module_versions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                };
                compatibility_matrix: {
                    $ref: string;
                };
                upgrade_paths: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                deprecation_schedule: {
                    $ref: string;
                };
                release_notes: {
                    type: string;
                    properties: {
                        new_features: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        improvements: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        bug_fixes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        breaking_changes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        security_updates: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                metadata: {
                    type: string;
                    properties: {
                        maintainers: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        repository_url: {
                            type: string;
                            format: string;
                        };
                        documentation_url: {
                            type: string;
                            format: string;
                        };
                        support_contact: {
                            type: string;
                        };
                        license: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        protocol_version_info: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            version_operation: {
                                type: string;
                            };
                            source_version: {
                                $ref: string;
                            };
                            target_version: {
                                $ref: string;
                            };
                            module_name: {
                                type: string;
                            };
                            compatibility_result: {
                                $ref: string;
                            };
                            version_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        version_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        version_change_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        version_management_api: {
                            type: string;
                            format: string;
                        };
                        compatibility_analysis_api: {
                            type: string;
                            format: string;
                        };
                        protocol_evolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                version_metrics: {
                    type: string;
                    properties: {
                        track_version_management: {
                            type: string;
                        };
                        track_compatibility_analysis: {
                            type: string;
                        };
                        track_protocol_evolution: {
                            type: string;
                        };
                        track_migration_progress: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        version_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        compatibility_check_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        migration_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        protocol_evolution_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        version_adoption_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_versions_count: {
                            type: string;
                            minimum: number;
                        };
                        deprecated_versions_count: {
                            type: string;
                            minimum: number;
                        };
                        compatibility_conflicts_count: {
                            type: string;
                            minimum: number;
                        };
                        average_migration_time_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_version_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_compatibility_check_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_migration_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_protocol_evolution_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_compatibility_conflicts_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            protocol_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_protocol_change: {
                            type: string;
                        };
                        version_on_compatibility_change: {
                            type: string;
                        };
                        version_on_deprecation_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                version_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_version_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_versions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        protocol_version_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        protocol_version_details: {
            type: string;
            properties: {
                compatibility_mode: {
                    type: string;
                    enum: string[];
                };
                migration_strategy: {
                    type: string;
                };
                rollback_support: {
                    type: string;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
})[];
export declare const AllSchemas: ({
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        lifecycle_stage: {
            type: string;
            enum: string[];
            description: string;
        };
        shared_state: {
            type: string;
            properties: {
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                resources: {
                    type: string;
                    properties: {
                        allocated: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                    };
                                    amount: {
                                        type: string;
                                    };
                                    unit: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        requirements: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    minimum: {
                                        type: string;
                                    };
                                    optimal: {
                                        type: string;
                                    };
                                    maximum: {
                                        type: string;
                                    };
                                    unit: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    required: string[];
                };
                dependencies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            type: {
                                type: string;
                                enum: string[];
                            };
                            name: {
                                type: string;
                            };
                            version: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                goals: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            priority: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            success_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        metric: {
                                            type: string;
                                        };
                                        operator: {
                                            type: string;
                                            enum: string[];
                                        };
                                        value: {
                                            type: string[];
                                        };
                                        unit: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        access_control: {
            type: string;
            properties: {
                owner: {
                    type: string;
                    properties: {
                        user_id: {
                            type: string;
                        };
                        role: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                permissions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            principal: {
                                type: string;
                            };
                            principal_type: {
                                type: string;
                                enum: string[];
                            };
                            resource: {
                                type: string;
                            };
                            actions: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            conditions: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
                policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            type: {
                                type: string;
                                enum: string[];
                            };
                            rules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            enforcement: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        configuration: {
            type: string;
            properties: {
                timeout_settings: {
                    type: string;
                    properties: {
                        default_timeout: {
                            type: string;
                            minimum: number;
                        };
                        max_timeout: {
                            type: string;
                            minimum: number;
                        };
                        cleanup_timeout: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                notification_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        events: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                    required: string[];
                };
                persistence: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        storage_backend: {
                            type: string;
                            enum: string[];
                        };
                        retention_policy: {
                            type: string;
                            properties: {
                                duration: {
                                    type: string;
                                };
                                max_versions: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            context_operation: {
                                type: string;
                            };
                            context_id: {
                                $ref: string;
                            };
                            context_name: {
                                type: string;
                            };
                            lifecycle_stage: {
                                type: string;
                            };
                            shared_state_keys: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            access_level: {
                                type: string;
                            };
                            context_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        context_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        context_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        context_state_api: {
                            type: string;
                            format: string;
                        };
                        cache_metrics_api: {
                            type: string;
                            format: string;
                        };
                        sync_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                context_metrics: {
                    type: string;
                    properties: {
                        track_state_changes: {
                            type: string;
                        };
                        track_cache_performance: {
                            type: string;
                        };
                        track_sync_operations: {
                            type: string;
                        };
                        track_access_patterns: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        context_access_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        context_update_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        cache_hit_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        context_sync_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        context_state_consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_contexts_count: {
                            type: string;
                            minimum: number;
                        };
                        context_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        context_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_context_size_bytes: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_context_access_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_context_update_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_cache_hit_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_context_sync_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_context_state_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            context_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_state_change: {
                            type: string;
                        };
                        version_on_cache_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                context_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_context_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_contexts: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        caching_policy: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                cache_strategy: {
                    type: string;
                    enum: string[];
                };
                cache_levels: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            level: {
                                type: string;
                            };
                            backend: {
                                type: string;
                                enum: string[];
                            };
                            ttl_seconds: {
                                type: string;
                                minimum: number;
                            };
                            max_size_mb: {
                                type: string;
                                minimum: number;
                            };
                            eviction_policy: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                cache_warming: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategies: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        sync_configuration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                sync_strategy: {
                    type: string;
                    enum: string[];
                };
                sync_targets: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            target_id: {
                                type: string;
                            };
                            target_type: {
                                type: string;
                                enum: string[];
                            };
                            sync_frequency: {
                                type: string;
                            };
                            conflict_resolution: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                replication: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        replication_factor: {
                            type: string;
                            minimum: number;
                        };
                        consistency_level: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        error_handling: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                error_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            error_type: {
                                type: string;
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            retry_config: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                        minimum: number;
                                    };
                                    backoff_strategy: {
                                        type: string;
                                        enum: string[];
                                    };
                                    base_delay_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                circuit_breaker: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        failure_threshold: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        reset_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                recovery_strategy: {
                    type: string;
                    properties: {
                        auto_recovery: {
                            type: string;
                        };
                        backup_sources: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        rollback_enabled: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        integration_endpoints: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                webhooks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            webhook_id: {
                                $ref: string;
                            };
                            url: {
                                type: string;
                                format: string;
                            };
                            events: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            authentication: {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                        enum: string[];
                                    };
                                    credentials: {
                                        type: string;
                                    };
                                };
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                    };
                                    backoff_ms: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                api_endpoints: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            endpoint_id: {
                                type: string;
                            };
                            path: {
                                type: string;
                            };
                            method: {
                                type: string;
                                enum: string[];
                            };
                            authentication_required: {
                                type: string;
                            };
                            rate_limit: {
                                type: string;
                                properties: {
                                    requests_per_minute: {
                                        type: string;
                                    };
                                    burst_limit: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        context_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        context_details: {
            type: string;
            properties: {
                context_scope: {
                    type: string;
                    enum: string[];
                };
                persistence_level: {
                    type: string;
                    enum: string[];
                };
                sharing_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
    examples: {
        protocol_version: string;
        timestamp: string;
        context_id: string;
        name: string;
        description: string;
        status: string;
        lifecycle_stage: string;
        shared_state: {
            variables: {
                environment: string;
                region: string;
                feature_flags: {
                    new_ui: boolean;
                    beta_features: boolean;
                };
            };
            resources: {
                allocated: {
                    memory: {
                        type: string;
                        amount: number;
                        unit: string;
                        status: string;
                    };
                    cpu: {
                        type: string;
                        amount: number;
                        unit: string;
                        status: string;
                    };
                };
                requirements: {
                    storage: {
                        minimum: number;
                        optimal: number;
                        maximum: number;
                        unit: string;
                    };
                };
            };
            dependencies: {
                id: string;
                type: string;
                name: string;
                version: string;
                status: string;
            }[];
            goals: {
                id: string;
                name: string;
                priority: string;
                status: string;
                success_criteria: {
                    metric: string;
                    operator: string;
                    value: number;
                    unit: string;
                }[];
            }[];
        };
        access_control: {
            owner: {
                user_id: string;
                role: string;
            };
            permissions: {
                principal: string;
                principal_type: string;
                resource: string;
                actions: string[];
            }[];
        };
        configuration: {
            timeout_settings: {
                default_timeout: number;
                max_timeout: number;
            };
            notification_settings: {
                enabled: boolean;
                channels: string[];
                events: string[];
            };
            persistence: {
                enabled: boolean;
                storage_backend: string;
                retention_policy: {
                    duration: string;
                    max_versions: number;
                };
            };
        };
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        failure_resolver: {
            type: string;
            description: string;
            properties: {
                enabled: {
                    type: string;
                    description: string;
                };
                strategies: {
                    type: string;
                    description: string;
                    items: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                };
                retry_config: {
                    type: string;
                    description: string;
                    properties: {
                        max_attempts: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        delay_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        backoff_factor: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_delay_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                rollback_config: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        checkpoint_frequency: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_rollback_depth: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                manual_intervention_config: {
                    type: string;
                    description: string;
                    properties: {
                        timeout_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        escalation_levels: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        approval_required: {
                            type: string;
                            description: string;
                        };
                    };
                };
                notification_channels: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                performance_thresholds: {
                    type: string;
                    description: string;
                    properties: {
                        max_execution_time_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_memory_usage_mb: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_cpu_usage_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                };
                diagnostic_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        supported_diagnostic_providers: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        diagnostic_endpoints: {
                            type: string;
                            properties: {
                                failure_analysis_api: {
                                    type: string;
                                    format: string;
                                };
                                pattern_detection_api: {
                                    type: string;
                                    format: string;
                                };
                                recommendation_api: {
                                    type: string;
                                    format: string;
                                };
                            };
                        };
                        request_format: {
                            type: string;
                            properties: {
                                input_schema: {
                                    type: string;
                                };
                                output_schema: {
                                    type: string;
                                };
                                timeout_ms: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                    };
                    required: string[];
                };
                vendor_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        sync_frequency_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        data_retention_days: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        sync_detailed_diagnostics: {
                            type: string;
                            description: string;
                        };
                        receive_suggestions: {
                            type: string;
                            description: string;
                        };
                        auto_apply_suggestions: {
                            type: string;
                            description: string;
                        };
                    };
                };
                proactive_prevention: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        prediction_confidence_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        auto_prevention_enabled: {
                            type: string;
                            description: string;
                        };
                        prevention_strategies: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        monitoring_interval_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                learning_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        supported_learning_providers: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        learning_endpoints: {
                            type: string;
                            properties: {
                                feedback_collection_api: {
                                    type: string;
                                    format: string;
                                };
                                pattern_learning_api: {
                                    type: string;
                                    format: string;
                                };
                                strategy_optimization_api: {
                                    type: string;
                                    format: string;
                                };
                            };
                        };
                        data_sharing: {
                            type: string;
                            properties: {
                                anonymization_enabled: {
                                    type: string;
                                };
                                data_retention_days: {
                                    type: string;
                                    minimum: number;
                                };
                                sharing_scope: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                    required: string[];
                };
                external_integrations: {
                    type: string;
                    description: string;
                    properties: {
                        diagnostic_systems: {
                            type: string;
                            description: string;
                        };
                        prediction_services: {
                            type: string;
                            description: string;
                        };
                        recovery_automation: {
                            type: string;
                            description: string;
                        };
                        optimization_engines: {
                            type: string;
                            description: string;
                        };
                        monitoring_platforms: {
                            type: string;
                            description: string;
                        };
                        recommendation_services: {
                            type: string;
                            description: string;
                        };
                    };
                };
            };
            required: string[];
        };
        recovery_suggestion: {
            type: string;
            description: string;
            minLength: number;
            maxLength: number;
        };
        development_issue: {
            type: string;
            description: string;
            properties: {
                id: {
                    type: string;
                    description: string;
                    pattern: string;
                    minLength: number;
                    maxLength: number;
                };
                type: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                severity: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                title: {
                    type: string;
                    description: string;
                    minLength: number;
                    maxLength: number;
                };
                file_path: {
                    type: string;
                    description: string;
                    pattern: string;
                };
                line_number: {
                    type: string;
                    description: string;
                    minimum: number;
                };
                description: {
                    type: string;
                    description: string;
                    maxLength: number;
                };
                suggested_fix: {
                    type: string;
                    description: string;
                    maxLength: number;
                };
                detected_at: {
                    $ref: string;
                    description: string;
                };
                status: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                dependencies: {
                    type: string;
                    description: string;
                    items: {
                        type: string;
                    };
                };
                confidence_score: {
                    type: string;
                    description: string;
                    minimum: number;
                    maximum: number;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            $ref: string;
            description: string;
        };
        timeline: {
            type: string;
            properties: {
                start_date: {
                    $ref: string;
                };
                end_date: {
                    $ref: string;
                };
                estimated_duration: {
                    type: string;
                    properties: {
                        value: {
                            type: string;
                            minimum: number;
                        };
                        unit: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                actual_duration: {
                    type: string;
                    properties: {
                        value: {
                            type: string;
                            minimum: number;
                        };
                        unit: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
        };
        tasks: {
            type: string;
            items: {
                type: string;
                properties: {
                    task_id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    status: {
                        type: string;
                        enum: string[];
                    };
                    priority: {
                        $ref: string;
                    };
                    assignee: {
                        type: string;
                        properties: {
                            user_id: {
                                type: string;
                            };
                            role: {
                                type: string;
                            };
                            team: {
                                type: string;
                            };
                        };
                    };
                    estimated_effort: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    actual_effort: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    resources_required: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                resource_type: {
                                    type: string;
                                };
                                amount: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                };
                                availability: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    acceptance_criteria: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                description: {
                                    type: string;
                                };
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                verification_method: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    sub_tasks: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    metadata: {
                        type: string;
                        properties: {
                            tags: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            category: {
                                type: string;
                            };
                            source: {
                                type: string;
                            };
                            complexity_score: {
                                type: string;
                                minimum: number;
                            };
                            risk_level: {
                                type: string;
                            };
                            automation_level: {
                                type: string;
                            };
                            retry_count: {
                                type: string;
                                minimum: number;
                            };
                            max_retry_count: {
                                type: string;
                                minimum: number;
                            };
                            intervention_required: {
                                type: string;
                            };
                            intervention_reason: {
                                type: string;
                            };
                            intervention_requested_at: {
                                $ref: string;
                            };
                            rollback_reason: {
                                type: string;
                            };
                            rollback_target: {
                                $ref: string;
                            };
                            skip_reason: {
                                type: string;
                            };
                            skip_dependents: {
                                type: string;
                            };
                            recovery_suggestions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                                maxItems: number;
                                uniqueItems: boolean;
                            };
                            development_issues: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                                maxItems: number;
                                uniqueItems: boolean;
                            };
                        };
                    };
                    started_at: {
                        $ref: string;
                    };
                    completed_at: {
                        $ref: string;
                    };
                    progress_percentage: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    actual_duration_minutes: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    error_message: {
                        type: string;
                        description: string;
                    };
                    result_data: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
        };
        dependencies: {
            type: string;
            items: {
                type: string;
                properties: {
                    id: {
                        $ref: string;
                    };
                    source_task_id: {
                        $ref: string;
                    };
                    target_task_id: {
                        $ref: string;
                    };
                    dependency_type: {
                        type: string;
                        enum: string[];
                    };
                    lag: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    criticality: {
                        type: string;
                        enum: string[];
                    };
                    condition: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
            };
        };
        milestones: {
            type: string;
            items: {
                type: string;
                properties: {
                    id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    target_date: {
                        $ref: string;
                    };
                    status: {
                        type: string;
                        enum: string[];
                    };
                    success_criteria: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                metric: {
                                    type: string;
                                };
                                target_value: {
                                    type: string[];
                                };
                                actual_value: {
                                    type: string[];
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
        };
        optimization: {
            type: string;
            properties: {
                strategy: {
                    type: string;
                    enum: string[];
                };
                constraints: {
                    type: string;
                    properties: {
                        max_duration: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        max_cost: {
                            type: string;
                            minimum: number;
                        };
                        min_quality: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        available_resources: {
                            type: string;
                            additionalProperties: boolean;
                        };
                    };
                };
                parameters: {
                    type: string;
                    additionalProperties: boolean;
                };
            };
            required: string[];
        };
        risk_assessment: {
            type: string;
            properties: {
                overall_risk_level: {
                    type: string;
                    enum: string[];
                };
                risks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            level: {
                                type: string;
                                enum: string[];
                            };
                            category: {
                                type: string;
                                enum: string[];
                            };
                            probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            impact: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            mitigation_plan: {
                                type: string;
                            };
                            contingency_plan: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        failure_resolver: {
            $ref: string;
            description: string;
        };
        configuration: {
            type: string;
            properties: {
                auto_scheduling_enabled: {
                    type: string;
                };
                dependency_validation_enabled: {
                    type: string;
                };
                risk_monitoring_enabled: {
                    type: string;
                };
                failure_recovery_enabled: {
                    type: string;
                };
                performance_tracking_enabled: {
                    type: string;
                };
                notification_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        channels: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        events: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        task_completion: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                optimization_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategy: {
                            type: string;
                            enum: string[];
                        };
                        auto_reoptimize: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                timeout_settings: {
                    type: string;
                    properties: {
                        default_task_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        plan_execution_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        dependency_resolution_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                parallel_execution_limit: {
                    type: string;
                    minimum: number;
                };
            };
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            type: string;
            description: string;
        };
        updated_by: {
            type: string;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            plan_operation: {
                                type: string;
                            };
                            plan_id: {
                                $ref: string;
                            };
                            plan_name: {
                                type: string;
                            };
                            plan_status: {
                                type: string;
                            };
                            task_ids: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            execution_stage: {
                                type: string;
                            };
                            plan_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        plan_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        plan_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        plan_execution_api: {
                            type: string;
                            format: string;
                        };
                        task_metrics_api: {
                            type: string;
                            format: string;
                        };
                        resource_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                plan_metrics: {
                    type: string;
                    properties: {
                        track_execution_progress: {
                            type: string;
                        };
                        track_task_performance: {
                            type: string;
                        };
                        track_resource_usage: {
                            type: string;
                        };
                        track_failure_recovery: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        plan_execution_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        task_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        plan_optimization_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dependency_resolution_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        plan_execution_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_plans_count: {
                            type: string;
                            minimum: number;
                        };
                        plan_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        plan_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_plan_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    required: string[];
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_plan_execution_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_task_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_plan_optimization_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dependency_resolution_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_plan_execution_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            plan_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_task_change: {
                            type: string;
                        };
                        version_on_dependency_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                plan_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_plan_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_plans: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        caching_policy: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                cache_strategy: {
                    type: string;
                    enum: string[];
                };
                cache_levels: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            level: {
                                type: string;
                            };
                            backend: {
                                type: string;
                                enum: string[];
                            };
                            ttl_seconds: {
                                type: string;
                                minimum: number;
                            };
                            max_size_mb: {
                                type: string;
                                minimum: number;
                            };
                            eviction_policy: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                cache_warming: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategies: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        plan_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        plan_details: {
            type: string;
            properties: {
                planning_strategy: {
                    type: string;
                    enum: string[];
                };
                execution_mode: {
                    type: string;
                    enum: string[];
                };
                rollback_support: {
                    type: string;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        confirm_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        confirmation_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            $ref: string;
            description: string;
        };
        requester: {
            type: string;
            properties: {
                user_id: {
                    type: string;
                };
                role: {
                    type: string;
                };
                department: {
                    type: string;
                };
                request_reason: {
                    type: string;
                    maxLength: number;
                };
            };
            required: string[];
        };
        approval_workflow: {
            type: string;
            properties: {
                workflow_type: {
                    type: string;
                    enum: string[];
                };
                steps: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            step_id: {
                                $ref: string;
                            };
                            step_order: {
                                type: string;
                                minimum: number;
                            };
                            approver: {
                                type: string;
                                properties: {
                                    user_id: {
                                        type: string;
                                    };
                                    role: {
                                        type: string;
                                    };
                                    is_required: {
                                        type: string;
                                    };
                                    delegation_allowed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            approval_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        criterion: {
                                            type: string;
                                        };
                                        required: {
                                            type: string;
                                        };
                                        weight: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            decision: {
                                type: string;
                                properties: {
                                    outcome: {
                                        type: string;
                                        enum: string[];
                                    };
                                    comments: {
                                        type: string;
                                        maxLength: number;
                                    };
                                    conditions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    timestamp: {
                                        $ref: string;
                                    };
                                    signature: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            timeout: {
                                type: string;
                                properties: {
                                    duration: {
                                        type: string;
                                        minimum: number;
                                    };
                                    unit: {
                                        type: string;
                                        enum: string[];
                                    };
                                    action_on_timeout: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                    };
                };
                escalation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            trigger: {
                                type: string;
                                enum: string[];
                            };
                            escalate_to: {
                                type: string;
                                properties: {
                                    user_id: {
                                        type: string;
                                    };
                                    role: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            notification_delay: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        subject: {
            type: string;
            properties: {
                title: {
                    type: string;
                    maxLength: number;
                };
                description: {
                    type: string;
                    maxLength: number;
                };
                impact_assessment: {
                    type: string;
                    properties: {
                        scope: {
                            type: string;
                            enum: string[];
                        };
                        affected_systems: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        affected_users: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        business_impact: {
                            type: string;
                            enum: string[];
                        };
                        technical_impact: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                attachments: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            file_id: {
                                type: string;
                            };
                            filename: {
                                type: string;
                            };
                            mime_type: {
                                type: string;
                            };
                            size: {
                                type: string;
                                minimum: number;
                            };
                            description: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        risk_assessment: {
            type: string;
            properties: {
                overall_risk_level: {
                    type: string;
                    enum: string[];
                };
                risk_factors: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            factor: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            impact: {
                                type: string;
                                enum: string[];
                            };
                            mitigation: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_requirements: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            regulation: {
                                type: string;
                            };
                            requirement: {
                                type: string;
                            };
                            compliance_status: {
                                type: string;
                                enum: string[];
                            };
                            evidence: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        notification_settings: {
            type: string;
            properties: {
                notify_on_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                notification_channels: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                stakeholders: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            user_id: {
                                type: string;
                            };
                            role: {
                                type: string;
                            };
                            notification_preference: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            confirm_operation: {
                                type: string;
                            };
                            confirm_id: {
                                $ref: string;
                            };
                            confirmation_type: {
                                type: string;
                            };
                            confirm_status: {
                                type: string;
                            };
                            approval_step: {
                                type: string;
                            };
                            decision_reason: {
                                type: string;
                            };
                            approver_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            confirm_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        confirm_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        confirm_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        approval_metrics_api: {
                            type: string;
                            format: string;
                        };
                        workflow_metrics_api: {
                            type: string;
                            format: string;
                        };
                        compliance_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                approval_metrics: {
                    type: string;
                    properties: {
                        track_approval_times: {
                            type: string;
                        };
                        track_workflow_performance: {
                            type: string;
                        };
                        track_decision_patterns: {
                            type: string;
                        };
                        track_compliance_metrics: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        confirm_processing_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        approval_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        confirm_workflow_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        decision_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        confirm_compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_confirmations_count: {
                            type: string;
                            minimum: number;
                        };
                        confirm_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        confirm_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_approval_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_confirm_processing_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_approval_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_confirm_workflow_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_decision_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_confirm_compliance_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            confirm_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_workflow_change: {
                            type: string;
                        };
                        version_on_status_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                confirm_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_confirm_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_confirmations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        ai_integration_interface: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        decision_support_api: {
                            type: string;
                            format: string;
                        };
                        recommendation_api: {
                            type: string;
                            format: string;
                        };
                        risk_assessment_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                request_format: {
                    type: string;
                    properties: {
                        input_schema: {
                            type: string;
                        };
                        output_schema: {
                            type: string;
                        };
                        authentication: {
                            type: string;
                            properties: {
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                config: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                response_handling: {
                    type: string;
                    properties: {
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        retry_policy: {
                            type: string;
                            properties: {
                                max_attempts: {
                                    type: string;
                                    minimum: number;
                                };
                                backoff_strategy: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                        fallback_behavior: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        decision_support_interface: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                external_decision_engines: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            engine_id: {
                                type: string;
                            };
                            engine_name: {
                                type: string;
                            };
                            engine_type: {
                                type: string;
                                enum: string[];
                            };
                            endpoint: {
                                type: string;
                                format: string;
                            };
                            priority: {
                                type: string;
                                minimum: number;
                            };
                            enabled: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                decision_criteria: {
                    type: string;
                    properties: {
                        supported_criteria: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        criteria_weights: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                };
                fallback_strategy: {
                    type: string;
                    properties: {
                        when_engines_unavailable: {
                            type: string;
                            enum: string[];
                        };
                        when_engines_disagree: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        confirm_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        confirm_details: {
            type: string;
            properties: {
                approval_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                timeout_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                escalation_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        trace_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        task_id: {
            $ref: string;
            description: string;
        };
        trace_type: {
            type: string;
            enum: string[];
            description: string;
        };
        severity: {
            type: string;
            enum: string[];
            description: string;
        };
        event: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
                name: {
                    type: string;
                    maxLength: number;
                };
                description: {
                    type: string;
                    maxLength: number;
                };
                category: {
                    type: string;
                    enum: string[];
                };
                source: {
                    type: string;
                    properties: {
                        component: {
                            type: string;
                        };
                        module: {
                            type: string;
                        };
                        function: {
                            type: string;
                        };
                        line_number: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                data: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
            };
            required: string[];
        };
        context_snapshot: {
            type: string;
            properties: {
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                environment: {
                    type: string;
                    properties: {
                        os: {
                            type: string;
                        };
                        platform: {
                            type: string;
                        };
                        runtime_version: {
                            type: string;
                        };
                        environment_variables: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                    };
                };
                call_stack: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            function: {
                                type: string;
                            };
                            file: {
                                type: string;
                            };
                            line: {
                                type: string;
                                minimum: number;
                            };
                            arguments: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        error_information: {
            type: string;
            properties: {
                error_code: {
                    type: string;
                };
                error_message: {
                    type: string;
                    maxLength: number;
                };
                error_type: {
                    type: string;
                    enum: string[];
                };
                stack_trace: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            file: {
                                type: string;
                            };
                            function: {
                                type: string;
                            };
                            line: {
                                type: string;
                                minimum: number;
                            };
                            column: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                };
                recovery_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                            };
                            parameters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        decision_log: {
            type: string;
            properties: {
                decision_point: {
                    type: string;
                };
                options_considered: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            option: {
                                type: string;
                            };
                            score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            rationale: {
                                type: string;
                            };
                            risk_factors: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                selected_option: {
                    type: string;
                };
                decision_criteria: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            criterion: {
                                type: string;
                            };
                            weight: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            evaluation: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                confidence_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            required: string[];
        };
        correlations: {
            type: string;
            items: {
                type: string;
                properties: {
                    correlation_id: {
                        $ref: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    related_trace_id: {
                        $ref: string;
                    };
                    strength: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    description: {
                        type: string;
                    };
                };
                required: string[];
            };
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            trace_operation: {
                                type: string;
                            };
                            trace_id: {
                                $ref: string;
                            };
                            trace_type: {
                                type: string;
                            };
                            severity: {
                                type: string;
                            };
                            span_ids: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            trace_status: {
                                type: string;
                            };
                            trace_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        trace_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        trace_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        trace_processing_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        span_collection_rate_per_second: {
                            type: string;
                            minimum: number;
                        };
                        trace_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        distributed_tracing_coverage_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        trace_monitoring_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_traces_count: {
                            type: string;
                            minimum: number;
                        };
                        trace_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        trace_storage_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_trace_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_trace_processing_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_span_collection_rate_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                min_trace_analysis_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_distributed_tracing_coverage_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_trace_monitoring_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        tracing_api: {
                            type: string;
                            format: string;
                        };
                        alerting_api: {
                            type: string;
                            format: string;
                        };
                        dashboard_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                sampling_config: {
                    type: string;
                    properties: {
                        sampling_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        adaptive_sampling: {
                            type: string;
                        };
                        max_traces_per_second: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            trace_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_update: {
                            type: string;
                        };
                        version_on_analysis: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_traces: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        trace_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        trace_details: {
            type: string;
            properties: {
                trace_level: {
                    type: string;
                    enum: string[];
                };
                sampling_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        agent_type: {
            type: string;
            enum: string[];
            description: string;
        };
        agent_status: {
            type: string;
            enum: string[];
            description: string;
        };
        expertise_level: {
            type: string;
            enum: string[];
            description: string;
        };
        communication_style: {
            type: string;
            enum: string[];
            description: string;
        };
        conflict_resolution_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        agent: {
            type: string;
            description: string;
            properties: {
                agent_id: {
                    $ref: string;
                };
                name: {
                    type: string;
                    minLength: number;
                };
                type: {
                    $ref: string;
                };
                domain: {
                    type: string;
                    minLength: number;
                };
                status: {
                    $ref: string;
                };
                capabilities: {
                    $ref: string;
                };
                configuration: {
                    $ref: string;
                };
                performance_metrics: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        agent_capabilities: {
            type: string;
            description: string;
            properties: {
                core: {
                    type: string;
                    properties: {
                        critical_thinking: {
                            type: string;
                        };
                        scenario_validation: {
                            type: string;
                        };
                        ddsc_dialog: {
                            type: string;
                        };
                        mplp_protocols: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                specialist: {
                    type: string;
                    properties: {
                        domain: {
                            type: string;
                        };
                        expertise_level: {
                            $ref: string;
                        };
                        knowledge_areas: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        tools: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                collaboration: {
                    type: string;
                    properties: {
                        communication_style: {
                            $ref: string;
                        };
                        conflict_resolution: {
                            $ref: string;
                        };
                        decision_weight: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        trust_level: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
                learning: {
                    type: string;
                    properties: {
                        experience_accumulation: {
                            type: string;
                        };
                        pattern_recognition: {
                            type: string;
                        };
                        adaptation_mechanism: {
                            type: string;
                        };
                        performance_optimization: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        agent_configuration: {
            type: string;
            description: string;
            properties: {
                basic: {
                    type: string;
                    properties: {
                        max_concurrent_tasks: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        retry_policy: {
                            $ref: string;
                        };
                        priority_level: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                communication: {
                    type: string;
                    properties: {
                        protocols: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        message_format: {
                            type: string;
                        };
                        encryption_enabled: {
                            type: string;
                        };
                        compression_enabled: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                security: {
                    type: string;
                    properties: {
                        authentication_required: {
                            type: string;
                        };
                        authorization_level: {
                            type: string;
                        };
                        audit_logging: {
                            type: string;
                        };
                        data_encryption: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        performance_metrics: {
            type: string;
            description: string;
            properties: {
                response_time_ms: {
                    type: string;
                    minimum: number;
                };
                throughput_ops_per_sec: {
                    type: string;
                    minimum: number;
                };
                success_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                error_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                last_updated: {
                    $ref: string;
                };
            };
            additionalProperties: boolean;
        };
        retry_policy: {
            type: string;
            description: string;
            properties: {
                max_retries: {
                    type: string;
                    minimum: number;
                };
                backoff_ms: {
                    type: string;
                    minimum: number;
                };
                backoff_multiplier: {
                    type: string;
                    minimum: number;
                };
                max_backoff_ms: {
                    type: string;
                    minimum: number;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        role_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            pattern: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        display_name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        role_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        scope: {
            type: string;
            properties: {
                level: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                context_ids: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                plan_ids: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                resource_constraints: {
                    type: string;
                    properties: {
                        max_contexts: {
                            type: string;
                            minimum: number;
                        };
                        max_plans: {
                            type: string;
                            minimum: number;
                        };
                        allowed_resource_types: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
            description: string;
        };
        permissions: {
            type: string;
            items: {
                type: string;
                properties: {
                    permission_id: {
                        $ref: string;
                    };
                    resource_type: {
                        type: string;
                        enum: string[];
                    };
                    resource_id: {
                        oneOf: ({
                            $ref: string;
                            type?: undefined;
                            const?: undefined;
                        } | {
                            type: string;
                            const: string;
                            $ref?: undefined;
                        })[];
                        description: string;
                    };
                    actions: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                        minItems: number;
                    };
                    conditions: {
                        type: string;
                        properties: {
                            time_based: {
                                type: string;
                                properties: {
                                    start_time: {
                                        type: string;
                                        format: string;
                                    };
                                    end_time: {
                                        type: string;
                                        format: string;
                                    };
                                    timezone: {
                                        type: string;
                                    };
                                    days_of_week: {
                                        type: string;
                                        items: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                };
                            };
                            location_based: {
                                type: string;
                                properties: {
                                    allowed_ip_ranges: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    geo_restrictions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            context_based: {
                                type: string;
                                properties: {
                                    required_attributes: {
                                        type: string;
                                    };
                                    forbidden_attributes: {
                                        type: string;
                                    };
                                };
                            };
                            approval_required: {
                                type: string;
                                properties: {
                                    for_actions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    approval_threshold: {
                                        type: string;
                                        minimum: number;
                                    };
                                    approver_roles: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                        };
                    };
                    grant_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    expiry: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
            };
        };
        inheritance: {
            type: string;
            properties: {
                parent_roles: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            role_id: {
                                $ref: string;
                            };
                            inheritance_type: {
                                type: string;
                                enum: string[];
                            };
                            excluded_permissions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            conditions: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
                child_roles: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            role_id: {
                                $ref: string;
                            };
                            delegation_level: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            can_further_delegate: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                inheritance_rules: {
                    type: string;
                    properties: {
                        merge_strategy: {
                            type: string;
                            enum: string[];
                        };
                        conflict_resolution: {
                            type: string;
                            enum: string[];
                        };
                        max_inheritance_depth: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
            };
        };
        delegation: {
            type: string;
            properties: {
                can_delegate: {
                    type: string;
                };
                delegatable_permissions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                delegation_constraints: {
                    type: string;
                    properties: {
                        max_delegation_depth: {
                            type: string;
                            minimum: number;
                        };
                        time_limit: {
                            type: string;
                            minimum: number;
                        };
                        require_approval: {
                            type: string;
                        };
                        revocable: {
                            type: string;
                        };
                    };
                };
                active_delegations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            delegation_id: {
                                $ref: string;
                            };
                            delegated_to: {
                                type: string;
                            };
                            permissions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        attributes: {
            type: string;
            properties: {
                security_clearance: {
                    type: string;
                    enum: string[];
                };
                department: {
                    type: string;
                };
                seniority_level: {
                    type: string;
                    enum: string[];
                };
                certification_requirements: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            certification: {
                                type: string;
                            };
                            level: {
                                type: string;
                            };
                            expiry: {
                                $ref: string;
                            };
                            issuer: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                custom_attributes: {
                    type: string;
                    additionalProperties: {
                        oneOf: {
                            type: string;
                        }[];
                    };
                };
            };
        };
        validation_rules: {
            type: string;
            properties: {
                assignment_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_id: {
                                $ref: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            message: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                separation_of_duties: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            conflicting_roles: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            exception_approval_required: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        audit_settings: {
            type: string;
            properties: {
                audit_enabled: {
                    type: string;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                retention_period: {
                    type: string;
                };
                compliance_frameworks: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        agents: {
            type: string;
            description: string;
            items: {
                $ref: string;
            };
        };
        agent_management: {
            type: string;
            description: string;
            properties: {
                max_agents: {
                    type: string;
                    minimum: number;
                };
                auto_scaling: {
                    type: string;
                };
                load_balancing: {
                    type: string;
                };
                health_check_interval_ms: {
                    type: string;
                    minimum: number;
                };
                default_agent_config: {
                    $ref: string;
                };
            };
        };
        team_configuration: {
            type: string;
            description: string;
            properties: {
                max_team_size: {
                    type: string;
                    minimum: number;
                };
                collaboration_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_name: {
                                type: string;
                            };
                            rule_type: {
                                type: string;
                                enum: string[];
                            };
                            rule_config: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                decision_mechanism: {
                    type: string;
                    properties: {
                        type: {
                            type: string;
                            enum: string[];
                        };
                        threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
            };
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        role_assignment_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        permission_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        role_security_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        permission_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        role_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_roles_count: {
                            type: string;
                            minimum: number;
                        };
                        role_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        role_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_role_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_role_assignment_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_permission_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_role_security_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_permission_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_role_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        role_access_api: {
                            type: string;
                            format: string;
                        };
                        permission_metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_events_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                role_metrics: {
                    type: string;
                    properties: {
                        track_role_usage: {
                            type: string;
                        };
                        track_permission_checks: {
                            type: string;
                        };
                        track_access_patterns: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            role_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                        version_on_status_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_roles: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        role_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        role_details: {
            type: string;
            properties: {
                role_type: {
                    type: string;
                    enum: string[];
                };
                inheritance_mode: {
                    type: string;
                    enum: string[];
                };
                permission_model: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            role_operation: {
                                type: string;
                            };
                            role_id: {
                                $ref: string;
                            };
                            role_name: {
                                type: string;
                            };
                            role_type: {
                                type: string;
                            };
                            permission_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            role_status: {
                                type: string;
                            };
                            role_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        role_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        role_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        extension_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            pattern: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        display_name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        version: {
            $ref: string;
            description: string;
        };
        extension_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        compatibility: {
            type: string;
            properties: {
                mplp_version: {
                    type: string;
                    description: string;
                };
                required_modules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module: {
                                type: string;
                                enum: string[];
                            };
                            min_version: {
                                $ref: string;
                            };
                            max_version: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                dependencies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            extension_id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            version_range: {
                                type: string;
                            };
                            optional: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                conflicts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            extension_id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        configuration: {
            type: string;
            properties: {
                schema: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                current_config: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                default_config: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                validation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule: {
                                type: string;
                            };
                            message: {
                                type: string;
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        extension_points: {
            type: string;
            items: {
                type: string;
                properties: {
                    point_id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    target_module: {
                        type: string;
                        enum: string[];
                    };
                    event_name: {
                        type: string;
                    };
                    execution_order: {
                        type: string;
                        minimum: number;
                    };
                    enabled: {
                        type: string;
                    };
                    handler: {
                        type: string;
                        properties: {
                            function_name: {
                                type: string;
                            };
                            parameters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_retries: {
                                        type: string;
                                        minimum: number;
                                    };
                                    retry_delay_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    backoff_strategy: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                    conditions: {
                        type: string;
                        properties: {
                            when: {
                                type: string;
                                description: string;
                            };
                            required_permissions: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            context_filters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        api_extensions: {
            type: string;
            items: {
                type: string;
                properties: {
                    endpoint_id: {
                        $ref: string;
                    };
                    path: {
                        type: string;
                        pattern: string;
                    };
                    method: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    handler: {
                        type: string;
                    };
                    middleware: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    authentication_required: {
                        type: string;
                    };
                    required_permissions: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    rate_limit: {
                        type: string;
                        properties: {
                            requests_per_minute: {
                                type: string;
                                minimum: number;
                            };
                            burst_size: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    request_schema: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    response_schema: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
        };
        event_subscriptions: {
            type: string;
            items: {
                type: string;
                properties: {
                    subscription_id: {
                        $ref: string;
                    };
                    event_pattern: {
                        type: string;
                    };
                    source_module: {
                        type: string;
                        enum: string[];
                    };
                    handler: {
                        type: string;
                    };
                    filter_conditions: {
                        type: string;
                        additionalProperties: boolean;
                    };
                    delivery_guarantees: {
                        type: string;
                        enum: string[];
                    };
                    dead_letter_queue: {
                        type: string;
                    };
                };
                required: string[];
            };
        };
        lifecycle: {
            type: string;
            properties: {
                install_date: {
                    $ref: string;
                };
                last_update: {
                    $ref: string;
                };
                activation_count: {
                    type: string;
                    minimum: number;
                };
                error_count: {
                    type: string;
                    minimum: number;
                };
                last_error: {
                    type: string;
                    properties: {
                        timestamp: {
                            $ref: string;
                        };
                        error_type: {
                            type: string;
                        };
                        message: {
                            type: string;
                        };
                        stack_trace: {
                            type: string;
                        };
                    };
                };
                performance_metrics: {
                    type: string;
                    properties: {
                        average_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        total_executions: {
                            type: string;
                            minimum: number;
                        };
                        success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_check: {
                    type: string;
                    properties: {
                        endpoint: {
                            type: string;
                        };
                        interval_seconds: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        failure_threshold: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        security: {
            type: string;
            properties: {
                sandbox_enabled: {
                    type: string;
                };
                resource_limits: {
                    type: string;
                    properties: {
                        max_memory_mb: {
                            type: string;
                            minimum: number;
                        };
                        max_cpu_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        max_file_size_mb: {
                            type: string;
                            minimum: number;
                        };
                        network_access: {
                            type: string;
                        };
                        file_system_access: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                code_signing: {
                    type: string;
                    properties: {
                        required: {
                            type: string;
                        };
                        signature: {
                            type: string;
                        };
                        certificate: {
                            type: string;
                        };
                        timestamp: {
                            $ref: string;
                        };
                    };
                };
                permissions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            permission: {
                                type: string;
                            };
                            justification: {
                                type: string;
                            };
                            approved: {
                                type: string;
                            };
                            approved_by: {
                                type: string;
                            };
                            approval_date: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        metadata: {
            type: string;
            properties: {
                author: {
                    type: string;
                };
                organization: {
                    type: string;
                };
                license: {
                    type: string;
                };
                homepage: {
                    type: string;
                    format: string;
                };
                repository: {
                    type: string;
                    format: string;
                };
                documentation: {
                    type: string;
                    format: string;
                };
                support_contact: {
                    type: string;
                };
                keywords: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                categories: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                screenshots: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            url: {
                                type: string;
                                format: string;
                            };
                            caption: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            extension_operation: {
                                type: string;
                            };
                            extension_id: {
                                $ref: string;
                            };
                            extension_name: {
                                type: string;
                            };
                            extension_type: {
                                type: string;
                            };
                            extension_version: {
                                type: string;
                            };
                            lifecycle_stage: {
                                type: string;
                            };
                            extension_status: {
                                type: string;
                            };
                            extension_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        extension_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        extension_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        extension_activation_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        extension_lifecycle_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_ecosystem_health_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_compatibility_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_extensions_count: {
                            type: string;
                            minimum: number;
                        };
                        extension_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        extension_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_extension_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_extension_activation_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_extension_lifecycle_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_ecosystem_health_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_compatibility_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        extension_lifecycle_api: {
                            type: string;
                            format: string;
                        };
                        performance_metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_events_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                extension_metrics: {
                    type: string;
                    properties: {
                        track_lifecycle_events: {
                            type: string;
                        };
                        track_performance_impact: {
                            type: string;
                        };
                        track_usage_statistics: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            extension_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_install: {
                            type: string;
                        };
                        version_on_update: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_extensions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        extension_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        extension_details: {
            type: string;
            properties: {
                extension_type: {
                    type: string;
                    enum: string[];
                };
                compatibility_mode: {
                    type: string;
                    enum: string[];
                };
                security_level: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_stage: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_status: {
            type: string;
            enum: string[];
            description: string;
        };
        execution_mode: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        workflow_id: {
            $ref: string;
            description: string;
        };
        orchestrator_id: {
            $ref: string;
            description: string;
        };
        workflow_config: {
            type: string;
            description: string;
            properties: {
                name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                description: {
                    type: string;
                    maxLength: number;
                    description: string;
                };
                stages: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    uniqueItems: boolean;
                    description: string;
                };
                execution_mode: {
                    $ref: string;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                max_concurrent_executions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_attempts: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        delay_ms: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        backoff_factor: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        execution_context: {
            type: string;
            description: string;
            properties: {
                user_id: {
                    type: string;
                    description: string;
                };
                session_id: {
                    $ref: string;
                    description: string;
                };
                request_id: {
                    $ref: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        execution_status: {
            type: string;
            description: string;
            properties: {
                status: {
                    $ref: string;
                    description: string;
                };
                current_stage: {
                    $ref: string;
                    description: string;
                };
                completed_stages: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                stage_results: {
                    type: string;
                    description: string;
                    additionalProperties: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            duration_ms: {
                                type: string;
                                minimum: number;
                            };
                            result: {
                                type: string;
                                description: string;
                            };
                            error: {
                                type: string;
                                properties: {
                                    code: {
                                        type: string;
                                    };
                                    message: {
                                        type: string;
                                    };
                                    details: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                start_time: {
                    $ref: string;
                    description: string;
                };
                end_time: {
                    $ref: string;
                    description: string;
                };
                duration_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                retry_count: {
                    type: string;
                    minimum: number;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        module_coordination: {
            type: string;
            description: string;
            properties: {
                module_adapters: {
                    type: string;
                    description: string;
                    additionalProperties: {
                        type: string;
                        properties: {
                            adapter_type: {
                                type: string;
                                description: string;
                            };
                            config: {
                                type: string;
                                description: string;
                                additionalProperties: boolean;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    delay_ms: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                };
                data_flow: {
                    type: string;
                    description: string;
                    properties: {
                        input_mappings: {
                            type: string;
                            description: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    source_stage: {
                                        $ref: string;
                                    };
                                    source_field: {
                                        type: string;
                                    };
                                    target_field: {
                                        type: string;
                                    };
                                    transformation: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                        output_mappings: {
                            type: string;
                            description: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    target_stage: {
                                        $ref: string;
                                    };
                                    source_field: {
                                        type: string;
                                    };
                                    target_field: {
                                        type: string;
                                    };
                                    transformation: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        event_handling: {
            type: string;
            description: string;
            properties: {
                event_listeners: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_type: {
                                type: string;
                                enum: string[];
                                description: string;
                            };
                            handler: {
                                type: string;
                                description: string;
                            };
                            config: {
                                type: string;
                                description: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    description: string;
                };
                event_routing: {
                    type: string;
                    description: string;
                    properties: {
                        default_handler: {
                            type: string;
                            description: string;
                        };
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    condition: {
                                        type: string;
                                        description: string;
                                    };
                                    handler: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            system_operation: {
                                type: string;
                            };
                            workflow_id: {
                                $ref: string;
                            };
                            orchestrator_id: {
                                $ref: string;
                            };
                            core_operation: {
                                type: string;
                            };
                            core_status: {
                                type: string;
                            };
                            module_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            core_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        core_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        core_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        system_health_api: {
                            type: string;
                            format: string;
                        };
                        workflow_metrics_api: {
                            type: string;
                            format: string;
                        };
                        resource_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                system_metrics: {
                    type: string;
                    properties: {
                        track_workflow_execution: {
                            type: string;
                        };
                        track_module_coordination: {
                            type: string;
                        };
                        track_resource_usage: {
                            type: string;
                        };
                        track_system_health: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        core_orchestration_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        workflow_coordination_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        system_reliability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        module_integration_success_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        core_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        core_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        core_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_workflow_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_core_orchestration_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_workflow_coordination_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_system_reliability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_module_integration_success_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_core_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            system_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_deployment: {
                            type: string;
                        };
                        version_on_scaling: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                system_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_workflow_data: {
                            type: string;
                        };
                        index_system_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_workflows: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        core_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        core_details: {
            type: string;
            properties: {
                orchestration_mode: {
                    type: string;
                    enum: string[];
                };
                resource_allocation: {
                    type: string;
                    enum: string[];
                };
                fault_tolerance: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        entityStatus: {
            type: string;
            enum: string[];
            description: string;
        };
        decision_algorithm: {
            type: string;
            enum: string[];
            description: string;
        };
        voting_mechanism: {
            type: string;
            description: string;
            properties: {
                anonymity: {
                    type: string;
                    description: string;
                };
                transparency: {
                    type: string;
                    description: string;
                };
                revision_allowed: {
                    type: string;
                    description: string;
                };
                time_limit_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        weighting_strategy: {
            type: string;
            description: string;
            properties: {
                strategy: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                weights: {
                    type: string;
                    additionalProperties: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        consensus_requirements: {
            type: string;
            description: string;
            properties: {
                threshold: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                quorum: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                unanimity_required: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        collaboration_id: {
            $ref: string;
            description: string;
        };
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        mode: {
            type: string;
            enum: string[];
            description: string;
        };
        participants: {
            type: string;
            items: {
                type: string;
                properties: {
                    participant_id: {
                        $ref: string;
                        description: string;
                    };
                    agent_id: {
                        $ref: string;
                        description: string;
                    };
                    role_id: {
                        $ref: string;
                        description: string;
                    };
                    status: {
                        $ref: string;
                        description: string;
                    };
                    capabilities: {
                        type: string;
                        items: {
                            type: string;
                        };
                        maxItems: number;
                        description: string;
                    };
                    priority: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    weight: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    joined_at: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        coordination_strategy: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                coordinator_id: {
                    $ref: string;
                    description: string;
                };
                decision_making: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        status: {
            $ref: string;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            $ref: string;
            description: string;
        };
        decision_making: {
            type: string;
            description: string;
            properties: {
                enabled: {
                    type: string;
                    description: string;
                };
                algorithm: {
                    $ref: string;
                };
                voting: {
                    $ref: string;
                };
                weighting: {
                    $ref: string;
                };
                consensus: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        council_configuration: {
            type: string;
            description: string;
            properties: {
                council_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                session_management: {
                    type: string;
                    properties: {
                        max_session_duration_ms: {
                            type: string;
                            minimum: number;
                        };
                        quorum_enforcement: {
                            type: string;
                        };
                        automatic_adjournment: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                voting_rules: {
                    type: string;
                    properties: {
                        multiple_rounds_allowed: {
                            type: string;
                        };
                        abstention_allowed: {
                            type: string;
                        };
                        delegation_allowed: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            additionalProperties: boolean;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            collaboration_operation: {
                                type: string;
                            };
                            collab_id: {
                                $ref: string;
                            };
                            collab_name: {
                                type: string;
                            };
                            collab_type: {
                                type: string;
                            };
                            participant_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            collab_status: {
                                type: string;
                            };
                            participant_id: {
                                $ref: string;
                            };
                            task_details: {
                                type: string;
                            };
                            decision_details: {
                                type: string;
                            };
                            collab_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        collab_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        collab_data_logging: {
                            type: string;
                        };
                        decision_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        collaboration_efficiency_api: {
                            type: string;
                            format: string;
                        };
                        team_performance_api: {
                            type: string;
                            format: string;
                        };
                        task_coordination_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                collaboration_metrics: {
                    type: string;
                    properties: {
                        track_collaboration_efficiency: {
                            type: string;
                        };
                        track_team_performance: {
                            type: string;
                        };
                        track_task_coordination: {
                            type: string;
                        };
                        track_decision_quality: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        collab_coordination_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        team_collaboration_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        collaboration_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        participant_engagement_satisfaction_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        collab_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_collaborations_count: {
                            type: string;
                            minimum: number;
                        };
                        collab_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        collab_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_collaboration_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_collab_coordination_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_team_collaboration_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_collaboration_quality_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_participant_engagement_satisfaction_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_collab_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            collaboration_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                collaboration_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_task_data: {
                            type: string;
                        };
                        index_decision_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_collaborations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        collab_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        collab_details: {
            type: string;
            properties: {
                collaboration_type: {
                    type: string;
                    enum: string[];
                };
                participant_limit: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                coordination_strategy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        task_assignment_data: {
            type: string;
            properties: {
                task_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                assignee_id: {
                    $ref: string;
                    description: string;
                };
                task_name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                task_description: {
                    type: string;
                    maxLength: number;
                    description: string;
                };
                task_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                assigned_at: {
                    $ref: string;
                    description: string;
                };
                due_date: {
                    $ref: string;
                    description: string;
                };
                estimated_duration_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                dependencies: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        resource_allocation_data: {
            type: string;
            properties: {
                allocation_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                resource_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                resource_name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                allocated_to: {
                    $ref: string;
                    description: string;
                };
                allocation_amount: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                allocation_unit: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                allocation_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                allocated_at: {
                    $ref: string;
                    description: string;
                };
                expires_at: {
                    $ref: string;
                    description: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        collaboration_effectiveness_analysis: {
            type: string;
            properties: {
                analysis_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                effectiveness_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                efficiency_metrics: {
                    type: string;
                    properties: {
                        task_completion_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        average_response_time_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        resource_utilization_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        participant_engagement_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                quality_metrics: {
                    type: string;
                    properties: {
                        decision_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        communication_effectiveness: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        conflict_resolution_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                analyzed_at: {
                    $ref: string;
                    description: string;
                };
                recommendations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            recommendation_id: {
                                $ref: string;
                            };
                            category: {
                                type: string;
                                enum: string[];
                            };
                            priority: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                                maxLength: number;
                            };
                            expected_impact: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        collaboration_pattern_analysis: {
            type: string;
            properties: {
                analysis_id: {
                    $ref: string;
                    description: string;
                };
                time_range: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                identified_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            pattern_id: {
                                $ref: string;
                            };
                            pattern_type: {
                                type: string;
                                enum: string[];
                            };
                            pattern_name: {
                                type: string;
                                maxLength: number;
                            };
                            frequency: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            confidence_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            impact_assessment: {
                                type: string;
                                properties: {
                                    positive_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    negative_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    overall_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                    };
                };
                trend_analysis: {
                    type: string;
                    properties: {
                        collaboration_frequency_trend: {
                            type: string;
                            enum: string[];
                        };
                        efficiency_trend: {
                            type: string;
                            enum: string[];
                        };
                        participant_engagement_trend: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                analyzed_at: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        governance_check_result: {
            type: string;
            properties: {
                check_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                check_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                check_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                compliance_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                violations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            violation_id: {
                                $ref: string;
                            };
                            violation_type: {
                                type: string;
                                enum: string[];
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                                maxLength: number;
                            };
                            remediation_required: {
                                type: string;
                            };
                            remediation_steps: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                checked_at: {
                    $ref: string;
                    description: string;
                };
                next_check_due: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        dialog_capabilities: {
            type: string;
            description: string;
            properties: {
                basic: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            const: boolean;
                        };
                        message_history: {
                            type: string;
                        };
                        participant_management: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                intelligent_control: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        adaptive_rounds: {
                            type: string;
                        };
                        dynamic_strategy: {
                            type: string;
                        };
                        completeness_evaluation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                critical_thinking: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        analysis_depth: {
                            type: string;
                            enum: string[];
                        };
                        question_generation: {
                            type: string;
                        };
                        logic_validation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                knowledge_search: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        real_time_search: {
                            type: string;
                        };
                        knowledge_validation: {
                            type: string;
                        };
                        source_verification: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                multimodal: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        supported_modalities: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        cross_modal_translation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        dialog_strategy: {
            type: string;
            description: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
                rounds: {
                    type: string;
                    properties: {
                        min: {
                            type: string;
                            minimum: number;
                        };
                        max: {
                            type: string;
                            minimum: number;
                        };
                        target: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
                exit_criteria: {
                    type: string;
                    properties: {
                        completeness_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        user_satisfaction_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        time_limit: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        dialog_content: {
            type: string;
            description: string;
            properties: {
                text: {
                    type: string;
                };
                multimodal: {
                    type: string;
                    properties: {
                        audio: {
                            type: string;
                        };
                        image: {
                            type: string;
                        };
                        video: {
                            type: string;
                        };
                        file: {
                            type: string;
                        };
                    };
                    additionalProperties: boolean;
                };
                type: {
                    type: string;
                    enum: string[];
                };
                priority: {
                    type: string;
                    enum: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        dialog_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        participants: {
            type: string;
            items: {
                type: string;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        capabilities: {
            $ref: string;
            description: string;
        };
        strategy: {
            $ref: string;
            description: string;
        };
        context: {
            type: string;
            description: string;
            properties: {
                session_id: {
                    type: string;
                };
                context_id: {
                    type: string;
                };
                knowledge_base: {
                    type: string;
                };
                previous_dialogs: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            additionalProperties: boolean;
        };
        configuration: {
            type: string;
            description: string;
            properties: {
                timeout: {
                    type: string;
                    minimum: number;
                };
                max_participants: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_retries: {
                            type: string;
                            minimum: number;
                        };
                        backoff_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
                security: {
                    type: string;
                    properties: {
                        encryption: {
                            type: string;
                        };
                        authentication: {
                            type: string;
                        };
                        audit_logging: {
                            type: string;
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                type: string;
                                format: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            dialog_operation: {
                                type: string;
                            };
                            dialog_id: {
                                $ref: string;
                            };
                            dialog_name: {
                                type: string;
                            };
                            dialog_type: {
                                type: string;
                            };
                            participant_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            dialog_status: {
                                type: string;
                            };
                            content_hash: {
                                type: string;
                            };
                            dialog_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        dialog_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        dialog_data_logging: {
                            type: string;
                        };
                        content_retention_policy: {
                            type: string;
                        };
                        privacy_protection: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        dialog_quality_api: {
                            type: string;
                            format: string;
                        };
                        response_time_api: {
                            type: string;
                            format: string;
                        };
                        satisfaction_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                dialog_metrics: {
                    type: string;
                    properties: {
                        track_response_times: {
                            type: string;
                        };
                        track_dialog_quality: {
                            type: string;
                        };
                        track_user_satisfaction: {
                            type: string;
                        };
                        track_content_moderation: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        dialog_response_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        dialog_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dialog_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        user_experience_satisfaction_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dialog_interaction_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_dialogs_count: {
                            type: string;
                            minimum: number;
                        };
                        dialog_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        dialog_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_dialog_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            type: string;
                            format: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_dialog_response_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_dialog_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dialog_quality_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_user_experience_satisfaction_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dialog_interaction_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                type: string;
                                format: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            dialog_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                type: string;
                                format: string;
                            };
                            last_updated: {
                                type: string;
                                format: string;
                            };
                        };
                        required: string[];
                    };
                };
                content_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_message_content: {
                            type: string;
                        };
                        privacy_filtering: {
                            type: string;
                        };
                        sensitive_data_masking: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_dialogs: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        dialog_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        dialog_details: {
            type: string;
            properties: {
                dialog_type: {
                    type: string;
                    enum: string[];
                };
                turn_management: {
                    type: string;
                    enum: string[];
                };
                context_retention: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
    examples: ({
        dialog_id: string;
        name: string;
        participants: string[];
        capabilities: {
            basic: {
                enabled: boolean;
                message_history: boolean;
                participant_management: boolean;
            };
            intelligent_control?: undefined;
            critical_thinking?: undefined;
            knowledge_search?: undefined;
        };
        strategy?: undefined;
    } | {
        dialog_id: string;
        name: string;
        participants: string[];
        capabilities: {
            basic: {
                enabled: boolean;
                message_history: boolean;
                participant_management: boolean;
            };
            intelligent_control: {
                enabled: boolean;
                adaptive_rounds: boolean;
                dynamic_strategy: boolean;
                completeness_evaluation: boolean;
            };
            critical_thinking: {
                enabled: boolean;
                analysis_depth: string;
                question_generation: boolean;
                logic_validation: boolean;
            };
            knowledge_search: {
                enabled: boolean;
                real_time_search: boolean;
                knowledge_validation: boolean;
                source_verification: boolean;
            };
        };
        strategy: {
            type: string;
            rounds: {
                min: number;
                max: number;
                target: number;
            };
            exit_criteria: {
                completeness_threshold: number;
                user_satisfaction_threshold: number;
            };
        };
    })[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        entityStatus: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        network_id: {
            $ref: string;
            description: string;
        };
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        topology: {
            type: string;
            enum: string[];
            description: string;
        };
        nodes: {
            type: string;
            items: {
                type: string;
                properties: {
                    node_id: {
                        $ref: string;
                        description: string;
                    };
                    agent_id: {
                        $ref: string;
                        description: string;
                    };
                    node_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    capabilities: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                        maxItems: number;
                        description: string;
                    };
                    address: {
                        type: string;
                        properties: {
                            host: {
                                type: string;
                                description: string;
                            };
                            port: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            protocol: {
                                type: string;
                                enum: string[];
                                description: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        edges: {
            type: string;
            items: {
                type: string;
                properties: {
                    edge_id: {
                        $ref: string;
                        description: string;
                    };
                    source_node_id: {
                        $ref: string;
                        description: string;
                    };
                    target_node_id: {
                        $ref: string;
                        description: string;
                    };
                    edge_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    direction: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    status: {
                        $ref: string;
                        description: string;
                    };
                    weight: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            maxItems: number;
            description: string;
        };
        discovery_mechanism: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                registry_config: {
                    type: string;
                    properties: {
                        endpoint: {
                            type: string;
                            format: string;
                            description: string;
                        };
                        authentication: {
                            type: string;
                            default: boolean;
                            description: string;
                        };
                        refresh_interval: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        routing_strategy: {
            type: string;
            properties: {
                algorithm: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                load_balancing: {
                    type: string;
                    properties: {
                        method: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                    };
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        status: {
            $ref: string;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            $ref: string;
            description: string;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            network_operation: {
                                type: string;
                            };
                            network_id: {
                                $ref: string;
                            };
                            network_name: {
                                type: string;
                            };
                            network_type: {
                                type: string;
                            };
                            node_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            network_status: {
                                type: string;
                            };
                            node_id: {
                                $ref: string;
                            };
                            connection_details: {
                                type: string;
                            };
                            network_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        network_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        network_data_logging: {
                            type: string;
                        };
                        traffic_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        network_performance_api: {
                            type: string;
                            format: string;
                        };
                        traffic_analysis_api: {
                            type: string;
                            format: string;
                        };
                        connection_status_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                network_metrics: {
                    type: string;
                    properties: {
                        track_network_performance: {
                            type: string;
                        };
                        track_traffic_flow: {
                            type: string;
                        };
                        track_connection_status: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        network_communication_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        network_topology_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        network_reliability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        connection_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        network_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_connections_count: {
                            type: string;
                            minimum: number;
                        };
                        network_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        network_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_network_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_network_communication_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_network_topology_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_network_reliability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_connection_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_network_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            network_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_topology_change: {
                            type: string;
                        };
                        version_on_node_change: {
                            type: string;
                        };
                        version_on_routing_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                network_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_topology_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_networks: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        network_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        network_details: {
            type: string;
            properties: {
                network_topology: {
                    type: string;
                    enum: string[];
                };
                protocol_type: {
                    type: string;
                    enum: string[];
                };
                security_mode: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        security_level: {
            type: string;
            enum: string[];
            description: string;
        };
        authentication_method: {
            type: string;
            enum: string[];
            description: string;
        };
        encryption_algorithm: {
            type: string;
            enum: string[];
            description: string;
        };
        user_identity: {
            type: string;
            properties: {
                user_id: {
                    type: string;
                };
                username: {
                    type: string;
                };
                email: {
                    type: string;
                    format: string;
                };
                display_name: {
                    type: string;
                };
                user_type: {
                    type: string;
                    enum: string[];
                };
                organization: {
                    type: string;
                };
                department: {
                    type: string;
                };
                roles: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                groups: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                attributes: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
        };
        permission: {
            type: string;
            properties: {
                permission_id: {
                    $ref: string;
                };
                resource_type: {
                    type: string;
                    enum: string[];
                };
                resource_identifier: {
                    type: string;
                };
                actions: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                    minItems: number;
                };
                conditions: {
                    type: string;
                    properties: {
                        time_restrictions: {
                            type: string;
                            properties: {
                                start_time: {
                                    $ref: string;
                                };
                                end_time: {
                                    $ref: string;
                                };
                                allowed_hours: {
                                    type: string;
                                    items: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                allowed_days: {
                                    type: string;
                                    items: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                        };
                        ip_restrictions: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        context_requirements: {
                            type: string;
                            description: string;
                        };
                    };
                };
                granted_at: {
                    $ref: string;
                };
                expires_at: {
                    $ref: string;
                };
                granted_by: {
                    type: string;
                };
            };
            required: string[];
        };
        encryption_info: {
            type: string;
            properties: {
                algorithm: {
                    $ref: string;
                };
                key_id: {
                    type: string;
                };
                key_version: {
                    type: string;
                };
                initialization_vector: {
                    type: string;
                };
                key_derivation: {
                    type: string;
                    properties: {
                        method: {
                            type: string;
                            enum: string[];
                        };
                        iterations: {
                            type: string;
                            minimum: number;
                        };
                        salt: {
                            type: string;
                        };
                    };
                };
                signature: {
                    type: string;
                };
                certificate_chain: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        audit_entry: {
            type: string;
            properties: {
                audit_id: {
                    $ref: string;
                };
                event_type: {
                    type: string;
                    enum: string[];
                };
                user_identity: {
                    $ref: string;
                };
                resource_accessed: {
                    type: string;
                };
                action_performed: {
                    type: string;
                };
                result: {
                    type: string;
                    enum: string[];
                };
                source_ip: {
                    type: string;
                };
                user_agent: {
                    type: string;
                };
                session_id: {
                    $ref: string;
                };
                request_id: {
                    $ref: string;
                };
                additional_data: {
                    type: string;
                };
                risk_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                timestamp: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_context: {
            type: string;
            properties: {
                context_id: {
                    $ref: string;
                };
                session_id: {
                    $ref: string;
                };
                user_identity: {
                    $ref: string;
                };
                authentication_token: {
                    type: string;
                    properties: {
                        token_type: {
                            type: string;
                            enum: string[];
                        };
                        token_value: {
                            type: string;
                        };
                        issued_at: {
                            $ref: string;
                        };
                        expires_at: {
                            $ref: string;
                        };
                        issuer: {
                            type: string;
                        };
                        audience: {
                            type: string;
                        };
                        scopes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                permissions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                security_level: {
                    $ref: string;
                };
                encryption_info: {
                    $ref: string;
                };
                audit_trail: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                security_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            policy_id: {
                                type: string;
                            };
                            policy_name: {
                                type: string;
                            };
                            policy_version: {
                                type: string;
                            };
                            enforcement_level: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                threat_indicators: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            indicator_type: {
                                type: string;
                                enum: string[];
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                            };
                            detected_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_event: {
            type: string;
            properties: {
                event_id: {
                    $ref: string;
                };
                event_type: {
                    type: string;
                    enum: string[];
                };
                severity: {
                    type: string;
                    enum: string[];
                };
                source_module: {
                    $ref: string;
                };
                affected_resources: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                security_context: {
                    $ref: string;
                };
                event_details: {
                    type: string;
                    description: string;
                };
                mitigation_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action_type: {
                                type: string;
                                enum: string[];
                            };
                            action_description: {
                                type: string;
                            };
                            automated: {
                                type: string;
                            };
                            executed_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                investigation_status: {
                    type: string;
                    enum: string[];
                };
                occurred_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_policy: {
            type: string;
            properties: {
                policy_id: {
                    $ref: string;
                };
                policy_name: {
                    type: string;
                };
                policy_version: {
                    type: string;
                };
                policy_type: {
                    type: string;
                    enum: string[];
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                policy_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_id: {
                                type: string;
                            };
                            rule_name: {
                                type: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            parameters: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                enforcement_level: {
                    type: string;
                    enum: string[];
                };
                compliance_frameworks: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                effective_date: {
                    $ref: string;
                };
                expiration_date: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
                approved_by: {
                    type: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        security_context: {
            $ref: string;
        };
        security_event: {
            $ref: string;
        };
        security_policy: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            security_operation: {
                                type: string;
                            };
                            security_level: {
                                $ref: string;
                            };
                            authentication_method: {
                                $ref: string;
                            };
                            encryption_algorithm: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_resource: {
                                type: string;
                            };
                            security_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        security_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        security_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_monitoring_api: {
                            type: string;
                            format: string;
                        };
                        threat_analysis_api: {
                            type: string;
                            format: string;
                        };
                        compliance_monitoring_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                security_metrics: {
                    type: string;
                    properties: {
                        track_security_monitoring: {
                            type: string;
                        };
                        track_threat_analysis: {
                            type: string;
                        };
                        track_compliance_monitoring: {
                            type: string;
                        };
                        track_access_control: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        security_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        authentication_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        authorization_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        threat_detection_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_sessions_count: {
                            type: string;
                            minimum: number;
                        };
                        security_violations_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_authentications_count: {
                            type: string;
                            minimum: number;
                        };
                        average_encryption_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_security_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_authentication_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_authorization_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_threat_detection_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_security_violations_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            security_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_policy_change: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                security_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_security_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_security_events: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        security_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        security_details: {
            type: string;
            properties: {
                security_level: {
                    type: string;
                    enum: string[];
                };
                encryption_algorithm: {
                    type: string;
                    enum: string[];
                };
                authentication_method: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        metric_type: {
            type: string;
            enum: string[];
            description: string;
        };
        alert_level: {
            type: string;
            enum: string[];
            description: string;
        };
        sla_status: {
            type: string;
            enum: string[];
            description: string;
        };
        performance_baseline: {
            type: string;
            properties: {
                baseline_id: {
                    $ref: string;
                };
                baseline_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                baseline_period: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        duration_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                baseline_metrics: {
                    type: string;
                    properties: {
                        response_time_p50: {
                            type: string;
                        };
                        response_time_p95: {
                            type: string;
                        };
                        response_time_p99: {
                            type: string;
                        };
                        throughput_avg: {
                            type: string;
                        };
                        throughput_peak: {
                            type: string;
                        };
                        error_rate: {
                            type: string;
                        };
                        cpu_usage_avg: {
                            type: string;
                        };
                        memory_usage_avg: {
                            type: string;
                        };
                        disk_io_avg: {
                            type: string;
                        };
                        network_io_avg: {
                            type: string;
                        };
                    };
                };
                confidence_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                sample_size: {
                    type: string;
                    minimum: number;
                };
                created_at: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
            };
            required: string[];
        };
        sla_definition: {
            type: string;
            properties: {
                sla_id: {
                    $ref: string;
                };
                sla_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                sla_type: {
                    type: string;
                    enum: string[];
                };
                target_value: {
                    type: string;
                };
                target_unit: {
                    type: string;
                };
                measurement_period: {
                    type: string;
                    enum: string[];
                };
                calculation_method: {
                    type: string;
                    enum: string[];
                };
                violation_threshold: {
                    type: string;
                    properties: {
                        warning_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        critical_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        consecutive_violations: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                business_impact: {
                    type: string;
                    enum: string[];
                };
                penalty_clauses: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            violation_level: {
                                type: string;
                            };
                            penalty_type: {
                                type: string;
                                enum: string[];
                            };
                            penalty_amount: {
                                type: string;
                            };
                            penalty_description: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                effective_date: {
                    $ref: string;
                };
                expiration_date: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        performance_alert: {
            type: string;
            properties: {
                alert_id: {
                    $ref: string;
                };
                alert_name: {
                    type: string;
                };
                alert_type: {
                    type: string;
                    enum: string[];
                };
                alert_level: {
                    $ref: string;
                };
                module_name: {
                    $ref: string;
                };
                metric_name: {
                    type: string;
                };
                current_value: {
                    type: string;
                };
                threshold_value: {
                    type: string;
                };
                deviation_percentage: {
                    type: string;
                };
                alert_condition: {
                    type: string;
                };
                alert_description: {
                    type: string;
                };
                affected_operations: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                impact_assessment: {
                    type: string;
                    properties: {
                        user_impact: {
                            type: string;
                            enum: string[];
                        };
                        business_impact: {
                            type: string;
                            enum: string[];
                        };
                        estimated_affected_users: {
                            type: string;
                        };
                        estimated_revenue_impact: {
                            type: string;
                        };
                    };
                };
                recommended_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action_type: {
                                type: string;
                                enum: string[];
                            };
                            action_description: {
                                type: string;
                            };
                            priority: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            estimated_time_minutes: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                alert_status: {
                    type: string;
                    enum: string[];
                };
                triggered_at: {
                    $ref: string;
                };
                acknowledged_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
                acknowledged_by: {
                    type: string;
                };
                resolved_by: {
                    type: string;
                };
            };
            required: string[];
        };
        performance_report: {
            type: string;
            properties: {
                report_id: {
                    $ref: string;
                };
                report_name: {
                    type: string;
                };
                report_type: {
                    type: string;
                    enum: string[];
                };
                report_period: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                modules_covered: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                performance_summary: {
                    type: string;
                    properties: {
                        overall_availability: {
                            type: string;
                        };
                        average_response_time: {
                            type: string;
                        };
                        peak_throughput: {
                            type: string;
                        };
                        total_requests: {
                            type: string;
                        };
                        total_errors: {
                            type: string;
                        };
                        error_rate: {
                            type: string;
                        };
                        sla_compliance_rate: {
                            type: string;
                        };
                    };
                };
                module_performance: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module_name: {
                                $ref: string;
                            };
                            availability: {
                                type: string;
                            };
                            response_time_p95: {
                                type: string;
                            };
                            throughput_avg: {
                                type: string;
                            };
                            error_rate: {
                                type: string;
                            };
                            sla_status: {
                                $ref: string;
                            };
                            key_incidents: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                sla_compliance: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            sla_name: {
                                type: string;
                            };
                            target_value: {
                                type: string;
                            };
                            actual_value: {
                                type: string;
                            };
                            compliance_percentage: {
                                type: string;
                            };
                            status: {
                                $ref: string;
                            };
                            violations_count: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                trends_analysis: {
                    type: string;
                    properties: {
                        performance_trend: {
                            type: string;
                            enum: string[];
                        };
                        trend_confidence: {
                            type: string;
                        };
                        key_observations: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        recommendations: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                generated_at: {
                    $ref: string;
                };
                generated_by: {
                    type: string;
                };
                report_format: {
                    type: string;
                    enum: string[];
                };
            };
            required: string[];
        };
        capacity_planning: {
            type: string;
            properties: {
                planning_id: {
                    $ref: string;
                };
                planning_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                current_capacity: {
                    type: string;
                    properties: {
                        max_throughput: {
                            type: string;
                        };
                        max_concurrent_users: {
                            type: string;
                        };
                        cpu_cores: {
                            type: string;
                        };
                        memory_gb: {
                            type: string;
                        };
                        storage_gb: {
                            type: string;
                        };
                        network_bandwidth_mbps: {
                            type: string;
                        };
                    };
                };
                usage_patterns: {
                    type: string;
                    properties: {
                        peak_usage_times: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        seasonal_variations: {
                            type: string;
                        };
                        growth_rate_monthly: {
                            type: string;
                        };
                        usage_distribution: {
                            type: string;
                        };
                    };
                };
                capacity_projections: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            projection_period: {
                                type: string;
                            };
                            projected_load: {
                                type: string;
                            };
                            required_capacity: {
                                type: string;
                            };
                            capacity_gap: {
                                type: string;
                            };
                            scaling_recommendations: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                scaling_strategies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            strategy_name: {
                                type: string;
                            };
                            strategy_type: {
                                type: string;
                                enum: string[];
                            };
                            trigger_conditions: {
                                type: string;
                            };
                            scaling_actions: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            estimated_cost: {
                                type: string;
                            };
                            implementation_time: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        monitoring_overhead_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        performance_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        sla_compliance_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        capacity_prediction_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        performance_optimization_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_monitors_count: {
                            type: string;
                            minimum: number;
                        };
                        alert_frequency_per_hour: {
                            type: string;
                            minimum: number;
                        };
                        false_positive_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_response_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_monitoring_overhead_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_performance_analysis_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_sla_compliance_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_capacity_prediction_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_false_positive_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_baseline: {
            $ref: string;
        };
        sla_definition: {
            $ref: string;
        };
        performance_alert: {
            $ref: string;
        };
        performance_report: {
            $ref: string;
        };
        capacity_planning: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            performance_operation: {
                                type: string;
                            };
                            metric_name: {
                                type: string;
                            };
                            metric_value: {
                                type: string;
                            };
                            alert_level: {
                                $ref: string;
                            };
                            sla_status: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            performance_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        performance_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        performance_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        performance_monitoring_api: {
                            type: string;
                            format: string;
                        };
                        performance_analysis_api: {
                            type: string;
                            format: string;
                        };
                        sla_monitoring_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                performance_metrics: {
                    type: string;
                    properties: {
                        track_performance_monitoring: {
                            type: string;
                        };
                        track_performance_analysis: {
                            type: string;
                        };
                        track_sla_monitoring: {
                            type: string;
                        };
                        track_capacity_planning: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            performance_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_baseline_change: {
                            type: string;
                        };
                        version_on_sla_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                performance_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_performance_data: {
                            type: string;
                        };
                        index_enterprise_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_metrics: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        performance_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        performance_details: {
            type: string;
            properties: {
                collection_strategy: {
                    type: string;
                    enum: string[];
                };
                aggregation_level: {
                    type: string;
                    enum: string[];
                };
                retention_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        event_type: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        delivery_mode: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        routing_strategy: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        event_message: {
            type: string;
            properties: {
                event_id: {
                    $ref: string;
                };
                event_type: {
                    $ref: string;
                };
                event_name: {
                    type: string;
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                routing_key: {
                    type: string;
                    description: string;
                };
                headers: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                delivery_mode: {
                    $ref: string;
                };
                ttl_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                correlation_id: {
                    $ref: string;
                    description: string;
                };
                reply_to: {
                    type: string;
                    description: string;
                };
                trace_context: {
                    type: string;
                    properties: {
                        trace_id: {
                            $ref: string;
                        };
                        span_id: {
                            $ref: string;
                        };
                        parent_span_id: {
                            $ref: string;
                        };
                    };
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                expires_at: {
                    $ref: string;
                };
                event_bus_details: {
                    type: string;
                    properties: {
                        bus_topology: {
                            type: string;
                            enum: string[];
                        };
                        message_ordering: {
                            type: string;
                            enum: string[];
                        };
                        delivery_guarantee: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        event_subscription: {
            type: string;
            properties: {
                subscription_id: {
                    $ref: string;
                };
                subscriber_module: {
                    $ref: string;
                };
                event_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_type: {
                                $ref: string;
                            };
                            event_name_pattern: {
                                type: string;
                                description: string;
                            };
                            source_modules: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                            };
                            routing_key_pattern: {
                                type: string;
                                description: string;
                            };
                            filter_conditions: {
                                type: string;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    minItems: number;
                };
                delivery_options: {
                    type: string;
                    properties: {
                        max_retry_count: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        retry_delay_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        dead_letter_enabled: {
                            type: string;
                            default: boolean;
                        };
                        batch_size: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        batch_timeout_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                active: {
                    type: string;
                    default: boolean;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        event_delivery_receipt: {
            type: string;
            properties: {
                receipt_id: {
                    $ref: string;
                };
                event_id: {
                    $ref: string;
                };
                subscription_id: {
                    $ref: string;
                };
                delivery_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                delivery_attempt: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                processing_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                delivered_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        event_bus_metrics: {
            type: string;
            properties: {
                metric_id: {
                    $ref: string;
                };
                time_window_start: {
                    $ref: string;
                };
                time_window_end: {
                    $ref: string;
                };
                throughput_metrics: {
                    type: string;
                    properties: {
                        events_published: {
                            type: string;
                        };
                        events_delivered: {
                            type: string;
                        };
                        events_failed: {
                            type: string;
                        };
                        average_latency_ms: {
                            type: string;
                        };
                        p95_latency_ms: {
                            type: string;
                        };
                        p99_latency_ms: {
                            type: string;
                        };
                    };
                };
                resource_metrics: {
                    type: string;
                    properties: {
                        memory_usage_mb: {
                            type: string;
                        };
                        cpu_usage_percent: {
                            type: string;
                        };
                        network_io_mb: {
                            type: string;
                        };
                        queue_depth: {
                            type: string;
                        };
                    };
                };
                error_metrics: {
                    type: string;
                    properties: {
                        error_rate: {
                            type: string;
                        };
                        timeout_rate: {
                            type: string;
                        };
                        dead_letter_rate: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        event_message: {
            $ref: string;
        };
        event_subscription: {
            $ref: string;
        };
        event_delivery_receipt: {
            $ref: string;
        };
        event_bus_metrics: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            event_bus_operation: {
                                type: string;
                            };
                            message_id: {
                                $ref: string;
                            };
                            topic_name: {
                                type: string;
                            };
                            subscriber_id: {
                                $ref: string;
                            };
                            delivery_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        event_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        message_content_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        event_throughput_api: {
                            type: string;
                            format: string;
                        };
                        message_latency_api: {
                            type: string;
                            format: string;
                        };
                        queue_status_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                event_bus_metrics: {
                    type: string;
                    properties: {
                        track_event_throughput: {
                            type: string;
                        };
                        track_message_latency: {
                            type: string;
                        };
                        track_queue_status: {
                            type: string;
                        };
                        track_subscription_health: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        event_throughput_per_second: {
                            type: string;
                            minimum: number;
                        };
                        message_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        queue_depth_count: {
                            type: string;
                            minimum: number;
                        };
                        delivery_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        subscription_health_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_subscribers_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_deliveries_count: {
                            type: string;
                            minimum: number;
                        };
                        dead_letter_queue_size: {
                            type: string;
                            minimum: number;
                        };
                        average_processing_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                min_throughput_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                max_message_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_queue_depth_count: {
                                    type: string;
                                    minimum: number;
                                };
                                min_delivery_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_dead_letter_queue_size: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            event_bus_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_topic_change: {
                            type: string;
                        };
                        version_on_subscription_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                event_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_message_content: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_events: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        event_bus_details: {
            type: string;
            properties: {
                bus_topology: {
                    type: string;
                    enum: string[];
                };
                message_ordering: {
                    type: string;
                    enum: string[];
                };
                delivery_guarantee: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_bus_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        error_code: {
            type: string;
            pattern: string;
            description: string;
        };
        error_category: {
            type: string;
            enum: string[];
            description: string;
        };
        error_severity: {
            type: string;
            enum: string[];
            description: string;
        };
        recovery_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        stack_frame: {
            type: string;
            properties: {
                module: {
                    $ref: string;
                };
                function_name: {
                    type: string;
                };
                file_path: {
                    type: string;
                };
                line_number: {
                    type: string;
                    minimum: number;
                };
                column_number: {
                    type: string;
                    minimum: number;
                };
                source_code: {
                    type: string;
                };
                error_handling_operation: {
                    type: string;
                    enum: string[];
                };
                error_handling_details: {
                    type: string;
                    properties: {
                        error_category: {
                            type: string;
                        };
                        recovery_strategy: {
                            type: string;
                        };
                        escalation_level: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        error_context: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                session_id: {
                    $ref: string;
                };
                user_id: {
                    type: string;
                };
                operation: {
                    type: string;
                };
                input_parameters: {
                    type: string;
                };
                environment: {
                    type: string;
                    enum: string[];
                };
                system_state: {
                    type: string;
                };
                correlation_data: {
                    type: string;
                };
            };
        };
        error_info: {
            type: string;
            properties: {
                error_id: {
                    $ref: string;
                };
                error_code: {
                    $ref: string;
                };
                error_category: {
                    $ref: string;
                };
                error_severity: {
                    $ref: string;
                };
                error_message: {
                    type: string;
                    description: string;
                };
                technical_message: {
                    type: string;
                    description: string;
                };
                error_details: {
                    type: string;
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                source_function: {
                    type: string;
                };
                stack_trace: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                inner_errors: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                context: {
                    $ref: string;
                };
                recovery_suggestions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            strategy: {
                                $ref: string;
                            };
                            description: {
                                type: string;
                            };
                            automated: {
                                type: string;
                            };
                            success_probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                };
                occurred_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
                resolution_notes: {
                    type: string;
                };
            };
            required: string[];
        };
        error_propagation: {
            type: string;
            properties: {
                propagation_id: {
                    $ref: string;
                };
                original_error: {
                    $ref: string;
                };
                propagation_chain: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module: {
                                $ref: string;
                            };
                            function: {
                                type: string;
                            };
                            transformation: {
                                type: string;
                                enum: string[];
                            };
                            added_context: {
                                type: string;
                            };
                            timestamp: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                final_error: {
                    $ref: string;
                };
                propagation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_name: {
                                type: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            transformation_template: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        error_recovery: {
            type: string;
            properties: {
                recovery_id: {
                    $ref: string;
                };
                error_id: {
                    $ref: string;
                };
                recovery_strategy: {
                    $ref: string;
                };
                recovery_attempts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            attempt_number: {
                                type: string;
                                minimum: number;
                            };
                            strategy_used: {
                                $ref: string;
                            };
                            attempt_timestamp: {
                                $ref: string;
                            };
                            success: {
                                type: string;
                            };
                            duration_ms: {
                                type: string;
                                minimum: number;
                            };
                            result_data: {
                                type: string;
                            };
                            failure_reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                final_outcome: {
                    type: string;
                    enum: string[];
                };
                recovery_metadata: {
                    type: string;
                    properties: {
                        total_attempts: {
                            type: string;
                        };
                        total_duration_ms: {
                            type: string;
                        };
                        resources_consumed: {
                            type: string;
                        };
                        side_effects: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        error_monitoring: {
            type: string;
            properties: {
                monitoring_id: {
                    $ref: string;
                };
                time_window: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        duration_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                error_statistics: {
                    type: string;
                    properties: {
                        total_errors: {
                            type: string;
                            minimum: number;
                        };
                        errors_by_category: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        errors_by_severity: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        errors_by_module: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        error_rate: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        recovery_success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                trending_data: {
                    type: string;
                    properties: {
                        error_trend: {
                            type: string;
                            enum: string[];
                        };
                        trend_confidence: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        predicted_next_hour: {
                            type: string;
                        };
                        anomaly_detected: {
                            type: string;
                        };
                        anomaly_description: {
                            type: string;
                        };
                    };
                };
                alert_thresholds: {
                    type: string;
                    properties: {
                        error_rate_threshold: {
                            type: string;
                        };
                        critical_error_threshold: {
                            type: string;
                        };
                        recovery_failure_threshold: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        error_notification: {
            type: string;
            properties: {
                notification_id: {
                    $ref: string;
                };
                error_id: {
                    $ref: string;
                };
                notification_type: {
                    type: string;
                    enum: string[];
                };
                recipients: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            recipient_type: {
                                type: string;
                                enum: string[];
                            };
                            recipient_id: {
                                type: string;
                            };
                            notification_method: {
                                type: string;
                                enum: string[];
                            };
                            priority: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                notification_content: {
                    type: string;
                    properties: {
                        subject: {
                            type: string;
                        };
                        summary: {
                            type: string;
                        };
                        detailed_message: {
                            type: string;
                        };
                        action_items: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        attachments: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    name: {
                                        type: string;
                                    };
                                    type: {
                                        type: string;
                                    };
                                    content: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                delivery_status: {
                    type: string;
                    properties: {
                        sent_at: {
                            $ref: string;
                        };
                        delivery_attempts: {
                            type: string;
                        };
                        successful_deliveries: {
                            type: string;
                        };
                        failed_deliveries: {
                            type: string;
                        };
                        delivery_errors: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        error_info: {
            $ref: string;
        };
        error_propagation: {
            $ref: string;
        };
        error_recovery: {
            $ref: string;
        };
        error_monitoring: {
            $ref: string;
        };
        error_notification: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            error_operation: {
                                type: string;
                            };
                            error_code: {
                                $ref: string;
                            };
                            error_category: {
                                $ref: string;
                            };
                            error_severity: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            recovery_strategy: {
                                $ref: string;
                            };
                            error_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        error_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        error_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        error_handling_api: {
                            type: string;
                            format: string;
                        };
                        exception_analysis_api: {
                            type: string;
                            format: string;
                        };
                        system_stability_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                error_metrics: {
                    type: string;
                    properties: {
                        track_error_handling: {
                            type: string;
                        };
                        track_exception_analysis: {
                            type: string;
                        };
                        track_system_stability: {
                            type: string;
                        };
                        track_recovery_success: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        error_handling_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        error_frequency_per_hour: {
                            type: string;
                            minimum: number;
                        };
                        recovery_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        system_stability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        exception_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_errors_count: {
                            type: string;
                            minimum: number;
                        };
                        critical_errors_count: {
                            type: string;
                            minimum: number;
                        };
                        escalation_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_recovery_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_error_handling_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_error_frequency_per_hour: {
                                    type: string;
                                    minimum: number;
                                };
                                min_recovery_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_system_stability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_critical_errors_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            error_handling_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                        version_on_pattern_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                error_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_error_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_errors: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        error_handling_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        error_handling_details: {
            type: string;
            properties: {
                error_category: {
                    type: string;
                };
                recovery_strategy: {
                    type: string;
                };
                escalation_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_type: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        response_status: {
            type: string;
            enum: string[];
            description: string;
        };
        error_info: {
            type: string;
            properties: {
                error_code: {
                    type: string;
                    pattern: string;
                    description: string;
                };
                error_message: {
                    type: string;
                    description: string;
                };
                error_details: {
                    type: string;
                    description: string;
                };
                stack_trace: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            required: string[];
        };
        coordination_request: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                coordination_type: {
                    $ref: string;
                };
                operation: {
                    type: string;
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                retry_count: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                correlation_id: {
                    $ref: string;
                    description: string;
                };
                context: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        coordination_response: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                response_id: {
                    $ref: string;
                };
                status: {
                    $ref: string;
                };
                result: {
                    type: string;
                    description: string;
                };
                error: {
                    $ref: string;
                };
                execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        coordination_notification: {
            type: string;
            properties: {
                notification_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                event_type: {
                    type: string;
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        coordination_request: {
            $ref: string;
        };
        coordination_response: {
            $ref: string;
        };
        coordination_notification: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            coordination_operation: {
                                type: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_module: {
                                $ref: string;
                            };
                            coordination_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        coordination_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        synchronization_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        coordination_efficiency_api: {
                            type: string;
                            format: string;
                        };
                        synchronization_performance_api: {
                            type: string;
                            format: string;
                        };
                        conflict_resolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                coordination_metrics: {
                    type: string;
                    properties: {
                        track_coordination_efficiency: {
                            type: string;
                        };
                        track_synchronization_performance: {
                            type: string;
                        };
                        track_conflict_resolution: {
                            type: string;
                        };
                        track_state_consistency: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        coordination_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        synchronization_efficiency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        conflict_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        state_consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        coordination_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_coordinations_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_coordinations_count: {
                            type: string;
                            minimum: number;
                        };
                        lock_contention_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_sync_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_coordination_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_synchronization_efficiency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_conflict_resolution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_state_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_coordination_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            coordination_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_module_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                coordination_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_coordination_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_coordinations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        coordination_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_details: {
            type: string;
            properties: {
                coordination_pattern: {
                    type: string;
                    enum: string[];
                };
                consensus_algorithm: {
                    type: string;
                    enum: string[];
                };
                conflict_resolution: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        execution_mode: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_status: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_step: {
            type: string;
            properties: {
                step_id: {
                    $ref: string;
                };
                step_name: {
                    type: string;
                    description: string;
                };
                target_module: {
                    $ref: string;
                };
                operation: {
                    type: string;
                    description: string;
                };
                input_data: {
                    type: string;
                    description: string;
                };
                dependencies: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_retries: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        retry_delay_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        backoff_multiplier: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                orchestration_details: {
                    type: string;
                    properties: {
                        orchestration_pattern: {
                            type: string;
                            enum: string[];
                        };
                        resource_allocation: {
                            type: string;
                            enum: string[];
                        };
                        failure_handling: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        coordination_plan: {
            type: string;
            properties: {
                plan_id: {
                    $ref: string;
                };
                plan_name: {
                    type: string;
                    description: string;
                };
                steps: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                execution_mode: {
                    $ref: string;
                };
                global_timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                rollback_strategy: {
                    type: string;
                    enum: string[];
                    default: string;
                    description: string;
                };
            };
            required: string[];
        };
        performance_requirements: {
            type: string;
            properties: {
                max_execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                max_memory_mb: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                min_success_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                max_concurrent_steps: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
            };
        };
        orchestration_request: {
            type: string;
            properties: {
                workflow_id: {
                    $ref: string;
                };
                workflow_name: {
                    type: string;
                    description: string;
                };
                coordination_plan: {
                    $ref: string;
                };
                global_context: {
                    type: string;
                    description: string;
                };
                performance_requirements: {
                    $ref: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    default: string;
                };
                created_by: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        orchestration_response: {
            type: string;
            properties: {
                workflow_id: {
                    $ref: string;
                };
                execution_id: {
                    $ref: string;
                };
                status: {
                    $ref: string;
                };
                progress: {
                    type: string;
                    properties: {
                        completed_steps: {
                            type: string;
                            minimum: number;
                        };
                        total_steps: {
                            type: string;
                            minimum: number;
                        };
                        current_step: {
                            $ref: string;
                        };
                        completion_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
                results: {
                    type: string;
                    description: string;
                };
                execution_metrics: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        total_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        failed_step: {
                            $ref: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        orchestration_request: {
            $ref: string;
        };
        orchestration_response: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            orchestration_operation: {
                                type: string;
                            };
                            workflow_id: {
                                $ref: string;
                            };
                            step_id: {
                                $ref: string;
                            };
                            execution_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        orchestration_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        workflow_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        workflow_execution_api: {
                            type: string;
                            format: string;
                        };
                        resource_utilization_api: {
                            type: string;
                            format: string;
                        };
                        orchestration_efficiency_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                orchestration_metrics: {
                    type: string;
                    properties: {
                        track_workflow_execution: {
                            type: string;
                        };
                        track_resource_utilization: {
                            type: string;
                        };
                        track_orchestration_efficiency: {
                            type: string;
                        };
                        track_dependency_resolution: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        workflow_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        orchestration_efficiency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        resource_utilization_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        step_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dependency_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        active_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_step_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_workflow_execution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_orchestration_efficiency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_resource_utilization_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_step_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_rollback_frequency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            orchestration_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_workflow_change: {
                            type: string;
                        };
                        version_on_plan_change: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                orchestration_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_workflow_data: {
                            type: string;
                        };
                        index_execution_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_workflows: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        orchestration_details: {
            type: string;
            properties: {
                orchestration_pattern: {
                    type: string;
                    enum: string[];
                };
                resource_allocation: {
                    type: string;
                    enum: string[];
                };
                failure_handling: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        orchestration_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        sync_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        consistency_level: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        conflict_resolution: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        state_snapshot: {
            type: string;
            properties: {
                snapshot_id: {
                    $ref: string;
                };
                module: {
                    $ref: string;
                };
                version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                state_data: {
                    type: string;
                    description: string;
                };
                checksum: {
                    type: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    properties: {
                        size_bytes: {
                            type: string;
                        };
                        compression: {
                            type: string;
                        };
                        encoding: {
                            type: string;
                        };
                    };
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_delta: {
            type: string;
            properties: {
                delta_id: {
                    $ref: string;
                };
                base_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                target_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                operations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            operation_type: {
                                type: string;
                                enum: string[];
                            };
                            path: {
                                type: string;
                                description: string;
                            };
                            old_value: {
                                description: string;
                            };
                            new_value: {
                                description: string;
                            };
                            timestamp: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                checksum: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_request: {
            type: string;
            properties: {
                sync_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                sync_strategy: {
                    $ref: string;
                };
                consistency_level: {
                    $ref: string;
                };
                sync_scope: {
                    type: string;
                    properties: {
                        include_paths: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        exclude_paths: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        filter_conditions: {
                            type: string;
                            description: string;
                        };
                    };
                };
                sync_options: {
                    type: string;
                    properties: {
                        use_delta: {
                            type: string;
                            default: boolean;
                            description: string;
                        };
                        compression_enabled: {
                            type: string;
                            default: boolean;
                        };
                        batch_size: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        retry_count: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                state_snapshot: {
                    $ref: string;
                };
                state_delta: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_response: {
            type: string;
            properties: {
                sync_id: {
                    $ref: string;
                };
                response_id: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                sync_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                applied_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                conflicts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            path: {
                                type: string;
                            };
                            conflict_type: {
                                type: string;
                                enum: string[];
                            };
                            local_value: {
                                description: string;
                            };
                            remote_value: {
                                description: string;
                            };
                            resolution: {
                                $ref: string;
                            };
                            resolved_value: {
                                description: string;
                            };
                        };
                        required: string[];
                    };
                };
                sync_metrics: {
                    type: string;
                    properties: {
                        records_processed: {
                            type: string;
                        };
                        records_applied: {
                            type: string;
                        };
                        records_skipped: {
                            type: string;
                        };
                        processing_time_ms: {
                            type: string;
                        };
                        data_size_bytes: {
                            type: string;
                        };
                    };
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                next_sync_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_subscription: {
            type: string;
            properties: {
                subscription_id: {
                    $ref: string;
                };
                subscriber_module: {
                    $ref: string;
                };
                source_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                sync_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            path_pattern: {
                                type: string;
                                description: string;
                            };
                            sync_strategy: {
                                $ref: string;
                            };
                            sync_frequency_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                };
                active: {
                    type: string;
                    default: boolean;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        state_sync_request: {
            $ref: string;
        };
        state_sync_response: {
            $ref: string;
        };
        state_sync_subscription: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            state_sync_operation: {
                                type: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_module: {
                                $ref: string;
                            };
                            sync_details: {
                                type: string;
                            };
                            conflict_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        state_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        state_change_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        sync_performance_api: {
                            type: string;
                            format: string;
                        };
                        consistency_analysis_api: {
                            type: string;
                            format: string;
                        };
                        conflict_resolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                state_sync_metrics: {
                    type: string;
                    properties: {
                        track_sync_performance: {
                            type: string;
                        };
                        track_consistency_analysis: {
                            type: string;
                        };
                        track_conflict_resolution: {
                            type: string;
                        };
                        track_state_integrity: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        sync_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        conflict_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        sync_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        state_integrity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_syncs_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_syncs_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_sync_size_bytes: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_sync_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_conflict_resolution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_sync_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_state_integrity_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            state_sync_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_pattern_change: {
                            type: string;
                        };
                        version_on_subscription_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                state_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_state_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_syncs: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        state_sync_details: {
            type: string;
            properties: {
                sync_strategy: {
                    type: string;
                    enum: string[];
                };
                conflict_resolution: {
                    type: string;
                    enum: string[];
                };
                consistency_level: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        state_sync_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        isolation_level: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        transaction_state: {
            type: string;
            enum: string[];
            description: string;
        };
        rollback_strategy: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        participant_info: {
            type: string;
            properties: {
                module: {
                    $ref: string;
                };
                participant_id: {
                    $ref: string;
                };
                resource_locks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            resource_id: {
                                type: string;
                            };
                            lock_type: {
                                type: string;
                                enum: string[];
                            };
                            acquired_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                state: {
                    $ref: string;
                };
                last_heartbeat: {
                    $ref: string;
                };
                compensation_data: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
        };
        transaction_context: {
            type: string;
            properties: {
                transaction_id: {
                    $ref: string;
                };
                parent_transaction_id: {
                    $ref: string;
                    description: string;
                };
                isolation_level: {
                    $ref: string;
                };
                participating_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                participants: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                transaction_state: {
                    $ref: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                rollback_strategy: {
                    $ref: string;
                };
                coordinator_module: {
                    $ref: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        transaction_operation: {
            type: string;
            properties: {
                operation_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                operation_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                operation_data: {
                    type: string;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        transaction_result: {
            type: string;
            properties: {
                operation_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                result_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                result_data: {
                    type: string;
                    description: string;
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                resource_usage: {
                    type: string;
                    properties: {
                        memory_mb: {
                            type: string;
                        };
                        cpu_time_ms: {
                            type: string;
                        };
                        io_operations: {
                            type: string;
                        };
                    };
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        compensation_action: {
            type: string;
            properties: {
                action_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                compensation_operation: {
                    type: string;
                    description: string;
                };
                compensation_data: {
                    type: string;
                    description: string;
                };
                execution_order: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        transaction_context: {
            $ref: string;
        };
        transaction_operation: {
            $ref: string;
        };
        transaction_result: {
            $ref: string;
        };
        compensation_action: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            transaction_operation: {
                                type: string;
                            };
                            transaction_id: {
                                $ref: string;
                            };
                            participant_modules: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            isolation_level: {
                                $ref: string;
                            };
                            transaction_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        transaction_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        transaction_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        transaction_performance_api: {
                            type: string;
                            format: string;
                        };
                        deadlock_detection_api: {
                            type: string;
                            format: string;
                        };
                        acid_compliance_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                transaction_metrics: {
                    type: string;
                    properties: {
                        track_transaction_performance: {
                            type: string;
                        };
                        track_deadlock_detection: {
                            type: string;
                        };
                        track_acid_compliance: {
                            type: string;
                        };
                        track_lock_contention: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        transaction_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        transaction_throughput_per_second: {
                            type: string;
                            minimum: number;
                        };
                        deadlock_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        acid_compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        lock_contention_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_transactions_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_transactions_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_lock_wait_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_transaction_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_transaction_throughput_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                max_deadlock_frequency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_acid_compliance_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_lock_contention_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            transaction_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_isolation_change: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                transaction_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_transaction_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_transactions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        transaction_details: {
            type: string;
            properties: {
                isolation_level: {
                    type: string;
                    enum: string[];
                };
                timeout_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                rollback_strategy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        compatibility_level: {
            type: string;
            enum: string[];
            description: string;
        };
        module_version_info: {
            type: string;
            properties: {
                module_name: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                current_version: {
                    $ref: string;
                };
                supported_versions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                deprecated_versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version: {
                                $ref: string;
                            };
                            deprecation_date: {
                                $ref: string;
                            };
                            removal_date: {
                                $ref: string;
                            };
                            migration_guide: {
                                type: string;
                                description: string;
                            };
                            protocol_version_operation: {
                                type: string;
                                enum: string[];
                            };
                            protocol_version_details: {
                                type: string;
                                properties: {
                                    compatibility_mode: {
                                        type: string;
                                        enum: string[];
                                    };
                                    migration_strategy: {
                                        type: string;
                                    };
                                    rollback_support: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                breaking_changes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version: {
                                $ref: string;
                            };
                            change_description: {
                                type: string;
                            };
                            impact_level: {
                                type: string;
                                enum: string[];
                            };
                            migration_required: {
                                type: string;
                            };
                            affected_apis: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        compatibility_matrix: {
            type: string;
            properties: {
                matrix_version: {
                    $ref: string;
                };
                compatibility_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            source_module: {
                                type: string;
                            };
                            source_version: {
                                $ref: string;
                            };
                            target_module: {
                                type: string;
                            };
                            target_version_range: {
                                type: string;
                                description: string;
                            };
                            compatibility_level: {
                                $ref: string;
                            };
                            notes: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                global_constraints: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            constraint_type: {
                                type: string;
                                enum: string[];
                            };
                            modules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            version_constraint: {
                                type: string;
                            };
                            reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        upgrade_path: {
            type: string;
            properties: {
                path_id: {
                    $ref: string;
                };
                from_version: {
                    $ref: string;
                };
                to_version: {
                    $ref: string;
                };
                upgrade_steps: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            step_number: {
                                type: string;
                                minimum: number;
                            };
                            step_description: {
                                type: string;
                            };
                            step_type: {
                                type: string;
                                enum: string[];
                            };
                            affected_modules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            automation_script: {
                                type: string;
                                description: string;
                            };
                            manual_steps: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            validation_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            rollback_procedure: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                estimated_duration_minutes: {
                    type: string;
                    minimum: number;
                };
                risk_level: {
                    type: string;
                    enum: string[];
                };
                prerequisites: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                post_upgrade_validation: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        deprecation_schedule: {
            type: string;
            properties: {
                schedule_version: {
                    $ref: string;
                };
                deprecation_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            policy_name: {
                                type: string;
                            };
                            deprecation_period_months: {
                                type: string;
                                minimum: number;
                            };
                            notification_schedule: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        notification_type: {
                                            type: string;
                                            enum: string[];
                                        };
                                        months_before_removal: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            affected_features: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                scheduled_deprecations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            item_type: {
                                type: string;
                                enum: string[];
                            };
                            item_identifier: {
                                type: string;
                            };
                            deprecation_date: {
                                $ref: string;
                            };
                            removal_date: {
                                $ref: string;
                            };
                            replacement: {
                                type: string;
                            };
                            migration_guide: {
                                type: string;
                            };
                            impact_assessment: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        protocol_version_info: {
            type: string;
            properties: {
                protocol_suite_version: {
                    $ref: string;
                };
                protocol_suite_name: {
                    type: string;
                    const: string;
                };
                release_date: {
                    $ref: string;
                };
                module_versions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                };
                compatibility_matrix: {
                    $ref: string;
                };
                upgrade_paths: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                deprecation_schedule: {
                    $ref: string;
                };
                release_notes: {
                    type: string;
                    properties: {
                        new_features: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        improvements: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        bug_fixes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        breaking_changes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        security_updates: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                metadata: {
                    type: string;
                    properties: {
                        maintainers: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        repository_url: {
                            type: string;
                            format: string;
                        };
                        documentation_url: {
                            type: string;
                            format: string;
                        };
                        support_contact: {
                            type: string;
                        };
                        license: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        protocol_version_info: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            version_operation: {
                                type: string;
                            };
                            source_version: {
                                $ref: string;
                            };
                            target_version: {
                                $ref: string;
                            };
                            module_name: {
                                type: string;
                            };
                            compatibility_result: {
                                $ref: string;
                            };
                            version_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        version_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        version_change_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        version_management_api: {
                            type: string;
                            format: string;
                        };
                        compatibility_analysis_api: {
                            type: string;
                            format: string;
                        };
                        protocol_evolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                version_metrics: {
                    type: string;
                    properties: {
                        track_version_management: {
                            type: string;
                        };
                        track_compatibility_analysis: {
                            type: string;
                        };
                        track_protocol_evolution: {
                            type: string;
                        };
                        track_migration_progress: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        version_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        compatibility_check_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        migration_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        protocol_evolution_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        version_adoption_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_versions_count: {
                            type: string;
                            minimum: number;
                        };
                        deprecated_versions_count: {
                            type: string;
                            minimum: number;
                        };
                        compatibility_conflicts_count: {
                            type: string;
                            minimum: number;
                        };
                        average_migration_time_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_version_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_compatibility_check_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_migration_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_protocol_evolution_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_compatibility_conflicts_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            protocol_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_protocol_change: {
                            type: string;
                        };
                        version_on_compatibility_change: {
                            type: string;
                        };
                        version_on_deprecation_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                version_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_version_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_versions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        protocol_version_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        protocol_version_details: {
            type: string;
            properties: {
                compatibility_mode: {
                    type: string;
                    enum: string[];
                };
                migration_strategy: {
                    type: string;
                };
                rollback_support: {
                    type: string;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
})[];
export declare const CoreModuleNames: Array<keyof typeof CoreModulesSchemaMap>;
export declare const CrossCuttingConcernNames: Array<keyof typeof CrossCuttingConcernsSchemaMap>;
export declare const ModuleNames: Array<keyof typeof SchemaMap>;
export declare const ProductionReadyModules: readonly ["context", "plan", "confirm"];
export declare const EnterpriseStandardModules: readonly ["trace", "role", "extension", "core"];
export declare const PendingModules: readonly ["collab", "dialog", "network"];
export interface ValidationResult {
    isValid: boolean;
    errors?: string[];
    warnings?: string[];
}
export declare function validateProtocolData(data: unknown, schemaName: SchemaName): ValidationResult;
export declare const validateContextProtocol: (data: unknown) => ValidationResult;
export declare const validatePlanProtocol: (data: unknown) => ValidationResult;
export declare const validateConfirmProtocol: (data: unknown) => ValidationResult;
export declare const validateTraceProtocol: (data: unknown) => ValidationResult;
export declare const validateRoleProtocol: (data: unknown) => ValidationResult;
export declare const validateExtensionProtocol: (data: unknown) => ValidationResult;
export declare const validateCoreProtocol: (data: unknown) => ValidationResult;
export declare const validateCollabProtocol: (data: unknown) => ValidationResult;
export declare const validateDialogProtocol: (data: unknown) => ValidationResult;
export declare const validateNetworkProtocol: (data: unknown) => ValidationResult;
export declare const validateSecurityProtocol: (data: unknown) => ValidationResult;
export declare const validatePerformanceProtocol: (data: unknown) => ValidationResult;
export declare const validateEventBusProtocol: (data: unknown) => ValidationResult;
export declare const validateErrorHandlingProtocol: (data: unknown) => ValidationResult;
export declare const validateCoordinationProtocol: (data: unknown) => ValidationResult;
export declare const validateOrchestrationProtocol: (data: unknown) => ValidationResult;
export declare const validateStateSyncProtocol: (data: unknown) => ValidationResult;
export declare const validateTransactionProtocol: (data: unknown) => ValidationResult;
export declare const validateProtocolVersionProtocol: (data: unknown) => ValidationResult;
export declare function getSchema(schemaName: SchemaName): {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        lifecycle_stage: {
            type: string;
            enum: string[];
            description: string;
        };
        shared_state: {
            type: string;
            properties: {
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                resources: {
                    type: string;
                    properties: {
                        allocated: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                    };
                                    amount: {
                                        type: string;
                                    };
                                    unit: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        requirements: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    minimum: {
                                        type: string;
                                    };
                                    optimal: {
                                        type: string;
                                    };
                                    maximum: {
                                        type: string;
                                    };
                                    unit: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    required: string[];
                };
                dependencies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            type: {
                                type: string;
                                enum: string[];
                            };
                            name: {
                                type: string;
                            };
                            version: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                goals: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            priority: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            success_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        metric: {
                                            type: string;
                                        };
                                        operator: {
                                            type: string;
                                            enum: string[];
                                        };
                                        value: {
                                            type: string[];
                                        };
                                        unit: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        access_control: {
            type: string;
            properties: {
                owner: {
                    type: string;
                    properties: {
                        user_id: {
                            type: string;
                        };
                        role: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                permissions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            principal: {
                                type: string;
                            };
                            principal_type: {
                                type: string;
                                enum: string[];
                            };
                            resource: {
                                type: string;
                            };
                            actions: {
                                type: string;
                                items: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            conditions: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
                policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            type: {
                                type: string;
                                enum: string[];
                            };
                            rules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            enforcement: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        configuration: {
            type: string;
            properties: {
                timeout_settings: {
                    type: string;
                    properties: {
                        default_timeout: {
                            type: string;
                            minimum: number;
                        };
                        max_timeout: {
                            type: string;
                            minimum: number;
                        };
                        cleanup_timeout: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                notification_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        events: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                    required: string[];
                };
                persistence: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        storage_backend: {
                            type: string;
                            enum: string[];
                        };
                        retention_policy: {
                            type: string;
                            properties: {
                                duration: {
                                    type: string;
                                };
                                max_versions: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            context_operation: {
                                type: string;
                            };
                            context_id: {
                                $ref: string;
                            };
                            context_name: {
                                type: string;
                            };
                            lifecycle_stage: {
                                type: string;
                            };
                            shared_state_keys: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            access_level: {
                                type: string;
                            };
                            context_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        context_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        context_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        context_state_api: {
                            type: string;
                            format: string;
                        };
                        cache_metrics_api: {
                            type: string;
                            format: string;
                        };
                        sync_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                context_metrics: {
                    type: string;
                    properties: {
                        track_state_changes: {
                            type: string;
                        };
                        track_cache_performance: {
                            type: string;
                        };
                        track_sync_operations: {
                            type: string;
                        };
                        track_access_patterns: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        context_access_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        context_update_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        cache_hit_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        context_sync_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        context_state_consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_contexts_count: {
                            type: string;
                            minimum: number;
                        };
                        context_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        context_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_context_size_bytes: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_context_access_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_context_update_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_cache_hit_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_context_sync_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_context_state_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            context_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_state_change: {
                            type: string;
                        };
                        version_on_cache_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                context_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_context_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_contexts: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        caching_policy: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                cache_strategy: {
                    type: string;
                    enum: string[];
                };
                cache_levels: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            level: {
                                type: string;
                            };
                            backend: {
                                type: string;
                                enum: string[];
                            };
                            ttl_seconds: {
                                type: string;
                                minimum: number;
                            };
                            max_size_mb: {
                                type: string;
                                minimum: number;
                            };
                            eviction_policy: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                cache_warming: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategies: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        sync_configuration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                sync_strategy: {
                    type: string;
                    enum: string[];
                };
                sync_targets: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            target_id: {
                                type: string;
                            };
                            target_type: {
                                type: string;
                                enum: string[];
                            };
                            sync_frequency: {
                                type: string;
                            };
                            conflict_resolution: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                replication: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        replication_factor: {
                            type: string;
                            minimum: number;
                        };
                        consistency_level: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        error_handling: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                error_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            error_type: {
                                type: string;
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            retry_config: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                        minimum: number;
                                    };
                                    backoff_strategy: {
                                        type: string;
                                        enum: string[];
                                    };
                                    base_delay_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                circuit_breaker: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        failure_threshold: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        reset_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                recovery_strategy: {
                    type: string;
                    properties: {
                        auto_recovery: {
                            type: string;
                        };
                        backup_sources: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        rollback_enabled: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        integration_endpoints: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                webhooks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            webhook_id: {
                                $ref: string;
                            };
                            url: {
                                type: string;
                                format: string;
                            };
                            events: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            authentication: {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                        enum: string[];
                                    };
                                    credentials: {
                                        type: string;
                                    };
                                };
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                    };
                                    backoff_ms: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                api_endpoints: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            endpoint_id: {
                                type: string;
                            };
                            path: {
                                type: string;
                            };
                            method: {
                                type: string;
                                enum: string[];
                            };
                            authentication_required: {
                                type: string;
                            };
                            rate_limit: {
                                type: string;
                                properties: {
                                    requests_per_minute: {
                                        type: string;
                                    };
                                    burst_limit: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        context_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        context_details: {
            type: string;
            properties: {
                context_scope: {
                    type: string;
                    enum: string[];
                };
                persistence_level: {
                    type: string;
                    enum: string[];
                };
                sharing_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
    examples: {
        protocol_version: string;
        timestamp: string;
        context_id: string;
        name: string;
        description: string;
        status: string;
        lifecycle_stage: string;
        shared_state: {
            variables: {
                environment: string;
                region: string;
                feature_flags: {
                    new_ui: boolean;
                    beta_features: boolean;
                };
            };
            resources: {
                allocated: {
                    memory: {
                        type: string;
                        amount: number;
                        unit: string;
                        status: string;
                    };
                    cpu: {
                        type: string;
                        amount: number;
                        unit: string;
                        status: string;
                    };
                };
                requirements: {
                    storage: {
                        minimum: number;
                        optimal: number;
                        maximum: number;
                        unit: string;
                    };
                };
            };
            dependencies: {
                id: string;
                type: string;
                name: string;
                version: string;
                status: string;
            }[];
            goals: {
                id: string;
                name: string;
                priority: string;
                status: string;
                success_criteria: {
                    metric: string;
                    operator: string;
                    value: number;
                    unit: string;
                }[];
            }[];
        };
        access_control: {
            owner: {
                user_id: string;
                role: string;
            };
            permissions: {
                principal: string;
                principal_type: string;
                resource: string;
                actions: string[];
            }[];
        };
        configuration: {
            timeout_settings: {
                default_timeout: number;
                max_timeout: number;
            };
            notification_settings: {
                enabled: boolean;
                channels: string[];
                events: string[];
            };
            persistence: {
                enabled: boolean;
                storage_backend: string;
                retention_policy: {
                    duration: string;
                    max_versions: number;
                };
            };
        };
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        failure_resolver: {
            type: string;
            description: string;
            properties: {
                enabled: {
                    type: string;
                    description: string;
                };
                strategies: {
                    type: string;
                    description: string;
                    items: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                };
                retry_config: {
                    type: string;
                    description: string;
                    properties: {
                        max_attempts: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        delay_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        backoff_factor: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_delay_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                rollback_config: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        checkpoint_frequency: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_rollback_depth: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                manual_intervention_config: {
                    type: string;
                    description: string;
                    properties: {
                        timeout_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        escalation_levels: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        approval_required: {
                            type: string;
                            description: string;
                        };
                    };
                };
                notification_channels: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
                performance_thresholds: {
                    type: string;
                    description: string;
                    properties: {
                        max_execution_time_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_memory_usage_mb: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        max_cpu_usage_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                };
                diagnostic_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        supported_diagnostic_providers: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        diagnostic_endpoints: {
                            type: string;
                            properties: {
                                failure_analysis_api: {
                                    type: string;
                                    format: string;
                                };
                                pattern_detection_api: {
                                    type: string;
                                    format: string;
                                };
                                recommendation_api: {
                                    type: string;
                                    format: string;
                                };
                            };
                        };
                        request_format: {
                            type: string;
                            properties: {
                                input_schema: {
                                    type: string;
                                };
                                output_schema: {
                                    type: string;
                                };
                                timeout_ms: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                    };
                    required: string[];
                };
                vendor_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        sync_frequency_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        data_retention_days: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        sync_detailed_diagnostics: {
                            type: string;
                            description: string;
                        };
                        receive_suggestions: {
                            type: string;
                            description: string;
                        };
                        auto_apply_suggestions: {
                            type: string;
                            description: string;
                        };
                    };
                };
                proactive_prevention: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        prediction_confidence_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        auto_prevention_enabled: {
                            type: string;
                            description: string;
                        };
                        prevention_strategies: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        monitoring_interval_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                learning_integration: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            description: string;
                        };
                        supported_learning_providers: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                            description: string;
                        };
                        learning_endpoints: {
                            type: string;
                            properties: {
                                feedback_collection_api: {
                                    type: string;
                                    format: string;
                                };
                                pattern_learning_api: {
                                    type: string;
                                    format: string;
                                };
                                strategy_optimization_api: {
                                    type: string;
                                    format: string;
                                };
                            };
                        };
                        data_sharing: {
                            type: string;
                            properties: {
                                anonymization_enabled: {
                                    type: string;
                                };
                                data_retention_days: {
                                    type: string;
                                    minimum: number;
                                };
                                sharing_scope: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                    };
                    required: string[];
                };
                external_integrations: {
                    type: string;
                    description: string;
                    properties: {
                        diagnostic_systems: {
                            type: string;
                            description: string;
                        };
                        prediction_services: {
                            type: string;
                            description: string;
                        };
                        recovery_automation: {
                            type: string;
                            description: string;
                        };
                        optimization_engines: {
                            type: string;
                            description: string;
                        };
                        monitoring_platforms: {
                            type: string;
                            description: string;
                        };
                        recommendation_services: {
                            type: string;
                            description: string;
                        };
                    };
                };
            };
            required: string[];
        };
        recovery_suggestion: {
            type: string;
            description: string;
            minLength: number;
            maxLength: number;
        };
        development_issue: {
            type: string;
            description: string;
            properties: {
                id: {
                    type: string;
                    description: string;
                    pattern: string;
                    minLength: number;
                    maxLength: number;
                };
                type: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                severity: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                title: {
                    type: string;
                    description: string;
                    minLength: number;
                    maxLength: number;
                };
                file_path: {
                    type: string;
                    description: string;
                    pattern: string;
                };
                line_number: {
                    type: string;
                    description: string;
                    minimum: number;
                };
                description: {
                    type: string;
                    description: string;
                    maxLength: number;
                };
                suggested_fix: {
                    type: string;
                    description: string;
                    maxLength: number;
                };
                detected_at: {
                    $ref: string;
                    description: string;
                };
                status: {
                    type: string;
                    description: string;
                    enum: string[];
                };
                dependencies: {
                    type: string;
                    description: string;
                    items: {
                        type: string;
                    };
                };
                confidence_score: {
                    type: string;
                    description: string;
                    minimum: number;
                    maximum: number;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            $ref: string;
            description: string;
        };
        timeline: {
            type: string;
            properties: {
                start_date: {
                    $ref: string;
                };
                end_date: {
                    $ref: string;
                };
                estimated_duration: {
                    type: string;
                    properties: {
                        value: {
                            type: string;
                            minimum: number;
                        };
                        unit: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                actual_duration: {
                    type: string;
                    properties: {
                        value: {
                            type: string;
                            minimum: number;
                        };
                        unit: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
        };
        tasks: {
            type: string;
            items: {
                type: string;
                properties: {
                    task_id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                        minLength: number;
                        maxLength: number;
                    };
                    description: {
                        type: string;
                        maxLength: number;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    status: {
                        type: string;
                        enum: string[];
                    };
                    priority: {
                        $ref: string;
                    };
                    assignee: {
                        type: string;
                        properties: {
                            user_id: {
                                type: string;
                            };
                            role: {
                                type: string;
                            };
                            team: {
                                type: string;
                            };
                        };
                    };
                    estimated_effort: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    actual_effort: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                                minimum: number;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    resources_required: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                resource_type: {
                                    type: string;
                                };
                                amount: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                };
                                availability: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    acceptance_criteria: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                id: {
                                    $ref: string;
                                };
                                description: {
                                    type: string;
                                };
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                                verification_method: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                    sub_tasks: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    metadata: {
                        type: string;
                        properties: {
                            tags: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            category: {
                                type: string;
                            };
                            source: {
                                type: string;
                            };
                            complexity_score: {
                                type: string;
                                minimum: number;
                            };
                            risk_level: {
                                type: string;
                            };
                            automation_level: {
                                type: string;
                            };
                            retry_count: {
                                type: string;
                                minimum: number;
                            };
                            max_retry_count: {
                                type: string;
                                minimum: number;
                            };
                            intervention_required: {
                                type: string;
                            };
                            intervention_reason: {
                                type: string;
                            };
                            intervention_requested_at: {
                                $ref: string;
                            };
                            rollback_reason: {
                                type: string;
                            };
                            rollback_target: {
                                $ref: string;
                            };
                            skip_reason: {
                                type: string;
                            };
                            skip_dependents: {
                                type: string;
                            };
                            recovery_suggestions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                                maxItems: number;
                                uniqueItems: boolean;
                            };
                            development_issues: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                                maxItems: number;
                                uniqueItems: boolean;
                            };
                        };
                    };
                    started_at: {
                        $ref: string;
                    };
                    completed_at: {
                        $ref: string;
                    };
                    progress_percentage: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    actual_duration_minutes: {
                        type: string;
                        minimum: number;
                        description: string;
                    };
                    error_message: {
                        type: string;
                        description: string;
                    };
                    result_data: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
        };
        dependencies: {
            type: string;
            items: {
                type: string;
                properties: {
                    id: {
                        $ref: string;
                    };
                    source_task_id: {
                        $ref: string;
                    };
                    target_task_id: {
                        $ref: string;
                    };
                    dependency_type: {
                        type: string;
                        enum: string[];
                    };
                    lag: {
                        type: string;
                        properties: {
                            value: {
                                type: string;
                            };
                            unit: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                    criticality: {
                        type: string;
                        enum: string[];
                    };
                    condition: {
                        type: string;
                        description: string;
                    };
                };
                required: string[];
            };
        };
        milestones: {
            type: string;
            items: {
                type: string;
                properties: {
                    id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    target_date: {
                        $ref: string;
                    };
                    status: {
                        type: string;
                        enum: string[];
                    };
                    success_criteria: {
                        type: string;
                        items: {
                            type: string;
                            properties: {
                                metric: {
                                    type: string;
                                };
                                target_value: {
                                    type: string[];
                                };
                                actual_value: {
                                    type: string[];
                                };
                                status: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                    };
                };
                required: string[];
            };
        };
        optimization: {
            type: string;
            properties: {
                strategy: {
                    type: string;
                    enum: string[];
                };
                constraints: {
                    type: string;
                    properties: {
                        max_duration: {
                            type: string;
                            properties: {
                                value: {
                                    type: string;
                                    minimum: number;
                                };
                                unit: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                            required: string[];
                        };
                        max_cost: {
                            type: string;
                            minimum: number;
                        };
                        min_quality: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        available_resources: {
                            type: string;
                            additionalProperties: boolean;
                        };
                    };
                };
                parameters: {
                    type: string;
                    additionalProperties: boolean;
                };
            };
            required: string[];
        };
        risk_assessment: {
            type: string;
            properties: {
                overall_risk_level: {
                    type: string;
                    enum: string[];
                };
                risks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            level: {
                                type: string;
                                enum: string[];
                            };
                            category: {
                                type: string;
                                enum: string[];
                            };
                            probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            impact: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            mitigation_plan: {
                                type: string;
                            };
                            contingency_plan: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        failure_resolver: {
            $ref: string;
            description: string;
        };
        configuration: {
            type: string;
            properties: {
                auto_scheduling_enabled: {
                    type: string;
                };
                dependency_validation_enabled: {
                    type: string;
                };
                risk_monitoring_enabled: {
                    type: string;
                };
                failure_recovery_enabled: {
                    type: string;
                };
                performance_tracking_enabled: {
                    type: string;
                };
                notification_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        channels: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        events: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        task_completion: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                optimization_settings: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategy: {
                            type: string;
                            enum: string[];
                        };
                        auto_reoptimize: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                timeout_settings: {
                    type: string;
                    properties: {
                        default_task_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        plan_execution_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        dependency_resolution_timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                parallel_execution_limit: {
                    type: string;
                    minimum: number;
                };
            };
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            type: string;
            description: string;
        };
        updated_by: {
            type: string;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            plan_operation: {
                                type: string;
                            };
                            plan_id: {
                                $ref: string;
                            };
                            plan_name: {
                                type: string;
                            };
                            plan_status: {
                                type: string;
                            };
                            task_ids: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            execution_stage: {
                                type: string;
                            };
                            plan_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        plan_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        plan_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        plan_execution_api: {
                            type: string;
                            format: string;
                        };
                        task_metrics_api: {
                            type: string;
                            format: string;
                        };
                        resource_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                plan_metrics: {
                    type: string;
                    properties: {
                        track_execution_progress: {
                            type: string;
                        };
                        track_task_performance: {
                            type: string;
                        };
                        track_resource_usage: {
                            type: string;
                        };
                        track_failure_recovery: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        plan_execution_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        task_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        plan_optimization_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dependency_resolution_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        plan_execution_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_plans_count: {
                            type: string;
                            minimum: number;
                        };
                        plan_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        plan_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_plan_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    required: string[];
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_plan_execution_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_task_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_plan_optimization_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dependency_resolution_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_plan_execution_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            plan_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_task_change: {
                            type: string;
                        };
                        version_on_dependency_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                plan_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_plan_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_plans: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        caching_policy: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                cache_strategy: {
                    type: string;
                    enum: string[];
                };
                cache_levels: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            level: {
                                type: string;
                            };
                            backend: {
                                type: string;
                                enum: string[];
                            };
                            ttl_seconds: {
                                type: string;
                                minimum: number;
                            };
                            max_size_mb: {
                                type: string;
                                minimum: number;
                            };
                            eviction_policy: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                cache_warming: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        strategies: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        plan_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        plan_details: {
            type: string;
            properties: {
                planning_strategy: {
                    type: string;
                    enum: string[];
                };
                execution_mode: {
                    type: string;
                    enum: string[];
                };
                rollback_support: {
                    type: string;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        confirm_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        confirmation_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            $ref: string;
            description: string;
        };
        requester: {
            type: string;
            properties: {
                user_id: {
                    type: string;
                };
                role: {
                    type: string;
                };
                department: {
                    type: string;
                };
                request_reason: {
                    type: string;
                    maxLength: number;
                };
            };
            required: string[];
        };
        approval_workflow: {
            type: string;
            properties: {
                workflow_type: {
                    type: string;
                    enum: string[];
                };
                steps: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            step_id: {
                                $ref: string;
                            };
                            step_order: {
                                type: string;
                                minimum: number;
                            };
                            approver: {
                                type: string;
                                properties: {
                                    user_id: {
                                        type: string;
                                    };
                                    role: {
                                        type: string;
                                    };
                                    is_required: {
                                        type: string;
                                    };
                                    delegation_allowed: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            approval_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        criterion: {
                                            type: string;
                                        };
                                        required: {
                                            type: string;
                                        };
                                        weight: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                            decision: {
                                type: string;
                                properties: {
                                    outcome: {
                                        type: string;
                                        enum: string[];
                                    };
                                    comments: {
                                        type: string;
                                        maxLength: number;
                                    };
                                    conditions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    timestamp: {
                                        $ref: string;
                                    };
                                    signature: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            timeout: {
                                type: string;
                                properties: {
                                    duration: {
                                        type: string;
                                        minimum: number;
                                    };
                                    unit: {
                                        type: string;
                                        enum: string[];
                                    };
                                    action_on_timeout: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                    };
                };
                escalation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            trigger: {
                                type: string;
                                enum: string[];
                            };
                            escalate_to: {
                                type: string;
                                properties: {
                                    user_id: {
                                        type: string;
                                    };
                                    role: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                            notification_delay: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        subject: {
            type: string;
            properties: {
                title: {
                    type: string;
                    maxLength: number;
                };
                description: {
                    type: string;
                    maxLength: number;
                };
                impact_assessment: {
                    type: string;
                    properties: {
                        scope: {
                            type: string;
                            enum: string[];
                        };
                        affected_systems: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        affected_users: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        business_impact: {
                            type: string;
                            enum: string[];
                        };
                        technical_impact: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                attachments: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            file_id: {
                                type: string;
                            };
                            filename: {
                                type: string;
                            };
                            mime_type: {
                                type: string;
                            };
                            size: {
                                type: string;
                                minimum: number;
                            };
                            description: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        risk_assessment: {
            type: string;
            properties: {
                overall_risk_level: {
                    type: string;
                    enum: string[];
                };
                risk_factors: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            factor: {
                                type: string;
                            };
                            description: {
                                type: string;
                            };
                            probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            impact: {
                                type: string;
                                enum: string[];
                            };
                            mitigation: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_requirements: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            regulation: {
                                type: string;
                            };
                            requirement: {
                                type: string;
                            };
                            compliance_status: {
                                type: string;
                                enum: string[];
                            };
                            evidence: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        notification_settings: {
            type: string;
            properties: {
                notify_on_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                notification_channels: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                stakeholders: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            user_id: {
                                type: string;
                            };
                            role: {
                                type: string;
                            };
                            notification_preference: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            confirm_operation: {
                                type: string;
                            };
                            confirm_id: {
                                $ref: string;
                            };
                            confirmation_type: {
                                type: string;
                            };
                            confirm_status: {
                                type: string;
                            };
                            approval_step: {
                                type: string;
                            };
                            decision_reason: {
                                type: string;
                            };
                            approver_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            confirm_details: {
                                type: string;
                            };
                            old_value: {
                                type: string;
                            };
                            new_value: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        confirm_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        confirm_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        approval_metrics_api: {
                            type: string;
                            format: string;
                        };
                        workflow_metrics_api: {
                            type: string;
                            format: string;
                        };
                        compliance_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                approval_metrics: {
                    type: string;
                    properties: {
                        track_approval_times: {
                            type: string;
                        };
                        track_workflow_performance: {
                            type: string;
                        };
                        track_decision_patterns: {
                            type: string;
                        };
                        track_compliance_metrics: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        confirm_processing_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        approval_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        confirm_workflow_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        decision_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        confirm_compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_confirmations_count: {
                            type: string;
                            minimum: number;
                        };
                        confirm_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        confirm_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_approval_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_confirm_processing_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_approval_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_confirm_workflow_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_decision_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_confirm_compliance_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            confirm_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_workflow_change: {
                            type: string;
                        };
                        version_on_status_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                confirm_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_confirm_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_confirmations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        ai_integration_interface: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        decision_support_api: {
                            type: string;
                            format: string;
                        };
                        recommendation_api: {
                            type: string;
                            format: string;
                        };
                        risk_assessment_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                request_format: {
                    type: string;
                    properties: {
                        input_schema: {
                            type: string;
                        };
                        output_schema: {
                            type: string;
                        };
                        authentication: {
                            type: string;
                            properties: {
                                type: {
                                    type: string;
                                    enum: string[];
                                };
                                config: {
                                    type: string;
                                };
                            };
                        };
                    };
                };
                response_handling: {
                    type: string;
                    properties: {
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        retry_policy: {
                            type: string;
                            properties: {
                                max_attempts: {
                                    type: string;
                                    minimum: number;
                                };
                                backoff_strategy: {
                                    type: string;
                                    enum: string[];
                                };
                            };
                        };
                        fallback_behavior: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        decision_support_interface: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                external_decision_engines: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            engine_id: {
                                type: string;
                            };
                            engine_name: {
                                type: string;
                            };
                            engine_type: {
                                type: string;
                                enum: string[];
                            };
                            endpoint: {
                                type: string;
                                format: string;
                            };
                            priority: {
                                type: string;
                                minimum: number;
                            };
                            enabled: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                decision_criteria: {
                    type: string;
                    properties: {
                        supported_criteria: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        criteria_weights: {
                            type: string;
                            additionalProperties: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                    };
                };
                fallback_strategy: {
                    type: string;
                    properties: {
                        when_engines_unavailable: {
                            type: string;
                            enum: string[];
                        };
                        when_engines_disagree: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        confirm_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        confirm_details: {
            type: string;
            properties: {
                approval_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                timeout_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                escalation_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        trace_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        task_id: {
            $ref: string;
            description: string;
        };
        trace_type: {
            type: string;
            enum: string[];
            description: string;
        };
        severity: {
            type: string;
            enum: string[];
            description: string;
        };
        event: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
                name: {
                    type: string;
                    maxLength: number;
                };
                description: {
                    type: string;
                    maxLength: number;
                };
                category: {
                    type: string;
                    enum: string[];
                };
                source: {
                    type: string;
                    properties: {
                        component: {
                            type: string;
                        };
                        module: {
                            type: string;
                        };
                        function: {
                            type: string;
                        };
                        line_number: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                data: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
            };
            required: string[];
        };
        context_snapshot: {
            type: string;
            properties: {
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                environment: {
                    type: string;
                    properties: {
                        os: {
                            type: string;
                        };
                        platform: {
                            type: string;
                        };
                        runtime_version: {
                            type: string;
                        };
                        environment_variables: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                    };
                };
                call_stack: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            function: {
                                type: string;
                            };
                            file: {
                                type: string;
                            };
                            line: {
                                type: string;
                                minimum: number;
                            };
                            arguments: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        error_information: {
            type: string;
            properties: {
                error_code: {
                    type: string;
                };
                error_message: {
                    type: string;
                    maxLength: number;
                };
                error_type: {
                    type: string;
                    enum: string[];
                };
                stack_trace: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            file: {
                                type: string;
                            };
                            function: {
                                type: string;
                            };
                            line: {
                                type: string;
                                minimum: number;
                            };
                            column: {
                                type: string;
                                minimum: number;
                            };
                        };
                        required: string[];
                    };
                };
                recovery_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                            };
                            parameters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        decision_log: {
            type: string;
            properties: {
                decision_point: {
                    type: string;
                };
                options_considered: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            option: {
                                type: string;
                            };
                            score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            rationale: {
                                type: string;
                            };
                            risk_factors: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                selected_option: {
                    type: string;
                };
                decision_criteria: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            criterion: {
                                type: string;
                            };
                            weight: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            evaluation: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                confidence_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            required: string[];
        };
        correlations: {
            type: string;
            items: {
                type: string;
                properties: {
                    correlation_id: {
                        $ref: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    related_trace_id: {
                        $ref: string;
                    };
                    strength: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    description: {
                        type: string;
                    };
                };
                required: string[];
            };
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            trace_operation: {
                                type: string;
                            };
                            trace_id: {
                                $ref: string;
                            };
                            trace_type: {
                                type: string;
                            };
                            severity: {
                                type: string;
                            };
                            span_ids: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            trace_status: {
                                type: string;
                            };
                            trace_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        trace_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        trace_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        trace_processing_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        span_collection_rate_per_second: {
                            type: string;
                            minimum: number;
                        };
                        trace_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        distributed_tracing_coverage_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        trace_monitoring_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_traces_count: {
                            type: string;
                            minimum: number;
                        };
                        trace_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        trace_storage_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_trace_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_trace_processing_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_span_collection_rate_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                min_trace_analysis_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_distributed_tracing_coverage_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_trace_monitoring_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        tracing_api: {
                            type: string;
                            format: string;
                        };
                        alerting_api: {
                            type: string;
                            format: string;
                        };
                        dashboard_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                sampling_config: {
                    type: string;
                    properties: {
                        sampling_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        adaptive_sampling: {
                            type: string;
                        };
                        max_traces_per_second: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            trace_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_update: {
                            type: string;
                        };
                        version_on_analysis: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_traces: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        trace_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        trace_details: {
            type: string;
            properties: {
                trace_level: {
                    type: string;
                    enum: string[];
                };
                sampling_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        agent_type: {
            type: string;
            enum: string[];
            description: string;
        };
        agent_status: {
            type: string;
            enum: string[];
            description: string;
        };
        expertise_level: {
            type: string;
            enum: string[];
            description: string;
        };
        communication_style: {
            type: string;
            enum: string[];
            description: string;
        };
        conflict_resolution_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        agent: {
            type: string;
            description: string;
            properties: {
                agent_id: {
                    $ref: string;
                };
                name: {
                    type: string;
                    minLength: number;
                };
                type: {
                    $ref: string;
                };
                domain: {
                    type: string;
                    minLength: number;
                };
                status: {
                    $ref: string;
                };
                capabilities: {
                    $ref: string;
                };
                configuration: {
                    $ref: string;
                };
                performance_metrics: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        agent_capabilities: {
            type: string;
            description: string;
            properties: {
                core: {
                    type: string;
                    properties: {
                        critical_thinking: {
                            type: string;
                        };
                        scenario_validation: {
                            type: string;
                        };
                        ddsc_dialog: {
                            type: string;
                        };
                        mplp_protocols: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                specialist: {
                    type: string;
                    properties: {
                        domain: {
                            type: string;
                        };
                        expertise_level: {
                            $ref: string;
                        };
                        knowledge_areas: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        tools: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                collaboration: {
                    type: string;
                    properties: {
                        communication_style: {
                            $ref: string;
                        };
                        conflict_resolution: {
                            $ref: string;
                        };
                        decision_weight: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        trust_level: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
                learning: {
                    type: string;
                    properties: {
                        experience_accumulation: {
                            type: string;
                        };
                        pattern_recognition: {
                            type: string;
                        };
                        adaptation_mechanism: {
                            type: string;
                        };
                        performance_optimization: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        agent_configuration: {
            type: string;
            description: string;
            properties: {
                basic: {
                    type: string;
                    properties: {
                        max_concurrent_tasks: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        retry_policy: {
                            $ref: string;
                        };
                        priority_level: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                communication: {
                    type: string;
                    properties: {
                        protocols: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        message_format: {
                            type: string;
                        };
                        encryption_enabled: {
                            type: string;
                        };
                        compression_enabled: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                security: {
                    type: string;
                    properties: {
                        authentication_required: {
                            type: string;
                        };
                        authorization_level: {
                            type: string;
                        };
                        audit_logging: {
                            type: string;
                        };
                        data_encryption: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        performance_metrics: {
            type: string;
            description: string;
            properties: {
                response_time_ms: {
                    type: string;
                    minimum: number;
                };
                throughput_ops_per_sec: {
                    type: string;
                    minimum: number;
                };
                success_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                error_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                last_updated: {
                    $ref: string;
                };
            };
            additionalProperties: boolean;
        };
        retry_policy: {
            type: string;
            description: string;
            properties: {
                max_retries: {
                    type: string;
                    minimum: number;
                };
                backoff_ms: {
                    type: string;
                    minimum: number;
                };
                backoff_multiplier: {
                    type: string;
                    minimum: number;
                };
                max_backoff_ms: {
                    type: string;
                    minimum: number;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        role_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            pattern: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        display_name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        role_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        scope: {
            type: string;
            properties: {
                level: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                context_ids: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                plan_ids: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                resource_constraints: {
                    type: string;
                    properties: {
                        max_contexts: {
                            type: string;
                            minimum: number;
                        };
                        max_plans: {
                            type: string;
                            minimum: number;
                        };
                        allowed_resource_types: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
            description: string;
        };
        permissions: {
            type: string;
            items: {
                type: string;
                properties: {
                    permission_id: {
                        $ref: string;
                    };
                    resource_type: {
                        type: string;
                        enum: string[];
                    };
                    resource_id: {
                        oneOf: ({
                            $ref: string;
                            type?: undefined;
                            const?: undefined;
                        } | {
                            type: string;
                            const: string;
                            $ref?: undefined;
                        })[];
                        description: string;
                    };
                    actions: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                        minItems: number;
                    };
                    conditions: {
                        type: string;
                        properties: {
                            time_based: {
                                type: string;
                                properties: {
                                    start_time: {
                                        type: string;
                                        format: string;
                                    };
                                    end_time: {
                                        type: string;
                                        format: string;
                                    };
                                    timezone: {
                                        type: string;
                                    };
                                    days_of_week: {
                                        type: string;
                                        items: {
                                            type: string;
                                            minimum: number;
                                            maximum: number;
                                        };
                                    };
                                };
                            };
                            location_based: {
                                type: string;
                                properties: {
                                    allowed_ip_ranges: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    geo_restrictions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                            context_based: {
                                type: string;
                                properties: {
                                    required_attributes: {
                                        type: string;
                                    };
                                    forbidden_attributes: {
                                        type: string;
                                    };
                                };
                            };
                            approval_required: {
                                type: string;
                                properties: {
                                    for_actions: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                    approval_threshold: {
                                        type: string;
                                        minimum: number;
                                    };
                                    approver_roles: {
                                        type: string;
                                        items: {
                                            type: string;
                                        };
                                    };
                                };
                            };
                        };
                    };
                    grant_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    expiry: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
            };
        };
        inheritance: {
            type: string;
            properties: {
                parent_roles: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            role_id: {
                                $ref: string;
                            };
                            inheritance_type: {
                                type: string;
                                enum: string[];
                            };
                            excluded_permissions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            conditions: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                    };
                };
                child_roles: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            role_id: {
                                $ref: string;
                            };
                            delegation_level: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            can_further_delegate: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                inheritance_rules: {
                    type: string;
                    properties: {
                        merge_strategy: {
                            type: string;
                            enum: string[];
                        };
                        conflict_resolution: {
                            type: string;
                            enum: string[];
                        };
                        max_inheritance_depth: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
            };
        };
        delegation: {
            type: string;
            properties: {
                can_delegate: {
                    type: string;
                };
                delegatable_permissions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                delegation_constraints: {
                    type: string;
                    properties: {
                        max_delegation_depth: {
                            type: string;
                            minimum: number;
                        };
                        time_limit: {
                            type: string;
                            minimum: number;
                        };
                        require_approval: {
                            type: string;
                        };
                        revocable: {
                            type: string;
                        };
                    };
                };
                active_delegations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            delegation_id: {
                                $ref: string;
                            };
                            delegated_to: {
                                type: string;
                            };
                            permissions: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            status: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        attributes: {
            type: string;
            properties: {
                security_clearance: {
                    type: string;
                    enum: string[];
                };
                department: {
                    type: string;
                };
                seniority_level: {
                    type: string;
                    enum: string[];
                };
                certification_requirements: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            certification: {
                                type: string;
                            };
                            level: {
                                type: string;
                            };
                            expiry: {
                                $ref: string;
                            };
                            issuer: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                custom_attributes: {
                    type: string;
                    additionalProperties: {
                        oneOf: {
                            type: string;
                        }[];
                    };
                };
            };
        };
        validation_rules: {
            type: string;
            properties: {
                assignment_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_id: {
                                $ref: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            message: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                separation_of_duties: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            conflicting_roles: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            exception_approval_required: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        audit_settings: {
            type: string;
            properties: {
                audit_enabled: {
                    type: string;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                retention_period: {
                    type: string;
                };
                compliance_frameworks: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        agents: {
            type: string;
            description: string;
            items: {
                $ref: string;
            };
        };
        agent_management: {
            type: string;
            description: string;
            properties: {
                max_agents: {
                    type: string;
                    minimum: number;
                };
                auto_scaling: {
                    type: string;
                };
                load_balancing: {
                    type: string;
                };
                health_check_interval_ms: {
                    type: string;
                    minimum: number;
                };
                default_agent_config: {
                    $ref: string;
                };
            };
        };
        team_configuration: {
            type: string;
            description: string;
            properties: {
                max_team_size: {
                    type: string;
                    minimum: number;
                };
                collaboration_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_name: {
                                type: string;
                            };
                            rule_type: {
                                type: string;
                                enum: string[];
                            };
                            rule_config: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                decision_mechanism: {
                    type: string;
                    properties: {
                        type: {
                            type: string;
                            enum: string[];
                        };
                        threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
            };
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        role_assignment_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        permission_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        role_security_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        permission_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        role_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_roles_count: {
                            type: string;
                            minimum: number;
                        };
                        role_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        role_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_role_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_role_assignment_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_permission_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_role_security_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_permission_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_role_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        role_access_api: {
                            type: string;
                            format: string;
                        };
                        permission_metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_events_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                role_metrics: {
                    type: string;
                    properties: {
                        track_role_usage: {
                            type: string;
                        };
                        track_permission_checks: {
                            type: string;
                        };
                        track_access_patterns: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            role_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                        version_on_status_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_roles: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        role_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        role_details: {
            type: string;
            properties: {
                role_type: {
                    type: string;
                    enum: string[];
                };
                inheritance_mode: {
                    type: string;
                    enum: string[];
                };
                permission_model: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            role_operation: {
                                type: string;
                            };
                            role_id: {
                                $ref: string;
                            };
                            role_name: {
                                type: string;
                            };
                            role_type: {
                                type: string;
                            };
                            permission_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            role_status: {
                                type: string;
                            };
                            role_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        role_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        role_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        extension_id: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            pattern: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        display_name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        version: {
            $ref: string;
            description: string;
        };
        extension_type: {
            type: string;
            enum: string[];
            description: string;
        };
        status: {
            type: string;
            enum: string[];
            description: string;
        };
        compatibility: {
            type: string;
            properties: {
                mplp_version: {
                    type: string;
                    description: string;
                };
                required_modules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module: {
                                type: string;
                                enum: string[];
                            };
                            min_version: {
                                $ref: string;
                            };
                            max_version: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                dependencies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            extension_id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            version_range: {
                                type: string;
                            };
                            optional: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                conflicts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            extension_id: {
                                $ref: string;
                            };
                            name: {
                                type: string;
                            };
                            reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        configuration: {
            type: string;
            properties: {
                schema: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                current_config: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                default_config: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                validation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule: {
                                type: string;
                            };
                            message: {
                                type: string;
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        extension_points: {
            type: string;
            items: {
                type: string;
                properties: {
                    point_id: {
                        $ref: string;
                    };
                    name: {
                        type: string;
                    };
                    type: {
                        type: string;
                        enum: string[];
                    };
                    target_module: {
                        type: string;
                        enum: string[];
                    };
                    event_name: {
                        type: string;
                    };
                    execution_order: {
                        type: string;
                        minimum: number;
                    };
                    enabled: {
                        type: string;
                    };
                    handler: {
                        type: string;
                        properties: {
                            function_name: {
                                type: string;
                            };
                            parameters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_retries: {
                                        type: string;
                                        minimum: number;
                                    };
                                    retry_delay_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                    backoff_strategy: {
                                        type: string;
                                        enum: string[];
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                    conditions: {
                        type: string;
                        properties: {
                            when: {
                                type: string;
                                description: string;
                            };
                            required_permissions: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            context_filters: {
                                type: string;
                                additionalProperties: boolean;
                            };
                        };
                    };
                };
                required: string[];
            };
        };
        api_extensions: {
            type: string;
            items: {
                type: string;
                properties: {
                    endpoint_id: {
                        $ref: string;
                    };
                    path: {
                        type: string;
                        pattern: string;
                    };
                    method: {
                        type: string;
                        enum: string[];
                    };
                    description: {
                        type: string;
                    };
                    handler: {
                        type: string;
                    };
                    middleware: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    authentication_required: {
                        type: string;
                    };
                    required_permissions: {
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    rate_limit: {
                        type: string;
                        properties: {
                            requests_per_minute: {
                                type: string;
                                minimum: number;
                            };
                            burst_size: {
                                type: string;
                                minimum: number;
                            };
                        };
                    };
                    request_schema: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                    response_schema: {
                        type: string;
                        description: string;
                        additionalProperties: boolean;
                    };
                };
                required: string[];
            };
        };
        event_subscriptions: {
            type: string;
            items: {
                type: string;
                properties: {
                    subscription_id: {
                        $ref: string;
                    };
                    event_pattern: {
                        type: string;
                    };
                    source_module: {
                        type: string;
                        enum: string[];
                    };
                    handler: {
                        type: string;
                    };
                    filter_conditions: {
                        type: string;
                        additionalProperties: boolean;
                    };
                    delivery_guarantees: {
                        type: string;
                        enum: string[];
                    };
                    dead_letter_queue: {
                        type: string;
                    };
                };
                required: string[];
            };
        };
        lifecycle: {
            type: string;
            properties: {
                install_date: {
                    $ref: string;
                };
                last_update: {
                    $ref: string;
                };
                activation_count: {
                    type: string;
                    minimum: number;
                };
                error_count: {
                    type: string;
                    minimum: number;
                };
                last_error: {
                    type: string;
                    properties: {
                        timestamp: {
                            $ref: string;
                        };
                        error_type: {
                            type: string;
                        };
                        message: {
                            type: string;
                        };
                        stack_trace: {
                            type: string;
                        };
                    };
                };
                performance_metrics: {
                    type: string;
                    properties: {
                        average_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        total_executions: {
                            type: string;
                            minimum: number;
                        };
                        success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_check: {
                    type: string;
                    properties: {
                        endpoint: {
                            type: string;
                        };
                        interval_seconds: {
                            type: string;
                            minimum: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                        };
                        failure_threshold: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        security: {
            type: string;
            properties: {
                sandbox_enabled: {
                    type: string;
                };
                resource_limits: {
                    type: string;
                    properties: {
                        max_memory_mb: {
                            type: string;
                            minimum: number;
                        };
                        max_cpu_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        max_file_size_mb: {
                            type: string;
                            minimum: number;
                        };
                        network_access: {
                            type: string;
                        };
                        file_system_access: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
                code_signing: {
                    type: string;
                    properties: {
                        required: {
                            type: string;
                        };
                        signature: {
                            type: string;
                        };
                        certificate: {
                            type: string;
                        };
                        timestamp: {
                            $ref: string;
                        };
                    };
                };
                permissions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            permission: {
                                type: string;
                            };
                            justification: {
                                type: string;
                            };
                            approved: {
                                type: string;
                            };
                            approved_by: {
                                type: string;
                            };
                            approval_date: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        metadata: {
            type: string;
            properties: {
                author: {
                    type: string;
                };
                organization: {
                    type: string;
                };
                license: {
                    type: string;
                };
                homepage: {
                    type: string;
                    format: string;
                };
                repository: {
                    type: string;
                    format: string;
                };
                documentation: {
                    type: string;
                    format: string;
                };
                support_contact: {
                    type: string;
                };
                keywords: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                categories: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                screenshots: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            url: {
                                type: string;
                                format: string;
                            };
                            caption: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            extension_operation: {
                                type: string;
                            };
                            extension_id: {
                                $ref: string;
                            };
                            extension_name: {
                                type: string;
                            };
                            extension_type: {
                                type: string;
                            };
                            extension_version: {
                                type: string;
                            };
                            lifecycle_stage: {
                                type: string;
                            };
                            extension_status: {
                                type: string;
                            };
                            extension_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        extension_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        extension_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        extension_activation_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        extension_lifecycle_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_ecosystem_health_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_compatibility_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        extension_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_extensions_count: {
                            type: string;
                            minimum: number;
                        };
                        extension_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        extension_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_extension_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_extension_activation_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_extension_lifecycle_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_ecosystem_health_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_compatibility_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_extension_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        extension_lifecycle_api: {
                            type: string;
                            format: string;
                        };
                        performance_metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_events_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                extension_metrics: {
                    type: string;
                    properties: {
                        track_lifecycle_events: {
                            type: string;
                        };
                        track_performance_impact: {
                            type: string;
                        };
                        track_usage_statistics: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            extension_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_install: {
                            type: string;
                        };
                        version_on_update: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_extensions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        extension_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        extension_details: {
            type: string;
            properties: {
                extension_type: {
                    type: string;
                    enum: string[];
                };
                compatibility_mode: {
                    type: string;
                    enum: string[];
                };
                security_level: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_stage: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_status: {
            type: string;
            enum: string[];
            description: string;
        };
        execution_mode: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        protocol_version: {
            $ref: string;
            description: string;
            const: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        workflow_id: {
            $ref: string;
            description: string;
        };
        orchestrator_id: {
            $ref: string;
            description: string;
        };
        workflow_config: {
            type: string;
            description: string;
            properties: {
                name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                description: {
                    type: string;
                    maxLength: number;
                    description: string;
                };
                stages: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    uniqueItems: boolean;
                    description: string;
                };
                execution_mode: {
                    $ref: string;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                max_concurrent_executions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_attempts: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        delay_ms: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        backoff_factor: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        execution_context: {
            type: string;
            description: string;
            properties: {
                user_id: {
                    type: string;
                    description: string;
                };
                session_id: {
                    $ref: string;
                    description: string;
                };
                request_id: {
                    $ref: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
                variables: {
                    type: string;
                    description: string;
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        execution_status: {
            type: string;
            description: string;
            properties: {
                status: {
                    $ref: string;
                    description: string;
                };
                current_stage: {
                    $ref: string;
                    description: string;
                };
                completed_stages: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                stage_results: {
                    type: string;
                    description: string;
                    additionalProperties: {
                        type: string;
                        properties: {
                            status: {
                                type: string;
                                enum: string[];
                            };
                            start_time: {
                                $ref: string;
                            };
                            end_time: {
                                $ref: string;
                            };
                            duration_ms: {
                                type: string;
                                minimum: number;
                            };
                            result: {
                                type: string;
                                description: string;
                            };
                            error: {
                                type: string;
                                properties: {
                                    code: {
                                        type: string;
                                    };
                                    message: {
                                        type: string;
                                    };
                                    details: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                start_time: {
                    $ref: string;
                    description: string;
                };
                end_time: {
                    $ref: string;
                    description: string;
                };
                duration_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                retry_count: {
                    type: string;
                    minimum: number;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        module_coordination: {
            type: string;
            description: string;
            properties: {
                module_adapters: {
                    type: string;
                    description: string;
                    additionalProperties: {
                        type: string;
                        properties: {
                            adapter_type: {
                                type: string;
                                description: string;
                            };
                            config: {
                                type: string;
                                description: string;
                                additionalProperties: boolean;
                            };
                            timeout_ms: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            retry_policy: {
                                type: string;
                                properties: {
                                    max_attempts: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    delay_ms: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                };
                data_flow: {
                    type: string;
                    description: string;
                    properties: {
                        input_mappings: {
                            type: string;
                            description: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    source_stage: {
                                        $ref: string;
                                    };
                                    source_field: {
                                        type: string;
                                    };
                                    target_field: {
                                        type: string;
                                    };
                                    transformation: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                        output_mappings: {
                            type: string;
                            description: string;
                            additionalProperties: {
                                type: string;
                                properties: {
                                    target_stage: {
                                        $ref: string;
                                    };
                                    source_field: {
                                        type: string;
                                    };
                                    target_field: {
                                        type: string;
                                    };
                                    transformation: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        event_handling: {
            type: string;
            description: string;
            properties: {
                event_listeners: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_type: {
                                type: string;
                                enum: string[];
                                description: string;
                            };
                            handler: {
                                type: string;
                                description: string;
                            };
                            config: {
                                type: string;
                                description: string;
                                additionalProperties: boolean;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                    };
                    description: string;
                };
                event_routing: {
                    type: string;
                    description: string;
                    properties: {
                        default_handler: {
                            type: string;
                            description: string;
                        };
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    condition: {
                                        type: string;
                                        description: string;
                                    };
                                    handler: {
                                        type: string;
                                        description: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            system_operation: {
                                type: string;
                            };
                            workflow_id: {
                                $ref: string;
                            };
                            orchestrator_id: {
                                $ref: string;
                            };
                            core_operation: {
                                type: string;
                            };
                            core_status: {
                                type: string;
                            };
                            module_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            core_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        core_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        core_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        system_health_api: {
                            type: string;
                            format: string;
                        };
                        workflow_metrics_api: {
                            type: string;
                            format: string;
                        };
                        resource_metrics_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                system_metrics: {
                    type: string;
                    properties: {
                        track_workflow_execution: {
                            type: string;
                        };
                        track_module_coordination: {
                            type: string;
                        };
                        track_resource_usage: {
                            type: string;
                        };
                        track_system_health: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        core_orchestration_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        workflow_coordination_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        system_reliability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        module_integration_success_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        core_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        core_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        core_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_workflow_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_core_orchestration_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_workflow_coordination_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_system_reliability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_module_integration_success_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_core_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            system_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_deployment: {
                            type: string;
                        };
                        version_on_scaling: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                system_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_workflow_data: {
                            type: string;
                        };
                        index_system_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_workflows: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        core_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        core_details: {
            type: string;
            properties: {
                orchestration_mode: {
                    type: string;
                    enum: string[];
                };
                resource_allocation: {
                    type: string;
                    enum: string[];
                };
                fault_tolerance: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        entityStatus: {
            type: string;
            enum: string[];
            description: string;
        };
        decision_algorithm: {
            type: string;
            enum: string[];
            description: string;
        };
        voting_mechanism: {
            type: string;
            description: string;
            properties: {
                anonymity: {
                    type: string;
                    description: string;
                };
                transparency: {
                    type: string;
                    description: string;
                };
                revision_allowed: {
                    type: string;
                    description: string;
                };
                time_limit_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        weighting_strategy: {
            type: string;
            description: string;
            properties: {
                strategy: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                weights: {
                    type: string;
                    additionalProperties: {
                        type: string;
                        minimum: number;
                        maximum: number;
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        consensus_requirements: {
            type: string;
            description: string;
            properties: {
                threshold: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                quorum: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                unanimity_required: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        collaboration_id: {
            $ref: string;
            description: string;
        };
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        plan_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        mode: {
            type: string;
            enum: string[];
            description: string;
        };
        participants: {
            type: string;
            items: {
                type: string;
                properties: {
                    participant_id: {
                        $ref: string;
                        description: string;
                    };
                    agent_id: {
                        $ref: string;
                        description: string;
                    };
                    role_id: {
                        $ref: string;
                        description: string;
                    };
                    status: {
                        $ref: string;
                        description: string;
                    };
                    capabilities: {
                        type: string;
                        items: {
                            type: string;
                        };
                        maxItems: number;
                        description: string;
                    };
                    priority: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    weight: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    joined_at: {
                        $ref: string;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        coordination_strategy: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                coordinator_id: {
                    $ref: string;
                    description: string;
                };
                decision_making: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        status: {
            $ref: string;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            $ref: string;
            description: string;
        };
        decision_making: {
            type: string;
            description: string;
            properties: {
                enabled: {
                    type: string;
                    description: string;
                };
                algorithm: {
                    $ref: string;
                };
                voting: {
                    $ref: string;
                };
                weighting: {
                    $ref: string;
                };
                consensus: {
                    $ref: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        council_configuration: {
            type: string;
            description: string;
            properties: {
                council_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                session_management: {
                    type: string;
                    properties: {
                        max_session_duration_ms: {
                            type: string;
                            minimum: number;
                        };
                        quorum_enforcement: {
                            type: string;
                        };
                        automatic_adjournment: {
                            type: string;
                        };
                    };
                    required: string[];
                };
                voting_rules: {
                    type: string;
                    properties: {
                        multiple_rounds_allowed: {
                            type: string;
                        };
                        abstention_allowed: {
                            type: string;
                        };
                        delegation_allowed: {
                            type: string;
                        };
                    };
                    required: string[];
                };
            };
            additionalProperties: boolean;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            collaboration_operation: {
                                type: string;
                            };
                            collab_id: {
                                $ref: string;
                            };
                            collab_name: {
                                type: string;
                            };
                            collab_type: {
                                type: string;
                            };
                            participant_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            collab_status: {
                                type: string;
                            };
                            participant_id: {
                                $ref: string;
                            };
                            task_details: {
                                type: string;
                            };
                            decision_details: {
                                type: string;
                            };
                            collab_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        collab_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        collab_data_logging: {
                            type: string;
                        };
                        decision_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        collaboration_efficiency_api: {
                            type: string;
                            format: string;
                        };
                        team_performance_api: {
                            type: string;
                            format: string;
                        };
                        task_coordination_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                collaboration_metrics: {
                    type: string;
                    properties: {
                        track_collaboration_efficiency: {
                            type: string;
                        };
                        track_team_performance: {
                            type: string;
                        };
                        track_task_coordination: {
                            type: string;
                        };
                        track_decision_quality: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        collab_coordination_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        team_collaboration_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        collaboration_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        participant_engagement_satisfaction_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        collab_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_collaborations_count: {
                            type: string;
                            minimum: number;
                        };
                        collab_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        collab_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_collaboration_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_collab_coordination_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_team_collaboration_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_collaboration_quality_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_participant_engagement_satisfaction_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_collab_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            collaboration_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                collaboration_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_task_data: {
                            type: string;
                        };
                        index_decision_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_collaborations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        collab_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        collab_details: {
            type: string;
            properties: {
                collaboration_type: {
                    type: string;
                    enum: string[];
                };
                participant_limit: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                coordination_strategy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        task_assignment_data: {
            type: string;
            properties: {
                task_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                assignee_id: {
                    $ref: string;
                    description: string;
                };
                task_name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                task_description: {
                    type: string;
                    maxLength: number;
                    description: string;
                };
                task_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                assigned_at: {
                    $ref: string;
                    description: string;
                };
                due_date: {
                    $ref: string;
                    description: string;
                };
                estimated_duration_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                dependencies: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        resource_allocation_data: {
            type: string;
            properties: {
                allocation_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                resource_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                resource_name: {
                    type: string;
                    minLength: number;
                    maxLength: number;
                    description: string;
                };
                allocated_to: {
                    $ref: string;
                    description: string;
                };
                allocation_amount: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                allocation_unit: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                allocation_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                allocated_at: {
                    $ref: string;
                    description: string;
                };
                expires_at: {
                    $ref: string;
                    description: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        collaboration_effectiveness_analysis: {
            type: string;
            properties: {
                analysis_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                effectiveness_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                efficiency_metrics: {
                    type: string;
                    properties: {
                        task_completion_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        average_response_time_ms: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        resource_utilization_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        participant_engagement_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                quality_metrics: {
                    type: string;
                    properties: {
                        decision_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        communication_effectiveness: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                        conflict_resolution_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            description: string;
                        };
                    };
                    required: string[];
                };
                analyzed_at: {
                    $ref: string;
                    description: string;
                };
                recommendations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            recommendation_id: {
                                $ref: string;
                            };
                            category: {
                                type: string;
                                enum: string[];
                            };
                            priority: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                                maxLength: number;
                            };
                            expected_impact: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        collaboration_pattern_analysis: {
            type: string;
            properties: {
                analysis_id: {
                    $ref: string;
                    description: string;
                };
                time_range: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                identified_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            pattern_id: {
                                $ref: string;
                            };
                            pattern_type: {
                                type: string;
                                enum: string[];
                            };
                            pattern_name: {
                                type: string;
                                maxLength: number;
                            };
                            frequency: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                            confidence_score: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            impact_assessment: {
                                type: string;
                                properties: {
                                    positive_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    negative_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                    overall_impact: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                        required: string[];
                    };
                };
                trend_analysis: {
                    type: string;
                    properties: {
                        collaboration_frequency_trend: {
                            type: string;
                            enum: string[];
                        };
                        efficiency_trend: {
                            type: string;
                            enum: string[];
                        };
                        participant_engagement_trend: {
                            type: string;
                            enum: string[];
                        };
                    };
                    required: string[];
                };
                analyzed_at: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        governance_check_result: {
            type: string;
            properties: {
                check_id: {
                    $ref: string;
                    description: string;
                };
                collaboration_id: {
                    $ref: string;
                    description: string;
                };
                check_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                check_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                compliance_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    description: string;
                };
                violations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            violation_id: {
                                $ref: string;
                            };
                            violation_type: {
                                type: string;
                                enum: string[];
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                                maxLength: number;
                            };
                            remediation_required: {
                                type: string;
                            };
                            remediation_steps: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                checked_at: {
                    $ref: string;
                    description: string;
                };
                next_check_due: {
                    $ref: string;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        dialog_capabilities: {
            type: string;
            description: string;
            properties: {
                basic: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                            const: boolean;
                        };
                        message_history: {
                            type: string;
                        };
                        participant_management: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                intelligent_control: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        adaptive_rounds: {
                            type: string;
                        };
                        dynamic_strategy: {
                            type: string;
                        };
                        completeness_evaluation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                critical_thinking: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        analysis_depth: {
                            type: string;
                            enum: string[];
                        };
                        question_generation: {
                            type: string;
                        };
                        logic_validation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                knowledge_search: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        real_time_search: {
                            type: string;
                        };
                        knowledge_validation: {
                            type: string;
                        };
                        source_verification: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
                multimodal: {
                    type: string;
                    description: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        supported_modalities: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                        cross_modal_translation: {
                            type: string;
                        };
                    };
                    required: string[];
                    additionalProperties: boolean;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        dialog_strategy: {
            type: string;
            description: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                };
                rounds: {
                    type: string;
                    properties: {
                        min: {
                            type: string;
                            minimum: number;
                        };
                        max: {
                            type: string;
                            minimum: number;
                        };
                        target: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
                exit_criteria: {
                    type: string;
                    properties: {
                        completeness_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        user_satisfaction_threshold: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        time_limit: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
        dialog_content: {
            type: string;
            description: string;
            properties: {
                text: {
                    type: string;
                };
                multimodal: {
                    type: string;
                    properties: {
                        audio: {
                            type: string;
                        };
                        image: {
                            type: string;
                        };
                        video: {
                            type: string;
                        };
                        file: {
                            type: string;
                        };
                    };
                    additionalProperties: boolean;
                };
                type: {
                    type: string;
                    enum: string[];
                };
                priority: {
                    type: string;
                    enum: string[];
                };
            };
            required: string[];
            additionalProperties: boolean;
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        dialog_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        participants: {
            type: string;
            items: {
                type: string;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        capabilities: {
            $ref: string;
            description: string;
        };
        strategy: {
            $ref: string;
            description: string;
        };
        context: {
            type: string;
            description: string;
            properties: {
                session_id: {
                    type: string;
                };
                context_id: {
                    type: string;
                };
                knowledge_base: {
                    type: string;
                };
                previous_dialogs: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            additionalProperties: boolean;
        };
        configuration: {
            type: string;
            description: string;
            properties: {
                timeout: {
                    type: string;
                    minimum: number;
                };
                max_participants: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_retries: {
                            type: string;
                            minimum: number;
                        };
                        backoff_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    additionalProperties: boolean;
                };
                security: {
                    type: string;
                    properties: {
                        encryption: {
                            type: string;
                        };
                        authentication: {
                            type: string;
                        };
                        audit_logging: {
                            type: string;
                        };
                    };
                    additionalProperties: boolean;
                };
            };
            additionalProperties: boolean;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                type: string;
                                format: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            dialog_operation: {
                                type: string;
                            };
                            dialog_id: {
                                $ref: string;
                            };
                            dialog_name: {
                                type: string;
                            };
                            dialog_type: {
                                type: string;
                            };
                            participant_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            dialog_status: {
                                type: string;
                            };
                            content_hash: {
                                type: string;
                            };
                            dialog_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        dialog_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        dialog_data_logging: {
                            type: string;
                        };
                        content_retention_policy: {
                            type: string;
                        };
                        privacy_protection: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        dialog_quality_api: {
                            type: string;
                            format: string;
                        };
                        response_time_api: {
                            type: string;
                            format: string;
                        };
                        satisfaction_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                dialog_metrics: {
                    type: string;
                    properties: {
                        track_response_times: {
                            type: string;
                        };
                        track_dialog_quality: {
                            type: string;
                        };
                        track_user_satisfaction: {
                            type: string;
                        };
                        track_content_moderation: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        dialog_response_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        dialog_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dialog_quality_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        user_experience_satisfaction_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dialog_interaction_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_dialogs_count: {
                            type: string;
                            minimum: number;
                        };
                        dialog_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        dialog_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_dialog_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            type: string;
                            format: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_dialog_response_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_dialog_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dialog_quality_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_user_experience_satisfaction_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_dialog_interaction_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                type: string;
                                format: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            dialog_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                type: string;
                                format: string;
                            };
                            last_updated: {
                                type: string;
                                format: string;
                            };
                        };
                        required: string[];
                    };
                };
                content_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_message_content: {
                            type: string;
                        };
                        privacy_filtering: {
                            type: string;
                        };
                        sensitive_data_masking: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_dialogs: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        dialog_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        dialog_details: {
            type: string;
            properties: {
                dialog_type: {
                    type: string;
                    enum: string[];
                };
                turn_management: {
                    type: string;
                    enum: string[];
                };
                context_retention: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
    examples: ({
        dialog_id: string;
        name: string;
        participants: string[];
        capabilities: {
            basic: {
                enabled: boolean;
                message_history: boolean;
                participant_management: boolean;
            };
            intelligent_control?: undefined;
            critical_thinking?: undefined;
            knowledge_search?: undefined;
        };
        strategy?: undefined;
    } | {
        dialog_id: string;
        name: string;
        participants: string[];
        capabilities: {
            basic: {
                enabled: boolean;
                message_history: boolean;
                participant_management: boolean;
            };
            intelligent_control: {
                enabled: boolean;
                adaptive_rounds: boolean;
                dynamic_strategy: boolean;
                completeness_evaluation: boolean;
            };
            critical_thinking: {
                enabled: boolean;
                analysis_depth: string;
                question_generation: boolean;
                logic_validation: boolean;
            };
            knowledge_search: {
                enabled: boolean;
                real_time_search: boolean;
                knowledge_validation: boolean;
                source_verification: boolean;
            };
        };
        strategy: {
            type: string;
            rounds: {
                min: number;
                max: number;
                target: number;
            };
            exit_criteria: {
                completeness_threshold: number;
                user_satisfaction_threshold: number;
            };
        };
    })[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        entityStatus: {
            type: string;
            enum: string[];
            description: string;
        };
    };
    properties: {
        network_id: {
            $ref: string;
            description: string;
        };
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            $ref: string;
            description: string;
        };
        context_id: {
            $ref: string;
            description: string;
        };
        name: {
            type: string;
            minLength: number;
            maxLength: number;
            description: string;
        };
        description: {
            type: string;
            maxLength: number;
            description: string;
        };
        topology: {
            type: string;
            enum: string[];
            description: string;
        };
        nodes: {
            type: string;
            items: {
                type: string;
                properties: {
                    node_id: {
                        $ref: string;
                        description: string;
                    };
                    agent_id: {
                        $ref: string;
                        description: string;
                    };
                    node_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    status: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    capabilities: {
                        type: string;
                        items: {
                            type: string;
                            enum: string[];
                        };
                        maxItems: number;
                        description: string;
                    };
                    address: {
                        type: string;
                        properties: {
                            host: {
                                type: string;
                                description: string;
                            };
                            port: {
                                type: string;
                                minimum: number;
                                maximum: number;
                                description: string;
                            };
                            protocol: {
                                type: string;
                                enum: string[];
                                description: string;
                            };
                        };
                        required: string[];
                        additionalProperties: boolean;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            minItems: number;
            maxItems: number;
            description: string;
        };
        edges: {
            type: string;
            items: {
                type: string;
                properties: {
                    edge_id: {
                        $ref: string;
                        description: string;
                    };
                    source_node_id: {
                        $ref: string;
                        description: string;
                    };
                    target_node_id: {
                        $ref: string;
                        description: string;
                    };
                    edge_type: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    direction: {
                        type: string;
                        enum: string[];
                        description: string;
                    };
                    status: {
                        $ref: string;
                        description: string;
                    };
                    weight: {
                        type: string;
                        minimum: number;
                        maximum: number;
                        description: string;
                    };
                    metadata: {
                        type: string;
                        additionalProperties: boolean;
                        description: string;
                    };
                };
                required: string[];
                additionalProperties: boolean;
            };
            maxItems: number;
            description: string;
        };
        discovery_mechanism: {
            type: string;
            properties: {
                type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                registry_config: {
                    type: string;
                    properties: {
                        endpoint: {
                            type: string;
                            format: string;
                            description: string;
                        };
                        authentication: {
                            type: string;
                            default: boolean;
                            description: string;
                        };
                        refresh_interval: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                    };
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        routing_strategy: {
            type: string;
            properties: {
                algorithm: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                load_balancing: {
                    type: string;
                    properties: {
                        method: {
                            type: string;
                            enum: string[];
                            description: string;
                        };
                    };
                    additionalProperties: boolean;
                    description: string;
                };
            };
            required: string[];
            additionalProperties: boolean;
            description: string;
        };
        status: {
            $ref: string;
            description: string;
        };
        created_at: {
            $ref: string;
            description: string;
        };
        updated_at: {
            $ref: string;
            description: string;
        };
        created_by: {
            $ref: string;
            description: string;
        };
        metadata: {
            type: string;
            additionalProperties: boolean;
            description: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            network_operation: {
                                type: string;
                            };
                            network_id: {
                                $ref: string;
                            };
                            network_name: {
                                type: string;
                            };
                            network_type: {
                                type: string;
                            };
                            node_ids: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            network_status: {
                                type: string;
                            };
                            node_id: {
                                $ref: string;
                            };
                            connection_details: {
                                type: string;
                            };
                            network_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        network_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        network_data_logging: {
                            type: string;
                        };
                        traffic_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        network_performance_api: {
                            type: string;
                            format: string;
                        };
                        traffic_analysis_api: {
                            type: string;
                            format: string;
                        };
                        connection_status_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                network_metrics: {
                    type: string;
                    properties: {
                        track_network_performance: {
                            type: string;
                        };
                        track_traffic_flow: {
                            type: string;
                        };
                        track_connection_status: {
                            type: string;
                        };
                        track_security_events: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        network_communication_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        network_topology_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        network_reliability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        connection_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        network_management_efficiency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_connections_count: {
                            type: string;
                            minimum: number;
                        };
                        network_operations_per_second: {
                            type: string;
                            minimum: number;
                        };
                        network_memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        average_network_complexity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_network_communication_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_network_topology_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_network_reliability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_connection_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_network_management_efficiency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            network_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_topology_change: {
                            type: string;
                        };
                        version_on_node_change: {
                            type: string;
                        };
                        version_on_routing_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                network_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_topology_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_networks: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        network_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        network_details: {
            type: string;
            properties: {
                network_topology: {
                    type: string;
                    enum: string[];
                };
                protocol_type: {
                    type: string;
                    enum: string[];
                };
                security_mode: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
    additionalProperties: boolean;
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        security_level: {
            type: string;
            enum: string[];
            description: string;
        };
        authentication_method: {
            type: string;
            enum: string[];
            description: string;
        };
        encryption_algorithm: {
            type: string;
            enum: string[];
            description: string;
        };
        user_identity: {
            type: string;
            properties: {
                user_id: {
                    type: string;
                };
                username: {
                    type: string;
                };
                email: {
                    type: string;
                    format: string;
                };
                display_name: {
                    type: string;
                };
                user_type: {
                    type: string;
                    enum: string[];
                };
                organization: {
                    type: string;
                };
                department: {
                    type: string;
                };
                roles: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                groups: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                attributes: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
        };
        permission: {
            type: string;
            properties: {
                permission_id: {
                    $ref: string;
                };
                resource_type: {
                    type: string;
                    enum: string[];
                };
                resource_identifier: {
                    type: string;
                };
                actions: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                    minItems: number;
                };
                conditions: {
                    type: string;
                    properties: {
                        time_restrictions: {
                            type: string;
                            properties: {
                                start_time: {
                                    $ref: string;
                                };
                                end_time: {
                                    $ref: string;
                                };
                                allowed_hours: {
                                    type: string;
                                    items: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                                allowed_days: {
                                    type: string;
                                    items: {
                                        type: string;
                                        minimum: number;
                                        maximum: number;
                                    };
                                };
                            };
                        };
                        ip_restrictions: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        context_requirements: {
                            type: string;
                            description: string;
                        };
                    };
                };
                granted_at: {
                    $ref: string;
                };
                expires_at: {
                    $ref: string;
                };
                granted_by: {
                    type: string;
                };
            };
            required: string[];
        };
        encryption_info: {
            type: string;
            properties: {
                algorithm: {
                    $ref: string;
                };
                key_id: {
                    type: string;
                };
                key_version: {
                    type: string;
                };
                initialization_vector: {
                    type: string;
                };
                key_derivation: {
                    type: string;
                    properties: {
                        method: {
                            type: string;
                            enum: string[];
                        };
                        iterations: {
                            type: string;
                            minimum: number;
                        };
                        salt: {
                            type: string;
                        };
                    };
                };
                signature: {
                    type: string;
                };
                certificate_chain: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        audit_entry: {
            type: string;
            properties: {
                audit_id: {
                    $ref: string;
                };
                event_type: {
                    type: string;
                    enum: string[];
                };
                user_identity: {
                    $ref: string;
                };
                resource_accessed: {
                    type: string;
                };
                action_performed: {
                    type: string;
                };
                result: {
                    type: string;
                    enum: string[];
                };
                source_ip: {
                    type: string;
                };
                user_agent: {
                    type: string;
                };
                session_id: {
                    $ref: string;
                };
                request_id: {
                    $ref: string;
                };
                additional_data: {
                    type: string;
                };
                risk_score: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                timestamp: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_context: {
            type: string;
            properties: {
                context_id: {
                    $ref: string;
                };
                session_id: {
                    $ref: string;
                };
                user_identity: {
                    $ref: string;
                };
                authentication_token: {
                    type: string;
                    properties: {
                        token_type: {
                            type: string;
                            enum: string[];
                        };
                        token_value: {
                            type: string;
                        };
                        issued_at: {
                            $ref: string;
                        };
                        expires_at: {
                            $ref: string;
                        };
                        issuer: {
                            type: string;
                        };
                        audience: {
                            type: string;
                        };
                        scopes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                    required: string[];
                };
                permissions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                security_level: {
                    $ref: string;
                };
                encryption_info: {
                    $ref: string;
                };
                audit_trail: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                security_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            policy_id: {
                                type: string;
                            };
                            policy_name: {
                                type: string;
                            };
                            policy_version: {
                                type: string;
                            };
                            enforcement_level: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                threat_indicators: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            indicator_type: {
                                type: string;
                                enum: string[];
                            };
                            severity: {
                                type: string;
                                enum: string[];
                            };
                            description: {
                                type: string;
                            };
                            detected_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_event: {
            type: string;
            properties: {
                event_id: {
                    $ref: string;
                };
                event_type: {
                    type: string;
                    enum: string[];
                };
                severity: {
                    type: string;
                    enum: string[];
                };
                source_module: {
                    $ref: string;
                };
                affected_resources: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                security_context: {
                    $ref: string;
                };
                event_details: {
                    type: string;
                    description: string;
                };
                mitigation_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action_type: {
                                type: string;
                                enum: string[];
                            };
                            action_description: {
                                type: string;
                            };
                            automated: {
                                type: string;
                            };
                            executed_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                investigation_status: {
                    type: string;
                    enum: string[];
                };
                occurred_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        security_policy: {
            type: string;
            properties: {
                policy_id: {
                    $ref: string;
                };
                policy_name: {
                    type: string;
                };
                policy_version: {
                    type: string;
                };
                policy_type: {
                    type: string;
                    enum: string[];
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                policy_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_id: {
                                type: string;
                            };
                            rule_name: {
                                type: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            parameters: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                enforcement_level: {
                    type: string;
                    enum: string[];
                };
                compliance_frameworks: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                effective_date: {
                    $ref: string;
                };
                expiration_date: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
                approved_by: {
                    type: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        security_context: {
            $ref: string;
        };
        security_event: {
            $ref: string;
        };
        security_policy: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            security_operation: {
                                type: string;
                            };
                            security_level: {
                                $ref: string;
                            };
                            authentication_method: {
                                $ref: string;
                            };
                            encryption_algorithm: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_resource: {
                                type: string;
                            };
                            security_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        security_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        security_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        security_monitoring_api: {
                            type: string;
                            format: string;
                        };
                        threat_analysis_api: {
                            type: string;
                            format: string;
                        };
                        compliance_monitoring_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                security_metrics: {
                    type: string;
                    properties: {
                        track_security_monitoring: {
                            type: string;
                        };
                        track_threat_analysis: {
                            type: string;
                        };
                        track_compliance_monitoring: {
                            type: string;
                        };
                        track_access_control: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        security_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        authentication_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        authorization_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        threat_detection_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_sessions_count: {
                            type: string;
                            minimum: number;
                        };
                        security_violations_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_authentications_count: {
                            type: string;
                            minimum: number;
                        };
                        average_encryption_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_security_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_authentication_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_authorization_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_threat_detection_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_security_violations_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            security_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_policy_change: {
                            type: string;
                        };
                        version_on_permission_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                security_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_security_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_security_events: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        security_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        security_details: {
            type: string;
            properties: {
                security_level: {
                    type: string;
                    enum: string[];
                };
                encryption_algorithm: {
                    type: string;
                    enum: string[];
                };
                authentication_method: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        metric_type: {
            type: string;
            enum: string[];
            description: string;
        };
        alert_level: {
            type: string;
            enum: string[];
            description: string;
        };
        sla_status: {
            type: string;
            enum: string[];
            description: string;
        };
        performance_baseline: {
            type: string;
            properties: {
                baseline_id: {
                    $ref: string;
                };
                baseline_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                baseline_period: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        duration_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                baseline_metrics: {
                    type: string;
                    properties: {
                        response_time_p50: {
                            type: string;
                        };
                        response_time_p95: {
                            type: string;
                        };
                        response_time_p99: {
                            type: string;
                        };
                        throughput_avg: {
                            type: string;
                        };
                        throughput_peak: {
                            type: string;
                        };
                        error_rate: {
                            type: string;
                        };
                        cpu_usage_avg: {
                            type: string;
                        };
                        memory_usage_avg: {
                            type: string;
                        };
                        disk_io_avg: {
                            type: string;
                        };
                        network_io_avg: {
                            type: string;
                        };
                    };
                };
                confidence_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                sample_size: {
                    type: string;
                    minimum: number;
                };
                created_at: {
                    $ref: string;
                };
                created_by: {
                    type: string;
                };
            };
            required: string[];
        };
        sla_definition: {
            type: string;
            properties: {
                sla_id: {
                    $ref: string;
                };
                sla_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                sla_type: {
                    type: string;
                    enum: string[];
                };
                target_value: {
                    type: string;
                };
                target_unit: {
                    type: string;
                };
                measurement_period: {
                    type: string;
                    enum: string[];
                };
                calculation_method: {
                    type: string;
                    enum: string[];
                };
                violation_threshold: {
                    type: string;
                    properties: {
                        warning_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        critical_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        consecutive_violations: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                business_impact: {
                    type: string;
                    enum: string[];
                };
                penalty_clauses: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            violation_level: {
                                type: string;
                            };
                            penalty_type: {
                                type: string;
                                enum: string[];
                            };
                            penalty_amount: {
                                type: string;
                            };
                            penalty_description: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                effective_date: {
                    $ref: string;
                };
                expiration_date: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        performance_alert: {
            type: string;
            properties: {
                alert_id: {
                    $ref: string;
                };
                alert_name: {
                    type: string;
                };
                alert_type: {
                    type: string;
                    enum: string[];
                };
                alert_level: {
                    $ref: string;
                };
                module_name: {
                    $ref: string;
                };
                metric_name: {
                    type: string;
                };
                current_value: {
                    type: string;
                };
                threshold_value: {
                    type: string;
                };
                deviation_percentage: {
                    type: string;
                };
                alert_condition: {
                    type: string;
                };
                alert_description: {
                    type: string;
                };
                affected_operations: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                impact_assessment: {
                    type: string;
                    properties: {
                        user_impact: {
                            type: string;
                            enum: string[];
                        };
                        business_impact: {
                            type: string;
                            enum: string[];
                        };
                        estimated_affected_users: {
                            type: string;
                        };
                        estimated_revenue_impact: {
                            type: string;
                        };
                    };
                };
                recommended_actions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            action_type: {
                                type: string;
                                enum: string[];
                            };
                            action_description: {
                                type: string;
                            };
                            priority: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                            estimated_time_minutes: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                alert_status: {
                    type: string;
                    enum: string[];
                };
                triggered_at: {
                    $ref: string;
                };
                acknowledged_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
                acknowledged_by: {
                    type: string;
                };
                resolved_by: {
                    type: string;
                };
            };
            required: string[];
        };
        performance_report: {
            type: string;
            properties: {
                report_id: {
                    $ref: string;
                };
                report_name: {
                    type: string;
                };
                report_type: {
                    type: string;
                    enum: string[];
                };
                report_period: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
                modules_covered: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                performance_summary: {
                    type: string;
                    properties: {
                        overall_availability: {
                            type: string;
                        };
                        average_response_time: {
                            type: string;
                        };
                        peak_throughput: {
                            type: string;
                        };
                        total_requests: {
                            type: string;
                        };
                        total_errors: {
                            type: string;
                        };
                        error_rate: {
                            type: string;
                        };
                        sla_compliance_rate: {
                            type: string;
                        };
                    };
                };
                module_performance: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module_name: {
                                $ref: string;
                            };
                            availability: {
                                type: string;
                            };
                            response_time_p95: {
                                type: string;
                            };
                            throughput_avg: {
                                type: string;
                            };
                            error_rate: {
                                type: string;
                            };
                            sla_status: {
                                $ref: string;
                            };
                            key_incidents: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                sla_compliance: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            sla_name: {
                                type: string;
                            };
                            target_value: {
                                type: string;
                            };
                            actual_value: {
                                type: string;
                            };
                            compliance_percentage: {
                                type: string;
                            };
                            status: {
                                $ref: string;
                            };
                            violations_count: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                trends_analysis: {
                    type: string;
                    properties: {
                        performance_trend: {
                            type: string;
                            enum: string[];
                        };
                        trend_confidence: {
                            type: string;
                        };
                        key_observations: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        recommendations: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                generated_at: {
                    $ref: string;
                };
                generated_by: {
                    type: string;
                };
                report_format: {
                    type: string;
                    enum: string[];
                };
            };
            required: string[];
        };
        capacity_planning: {
            type: string;
            properties: {
                planning_id: {
                    $ref: string;
                };
                planning_name: {
                    type: string;
                };
                module_name: {
                    $ref: string;
                };
                current_capacity: {
                    type: string;
                    properties: {
                        max_throughput: {
                            type: string;
                        };
                        max_concurrent_users: {
                            type: string;
                        };
                        cpu_cores: {
                            type: string;
                        };
                        memory_gb: {
                            type: string;
                        };
                        storage_gb: {
                            type: string;
                        };
                        network_bandwidth_mbps: {
                            type: string;
                        };
                    };
                };
                usage_patterns: {
                    type: string;
                    properties: {
                        peak_usage_times: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        seasonal_variations: {
                            type: string;
                        };
                        growth_rate_monthly: {
                            type: string;
                        };
                        usage_distribution: {
                            type: string;
                        };
                    };
                };
                capacity_projections: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            projection_period: {
                                type: string;
                            };
                            projected_load: {
                                type: string;
                            };
                            required_capacity: {
                                type: string;
                            };
                            capacity_gap: {
                                type: string;
                            };
                            scaling_recommendations: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                scaling_strategies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            strategy_name: {
                                type: string;
                            };
                            strategy_type: {
                                type: string;
                                enum: string[];
                            };
                            trigger_conditions: {
                                type: string;
                            };
                            scaling_actions: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            estimated_cost: {
                                type: string;
                            };
                            implementation_time: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        monitoring_overhead_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        performance_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        sla_compliance_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        capacity_prediction_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        performance_optimization_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_monitors_count: {
                            type: string;
                            minimum: number;
                        };
                        alert_frequency_per_hour: {
                            type: string;
                            minimum: number;
                        };
                        false_positive_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_response_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_monitoring_overhead_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_performance_analysis_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_sla_compliance_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_capacity_prediction_accuracy_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_false_positive_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        performance_baseline: {
            $ref: string;
        };
        sla_definition: {
            $ref: string;
        };
        performance_alert: {
            $ref: string;
        };
        performance_report: {
            $ref: string;
        };
        capacity_planning: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            performance_operation: {
                                type: string;
                            };
                            metric_name: {
                                type: string;
                            };
                            metric_value: {
                                type: string;
                            };
                            alert_level: {
                                $ref: string;
                            };
                            sla_status: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            performance_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        performance_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        performance_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        performance_monitoring_api: {
                            type: string;
                            format: string;
                        };
                        performance_analysis_api: {
                            type: string;
                            format: string;
                        };
                        sla_monitoring_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                performance_metrics: {
                    type: string;
                    properties: {
                        track_performance_monitoring: {
                            type: string;
                        };
                        track_performance_analysis: {
                            type: string;
                        };
                        track_sla_monitoring: {
                            type: string;
                        };
                        track_capacity_planning: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            performance_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_baseline_change: {
                            type: string;
                        };
                        version_on_sla_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                performance_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_performance_data: {
                            type: string;
                        };
                        index_enterprise_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_metrics: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        performance_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        performance_details: {
            type: string;
            properties: {
                collection_strategy: {
                    type: string;
                    enum: string[];
                };
                aggregation_level: {
                    type: string;
                    enum: string[];
                };
                retention_policy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        event_type: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        delivery_mode: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        routing_strategy: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        event_message: {
            type: string;
            properties: {
                event_id: {
                    $ref: string;
                };
                event_type: {
                    $ref: string;
                };
                event_name: {
                    type: string;
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                routing_key: {
                    type: string;
                    description: string;
                };
                headers: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                delivery_mode: {
                    $ref: string;
                };
                ttl_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                correlation_id: {
                    $ref: string;
                    description: string;
                };
                reply_to: {
                    type: string;
                    description: string;
                };
                trace_context: {
                    type: string;
                    properties: {
                        trace_id: {
                            $ref: string;
                        };
                        span_id: {
                            $ref: string;
                        };
                        parent_span_id: {
                            $ref: string;
                        };
                    };
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                expires_at: {
                    $ref: string;
                };
                event_bus_details: {
                    type: string;
                    properties: {
                        bus_topology: {
                            type: string;
                            enum: string[];
                        };
                        message_ordering: {
                            type: string;
                            enum: string[];
                        };
                        delivery_guarantee: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        event_subscription: {
            type: string;
            properties: {
                subscription_id: {
                    $ref: string;
                };
                subscriber_module: {
                    $ref: string;
                };
                event_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_type: {
                                $ref: string;
                            };
                            event_name_pattern: {
                                type: string;
                                description: string;
                            };
                            source_modules: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                                description: string;
                            };
                            routing_key_pattern: {
                                type: string;
                                description: string;
                            };
                            filter_conditions: {
                                type: string;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                    minItems: number;
                };
                delivery_options: {
                    type: string;
                    properties: {
                        max_retry_count: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        retry_delay_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        dead_letter_enabled: {
                            type: string;
                            default: boolean;
                        };
                        batch_size: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        batch_timeout_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                active: {
                    type: string;
                    default: boolean;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        event_delivery_receipt: {
            type: string;
            properties: {
                receipt_id: {
                    $ref: string;
                };
                event_id: {
                    $ref: string;
                };
                subscription_id: {
                    $ref: string;
                };
                delivery_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                delivery_attempt: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                processing_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                delivered_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        event_bus_metrics: {
            type: string;
            properties: {
                metric_id: {
                    $ref: string;
                };
                time_window_start: {
                    $ref: string;
                };
                time_window_end: {
                    $ref: string;
                };
                throughput_metrics: {
                    type: string;
                    properties: {
                        events_published: {
                            type: string;
                        };
                        events_delivered: {
                            type: string;
                        };
                        events_failed: {
                            type: string;
                        };
                        average_latency_ms: {
                            type: string;
                        };
                        p95_latency_ms: {
                            type: string;
                        };
                        p99_latency_ms: {
                            type: string;
                        };
                    };
                };
                resource_metrics: {
                    type: string;
                    properties: {
                        memory_usage_mb: {
                            type: string;
                        };
                        cpu_usage_percent: {
                            type: string;
                        };
                        network_io_mb: {
                            type: string;
                        };
                        queue_depth: {
                            type: string;
                        };
                    };
                };
                error_metrics: {
                    type: string;
                    properties: {
                        error_rate: {
                            type: string;
                        };
                        timeout_rate: {
                            type: string;
                        };
                        dead_letter_rate: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        event_message: {
            $ref: string;
        };
        event_subscription: {
            $ref: string;
        };
        event_delivery_receipt: {
            $ref: string;
        };
        event_bus_metrics: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            event_bus_operation: {
                                type: string;
                            };
                            message_id: {
                                $ref: string;
                            };
                            topic_name: {
                                type: string;
                            };
                            subscriber_id: {
                                $ref: string;
                            };
                            delivery_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        event_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        message_content_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        event_throughput_api: {
                            type: string;
                            format: string;
                        };
                        message_latency_api: {
                            type: string;
                            format: string;
                        };
                        queue_status_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                event_bus_metrics: {
                    type: string;
                    properties: {
                        track_event_throughput: {
                            type: string;
                        };
                        track_message_latency: {
                            type: string;
                        };
                        track_queue_status: {
                            type: string;
                        };
                        track_subscription_health: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        event_throughput_per_second: {
                            type: string;
                            minimum: number;
                        };
                        message_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        queue_depth_count: {
                            type: string;
                            minimum: number;
                        };
                        delivery_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        subscription_health_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_subscribers_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_deliveries_count: {
                            type: string;
                            minimum: number;
                        };
                        dead_letter_queue_size: {
                            type: string;
                            minimum: number;
                        };
                        average_processing_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                min_throughput_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                max_message_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_queue_depth_count: {
                                    type: string;
                                    minimum: number;
                                };
                                min_delivery_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_dead_letter_queue_size: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            event_bus_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_topic_change: {
                            type: string;
                        };
                        version_on_subscription_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                event_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_message_content: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_events: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        event_bus_details: {
            type: string;
            properties: {
                bus_topology: {
                    type: string;
                    enum: string[];
                };
                message_ordering: {
                    type: string;
                    enum: string[];
                };
                delivery_guarantee: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_bus_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        error_code: {
            type: string;
            pattern: string;
            description: string;
        };
        error_category: {
            type: string;
            enum: string[];
            description: string;
        };
        error_severity: {
            type: string;
            enum: string[];
            description: string;
        };
        recovery_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        stack_frame: {
            type: string;
            properties: {
                module: {
                    $ref: string;
                };
                function_name: {
                    type: string;
                };
                file_path: {
                    type: string;
                };
                line_number: {
                    type: string;
                    minimum: number;
                };
                column_number: {
                    type: string;
                    minimum: number;
                };
                source_code: {
                    type: string;
                };
                error_handling_operation: {
                    type: string;
                    enum: string[];
                };
                error_handling_details: {
                    type: string;
                    properties: {
                        error_category: {
                            type: string;
                        };
                        recovery_strategy: {
                            type: string;
                        };
                        escalation_level: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        error_context: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                session_id: {
                    $ref: string;
                };
                user_id: {
                    type: string;
                };
                operation: {
                    type: string;
                };
                input_parameters: {
                    type: string;
                };
                environment: {
                    type: string;
                    enum: string[];
                };
                system_state: {
                    type: string;
                };
                correlation_data: {
                    type: string;
                };
            };
        };
        error_info: {
            type: string;
            properties: {
                error_id: {
                    $ref: string;
                };
                error_code: {
                    $ref: string;
                };
                error_category: {
                    $ref: string;
                };
                error_severity: {
                    $ref: string;
                };
                error_message: {
                    type: string;
                    description: string;
                };
                technical_message: {
                    type: string;
                    description: string;
                };
                error_details: {
                    type: string;
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                source_function: {
                    type: string;
                };
                stack_trace: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                inner_errors: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                context: {
                    $ref: string;
                };
                recovery_suggestions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            strategy: {
                                $ref: string;
                            };
                            description: {
                                type: string;
                            };
                            automated: {
                                type: string;
                            };
                            success_probability: {
                                type: string;
                                minimum: number;
                                maximum: number;
                            };
                        };
                        required: string[];
                    };
                };
                occurred_at: {
                    $ref: string;
                };
                resolved_at: {
                    $ref: string;
                };
                resolution_notes: {
                    type: string;
                };
            };
            required: string[];
        };
        error_propagation: {
            type: string;
            properties: {
                propagation_id: {
                    $ref: string;
                };
                original_error: {
                    $ref: string;
                };
                propagation_chain: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            module: {
                                $ref: string;
                            };
                            function: {
                                type: string;
                            };
                            transformation: {
                                type: string;
                                enum: string[];
                            };
                            added_context: {
                                type: string;
                            };
                            timestamp: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                final_error: {
                    $ref: string;
                };
                propagation_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            rule_name: {
                                type: string;
                            };
                            condition: {
                                type: string;
                            };
                            action: {
                                type: string;
                                enum: string[];
                            };
                            transformation_template: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        error_recovery: {
            type: string;
            properties: {
                recovery_id: {
                    $ref: string;
                };
                error_id: {
                    $ref: string;
                };
                recovery_strategy: {
                    $ref: string;
                };
                recovery_attempts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            attempt_number: {
                                type: string;
                                minimum: number;
                            };
                            strategy_used: {
                                $ref: string;
                            };
                            attempt_timestamp: {
                                $ref: string;
                            };
                            success: {
                                type: string;
                            };
                            duration_ms: {
                                type: string;
                                minimum: number;
                            };
                            result_data: {
                                type: string;
                            };
                            failure_reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                final_outcome: {
                    type: string;
                    enum: string[];
                };
                recovery_metadata: {
                    type: string;
                    properties: {
                        total_attempts: {
                            type: string;
                        };
                        total_duration_ms: {
                            type: string;
                        };
                        resources_consumed: {
                            type: string;
                        };
                        side_effects: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        error_monitoring: {
            type: string;
            properties: {
                monitoring_id: {
                    $ref: string;
                };
                time_window: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        duration_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                    required: string[];
                };
                error_statistics: {
                    type: string;
                    properties: {
                        total_errors: {
                            type: string;
                            minimum: number;
                        };
                        errors_by_category: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        errors_by_severity: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        errors_by_module: {
                            type: string;
                            additionalProperties: {
                                type: string;
                            };
                        };
                        error_rate: {
                            type: string;
                            minimum: number;
                            description: string;
                        };
                        recovery_success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                trending_data: {
                    type: string;
                    properties: {
                        error_trend: {
                            type: string;
                            enum: string[];
                        };
                        trend_confidence: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        predicted_next_hour: {
                            type: string;
                        };
                        anomaly_detected: {
                            type: string;
                        };
                        anomaly_description: {
                            type: string;
                        };
                    };
                };
                alert_thresholds: {
                    type: string;
                    properties: {
                        error_rate_threshold: {
                            type: string;
                        };
                        critical_error_threshold: {
                            type: string;
                        };
                        recovery_failure_threshold: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        error_notification: {
            type: string;
            properties: {
                notification_id: {
                    $ref: string;
                };
                error_id: {
                    $ref: string;
                };
                notification_type: {
                    type: string;
                    enum: string[];
                };
                recipients: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            recipient_type: {
                                type: string;
                                enum: string[];
                            };
                            recipient_id: {
                                type: string;
                            };
                            notification_method: {
                                type: string;
                                enum: string[];
                            };
                            priority: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                notification_content: {
                    type: string;
                    properties: {
                        subject: {
                            type: string;
                        };
                        summary: {
                            type: string;
                        };
                        detailed_message: {
                            type: string;
                        };
                        action_items: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        attachments: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    name: {
                                        type: string;
                                    };
                                    type: {
                                        type: string;
                                    };
                                    content: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                delivery_status: {
                    type: string;
                    properties: {
                        sent_at: {
                            $ref: string;
                        };
                        delivery_attempts: {
                            type: string;
                        };
                        successful_deliveries: {
                            type: string;
                        };
                        failed_deliveries: {
                            type: string;
                        };
                        delivery_errors: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        error_info: {
            $ref: string;
        };
        error_propagation: {
            $ref: string;
        };
        error_recovery: {
            $ref: string;
        };
        error_monitoring: {
            $ref: string;
        };
        error_notification: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            error_operation: {
                                type: string;
                            };
                            error_code: {
                                $ref: string;
                            };
                            error_category: {
                                $ref: string;
                            };
                            error_severity: {
                                $ref: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            recovery_strategy: {
                                $ref: string;
                            };
                            error_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        error_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        error_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        error_handling_api: {
                            type: string;
                            format: string;
                        };
                        exception_analysis_api: {
                            type: string;
                            format: string;
                        };
                        system_stability_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                error_metrics: {
                    type: string;
                    properties: {
                        track_error_handling: {
                            type: string;
                        };
                        track_exception_analysis: {
                            type: string;
                        };
                        track_system_stability: {
                            type: string;
                        };
                        track_recovery_success: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        error_handling_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        error_frequency_per_hour: {
                            type: string;
                            minimum: number;
                        };
                        recovery_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        system_stability_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        exception_analysis_accuracy_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_errors_count: {
                            type: string;
                            minimum: number;
                        };
                        critical_errors_count: {
                            type: string;
                            minimum: number;
                        };
                        escalation_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_recovery_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_error_handling_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                max_error_frequency_per_hour: {
                                    type: string;
                                    minimum: number;
                                };
                                min_recovery_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_system_stability_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_critical_errors_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            error_handling_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                        version_on_pattern_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                error_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_error_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_errors: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        error_handling_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        error_handling_details: {
            type: string;
            properties: {
                error_category: {
                    type: string;
                };
                recovery_strategy: {
                    type: string;
                };
                escalation_level: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_type: {
            type: string;
            enum: string[];
            description: string;
        };
        priority: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        response_status: {
            type: string;
            enum: string[];
            description: string;
        };
        error_info: {
            type: string;
            properties: {
                error_code: {
                    type: string;
                    pattern: string;
                    description: string;
                };
                error_message: {
                    type: string;
                    description: string;
                };
                error_details: {
                    type: string;
                    description: string;
                };
                stack_trace: {
                    type: string;
                    items: {
                        type: string;
                    };
                    description: string;
                };
            };
            required: string[];
        };
        coordination_request: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                coordination_type: {
                    $ref: string;
                };
                operation: {
                    type: string;
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                retry_count: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                correlation_id: {
                    $ref: string;
                    description: string;
                };
                context: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        coordination_response: {
            type: string;
            properties: {
                request_id: {
                    $ref: string;
                };
                response_id: {
                    $ref: string;
                };
                status: {
                    $ref: string;
                };
                result: {
                    type: string;
                    description: string;
                };
                error: {
                    $ref: string;
                };
                execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        coordination_notification: {
            type: string;
            properties: {
                notification_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                event_type: {
                    type: string;
                    description: string;
                };
                payload: {
                    type: string;
                    description: string;
                };
                priority: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        coordination_request: {
            $ref: string;
        };
        coordination_response: {
            $ref: string;
        };
        coordination_notification: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            coordination_operation: {
                                type: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_module: {
                                $ref: string;
                            };
                            coordination_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        coordination_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        synchronization_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        coordination_efficiency_api: {
                            type: string;
                            format: string;
                        };
                        synchronization_performance_api: {
                            type: string;
                            format: string;
                        };
                        conflict_resolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                coordination_metrics: {
                    type: string;
                    properties: {
                        track_coordination_efficiency: {
                            type: string;
                        };
                        track_synchronization_performance: {
                            type: string;
                        };
                        track_conflict_resolution: {
                            type: string;
                        };
                        track_state_consistency: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        coordination_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        synchronization_efficiency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        conflict_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        state_consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        coordination_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_coordinations_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_coordinations_count: {
                            type: string;
                            minimum: number;
                        };
                        lock_contention_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_sync_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_coordination_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_synchronization_efficiency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_conflict_resolution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_state_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_coordination_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            coordination_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_module_change: {
                            type: string;
                        };
                        version_on_strategy_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                coordination_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_coordination_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_coordinations: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        coordination_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_details: {
            type: string;
            properties: {
                coordination_pattern: {
                    type: string;
                    enum: string[];
                };
                consensus_algorithm: {
                    type: string;
                    enum: string[];
                };
                conflict_resolution: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        execution_mode: {
            type: string;
            enum: string[];
            description: string;
        };
        workflow_status: {
            type: string;
            enum: string[];
            description: string;
        };
        coordination_step: {
            type: string;
            properties: {
                step_id: {
                    $ref: string;
                };
                step_name: {
                    type: string;
                    description: string;
                };
                target_module: {
                    $ref: string;
                };
                operation: {
                    type: string;
                    description: string;
                };
                input_data: {
                    type: string;
                    description: string;
                };
                dependencies: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                retry_policy: {
                    type: string;
                    properties: {
                        max_retries: {
                            type: string;
                            minimum: number;
                            maximum: number;
                            default: number;
                        };
                        retry_delay_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        backoff_multiplier: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                orchestration_details: {
                    type: string;
                    properties: {
                        orchestration_pattern: {
                            type: string;
                            enum: string[];
                        };
                        resource_allocation: {
                            type: string;
                            enum: string[];
                        };
                        failure_handling: {
                            type: string;
                            enum: string[];
                        };
                    };
                };
            };
            required: string[];
        };
        coordination_plan: {
            type: string;
            properties: {
                plan_id: {
                    $ref: string;
                };
                plan_name: {
                    type: string;
                    description: string;
                };
                steps: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                execution_mode: {
                    $ref: string;
                };
                global_timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                rollback_strategy: {
                    type: string;
                    enum: string[];
                    default: string;
                    description: string;
                };
            };
            required: string[];
        };
        performance_requirements: {
            type: string;
            properties: {
                max_execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                max_memory_mb: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                min_success_rate: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                max_concurrent_steps: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
            };
        };
        orchestration_request: {
            type: string;
            properties: {
                workflow_id: {
                    $ref: string;
                };
                workflow_name: {
                    type: string;
                    description: string;
                };
                coordination_plan: {
                    $ref: string;
                };
                global_context: {
                    type: string;
                    description: string;
                };
                performance_requirements: {
                    $ref: string;
                };
                priority: {
                    type: string;
                    enum: string[];
                    default: string;
                };
                created_by: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        orchestration_response: {
            type: string;
            properties: {
                workflow_id: {
                    $ref: string;
                };
                execution_id: {
                    $ref: string;
                };
                status: {
                    $ref: string;
                };
                progress: {
                    type: string;
                    properties: {
                        completed_steps: {
                            type: string;
                            minimum: number;
                        };
                        total_steps: {
                            type: string;
                            minimum: number;
                        };
                        current_step: {
                            $ref: string;
                        };
                        completion_percentage: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                    required: string[];
                };
                results: {
                    type: string;
                    description: string;
                };
                execution_metrics: {
                    type: string;
                    properties: {
                        start_time: {
                            $ref: string;
                        };
                        end_time: {
                            $ref: string;
                        };
                        total_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        memory_usage_mb: {
                            type: string;
                            minimum: number;
                        };
                        success_rate: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                    };
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        failed_step: {
                            $ref: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        orchestration_request: {
            $ref: string;
        };
        orchestration_response: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            orchestration_operation: {
                                type: string;
                            };
                            workflow_id: {
                                $ref: string;
                            };
                            step_id: {
                                $ref: string;
                            };
                            execution_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        orchestration_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        workflow_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        workflow_execution_api: {
                            type: string;
                            format: string;
                        };
                        resource_utilization_api: {
                            type: string;
                            format: string;
                        };
                        orchestration_efficiency_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                orchestration_metrics: {
                    type: string;
                    properties: {
                        track_workflow_execution: {
                            type: string;
                        };
                        track_resource_utilization: {
                            type: string;
                        };
                        track_orchestration_efficiency: {
                            type: string;
                        };
                        track_dependency_resolution: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        workflow_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        orchestration_efficiency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        resource_utilization_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        step_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        dependency_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        active_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_workflows_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_step_execution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_workflow_execution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_orchestration_efficiency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_resource_utilization_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_step_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_rollback_frequency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            orchestration_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_workflow_change: {
                            type: string;
                        };
                        version_on_plan_change: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                orchestration_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_workflow_data: {
                            type: string;
                        };
                        index_execution_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_workflows: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        orchestration_details: {
            type: string;
            properties: {
                orchestration_pattern: {
                    type: string;
                    enum: string[];
                };
                resource_allocation: {
                    type: string;
                    enum: string[];
                };
                failure_handling: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        orchestration_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        sync_strategy: {
            type: string;
            enum: string[];
            description: string;
        };
        consistency_level: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        conflict_resolution: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        state_snapshot: {
            type: string;
            properties: {
                snapshot_id: {
                    $ref: string;
                };
                module: {
                    $ref: string;
                };
                version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                state_data: {
                    type: string;
                    description: string;
                };
                checksum: {
                    type: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    properties: {
                        size_bytes: {
                            type: string;
                        };
                        compression: {
                            type: string;
                        };
                        encoding: {
                            type: string;
                        };
                    };
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_delta: {
            type: string;
            properties: {
                delta_id: {
                    $ref: string;
                };
                base_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                target_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                operations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            operation_type: {
                                type: string;
                                enum: string[];
                            };
                            path: {
                                type: string;
                                description: string;
                            };
                            old_value: {
                                description: string;
                            };
                            new_value: {
                                description: string;
                            };
                            timestamp: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                checksum: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_request: {
            type: string;
            properties: {
                sync_id: {
                    $ref: string;
                };
                source_module: {
                    $ref: string;
                };
                target_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                sync_strategy: {
                    $ref: string;
                };
                consistency_level: {
                    $ref: string;
                };
                sync_scope: {
                    type: string;
                    properties: {
                        include_paths: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        exclude_paths: {
                            type: string;
                            items: {
                                type: string;
                            };
                            description: string;
                        };
                        filter_conditions: {
                            type: string;
                            description: string;
                        };
                    };
                };
                sync_options: {
                    type: string;
                    properties: {
                        use_delta: {
                            type: string;
                            default: boolean;
                            description: string;
                        };
                        compression_enabled: {
                            type: string;
                            default: boolean;
                        };
                        batch_size: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        timeout_ms: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                        retry_count: {
                            type: string;
                            minimum: number;
                            default: number;
                        };
                    };
                };
                state_snapshot: {
                    $ref: string;
                };
                state_delta: {
                    $ref: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_response: {
            type: string;
            properties: {
                sync_id: {
                    $ref: string;
                };
                response_id: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                sync_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                applied_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                conflicts: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            path: {
                                type: string;
                            };
                            conflict_type: {
                                type: string;
                                enum: string[];
                            };
                            local_value: {
                                description: string;
                            };
                            remote_value: {
                                description: string;
                            };
                            resolution: {
                                $ref: string;
                            };
                            resolved_value: {
                                description: string;
                            };
                        };
                        required: string[];
                    };
                };
                sync_metrics: {
                    type: string;
                    properties: {
                        records_processed: {
                            type: string;
                        };
                        records_applied: {
                            type: string;
                        };
                        records_skipped: {
                            type: string;
                        };
                        processing_time_ms: {
                            type: string;
                        };
                        data_size_bytes: {
                            type: string;
                        };
                    };
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                next_sync_version: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        state_sync_subscription: {
            type: string;
            properties: {
                subscription_id: {
                    $ref: string;
                };
                subscriber_module: {
                    $ref: string;
                };
                source_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                sync_patterns: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            path_pattern: {
                                type: string;
                                description: string;
                            };
                            sync_strategy: {
                                $ref: string;
                            };
                            sync_frequency_ms: {
                                type: string;
                                minimum: number;
                                description: string;
                            };
                        };
                        required: string[];
                    };
                };
                active: {
                    type: string;
                    default: boolean;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        state_sync_request: {
            $ref: string;
        };
        state_sync_response: {
            $ref: string;
        };
        state_sync_subscription: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            state_sync_operation: {
                                type: string;
                            };
                            source_module: {
                                $ref: string;
                            };
                            target_module: {
                                $ref: string;
                            };
                            sync_details: {
                                type: string;
                            };
                            conflict_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        state_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        state_change_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        sync_performance_api: {
                            type: string;
                            format: string;
                        };
                        consistency_analysis_api: {
                            type: string;
                            format: string;
                        };
                        conflict_resolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                state_sync_metrics: {
                    type: string;
                    properties: {
                        track_sync_performance: {
                            type: string;
                        };
                        track_consistency_analysis: {
                            type: string;
                        };
                        track_conflict_resolution: {
                            type: string;
                        };
                        track_state_integrity: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        sync_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        consistency_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        conflict_resolution_time_ms: {
                            type: string;
                            minimum: number;
                        };
                        sync_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        state_integrity_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_syncs_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_syncs_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_sync_size_bytes: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_sync_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_consistency_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_conflict_resolution_time_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_sync_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_state_integrity_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            state_sync_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_pattern_change: {
                            type: string;
                        };
                        version_on_subscription_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                state_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_state_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_syncs: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        state_sync_details: {
            type: string;
            properties: {
                sync_strategy: {
                    type: string;
                    enum: string[];
                };
                conflict_resolution: {
                    type: string;
                    enum: string[];
                };
                consistency_level: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        state_sync_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        module_type: {
            type: string;
            enum: string[];
            description: string;
        };
        isolation_level: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        transaction_state: {
            type: string;
            enum: string[];
            description: string;
        };
        rollback_strategy: {
            type: string;
            enum: string[];
            default: string;
            description: string;
        };
        participant_info: {
            type: string;
            properties: {
                module: {
                    $ref: string;
                };
                participant_id: {
                    $ref: string;
                };
                resource_locks: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            resource_id: {
                                type: string;
                            };
                            lock_type: {
                                type: string;
                                enum: string[];
                            };
                            acquired_at: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                state: {
                    $ref: string;
                };
                last_heartbeat: {
                    $ref: string;
                };
                compensation_data: {
                    type: string;
                    description: string;
                };
            };
            required: string[];
        };
        transaction_context: {
            type: string;
            properties: {
                transaction_id: {
                    $ref: string;
                };
                parent_transaction_id: {
                    $ref: string;
                    description: string;
                };
                isolation_level: {
                    $ref: string;
                };
                participating_modules: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                    description: string;
                };
                participants: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                transaction_state: {
                    $ref: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                    description: string;
                };
                rollback_strategy: {
                    $ref: string;
                };
                coordinator_module: {
                    $ref: string;
                    description: string;
                };
                metadata: {
                    type: string;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
                updated_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        transaction_operation: {
            type: string;
            properties: {
                operation_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                operation_type: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                source_module: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                operation_data: {
                    type: string;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                    description: string;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        transaction_result: {
            type: string;
            properties: {
                operation_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                result_status: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                result_data: {
                    type: string;
                    description: string;
                };
                error_info: {
                    type: string;
                    properties: {
                        error_code: {
                            type: string;
                            pattern: string;
                        };
                        error_message: {
                            type: string;
                        };
                        error_details: {
                            type: string;
                        };
                    };
                };
                execution_time_ms: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                resource_usage: {
                    type: string;
                    properties: {
                        memory_mb: {
                            type: string;
                        };
                        cpu_time_ms: {
                            type: string;
                        };
                        io_operations: {
                            type: string;
                        };
                    };
                };
                completed_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
        compensation_action: {
            type: string;
            properties: {
                action_id: {
                    $ref: string;
                };
                transaction_id: {
                    $ref: string;
                };
                target_module: {
                    $ref: string;
                };
                compensation_operation: {
                    type: string;
                    description: string;
                };
                compensation_data: {
                    type: string;
                    description: string;
                };
                execution_order: {
                    type: string;
                    minimum: number;
                    description: string;
                };
                timeout_ms: {
                    type: string;
                    minimum: number;
                    default: number;
                };
                created_at: {
                    $ref: string;
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        transaction_context: {
            $ref: string;
        };
        transaction_operation: {
            $ref: string;
        };
        transaction_result: {
            $ref: string;
        };
        compensation_action: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            transaction_operation: {
                                type: string;
                            };
                            transaction_id: {
                                $ref: string;
                            };
                            participant_modules: {
                                type: string;
                                items: {
                                    $ref: string;
                                };
                            };
                            isolation_level: {
                                $ref: string;
                            };
                            transaction_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        transaction_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        transaction_data_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        transaction_performance_api: {
                            type: string;
                            format: string;
                        };
                        deadlock_detection_api: {
                            type: string;
                            format: string;
                        };
                        acid_compliance_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                transaction_metrics: {
                    type: string;
                    properties: {
                        track_transaction_performance: {
                            type: string;
                        };
                        track_deadlock_detection: {
                            type: string;
                        };
                        track_acid_compliance: {
                            type: string;
                        };
                        track_lock_contention: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        transaction_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        transaction_throughput_per_second: {
                            type: string;
                            minimum: number;
                        };
                        deadlock_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        acid_compliance_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        lock_contention_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_transactions_count: {
                            type: string;
                            minimum: number;
                        };
                        failed_transactions_count: {
                            type: string;
                            minimum: number;
                        };
                        rollback_frequency_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        average_lock_wait_time_ms: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_transaction_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_transaction_throughput_per_second: {
                                    type: string;
                                    minimum: number;
                                };
                                max_deadlock_frequency_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_acid_compliance_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_lock_contention_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            transaction_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_config_change: {
                            type: string;
                        };
                        version_on_isolation_change: {
                            type: string;
                        };
                        version_on_participant_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                transaction_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_transaction_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_transactions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        transaction_details: {
            type: string;
            properties: {
                isolation_level: {
                    type: string;
                    enum: string[];
                };
                timeout_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                rollback_strategy: {
                    type: string;
                    enum: string[];
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    oneOf: {
        required: string[];
    }[];
} | {
    $schema: string;
    $id: string;
    title: string;
    description: string;
    type: string;
    $defs: {
        uuid: {
            type: string;
            pattern: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        version: {
            type: string;
            pattern: string;
            description: string;
        };
        compatibility_level: {
            type: string;
            enum: string[];
            description: string;
        };
        module_version_info: {
            type: string;
            properties: {
                module_name: {
                    type: string;
                    enum: string[];
                    description: string;
                };
                current_version: {
                    $ref: string;
                };
                supported_versions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    description: string;
                };
                deprecated_versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version: {
                                $ref: string;
                            };
                            deprecation_date: {
                                $ref: string;
                            };
                            removal_date: {
                                $ref: string;
                            };
                            migration_guide: {
                                type: string;
                                description: string;
                            };
                            protocol_version_operation: {
                                type: string;
                                enum: string[];
                            };
                            protocol_version_details: {
                                type: string;
                                properties: {
                                    compatibility_mode: {
                                        type: string;
                                        enum: string[];
                                    };
                                    migration_strategy: {
                                        type: string;
                                    };
                                    rollback_support: {
                                        type: string;
                                    };
                                };
                            };
                        };
                        required: string[];
                    };
                };
                breaking_changes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version: {
                                $ref: string;
                            };
                            change_description: {
                                type: string;
                            };
                            impact_level: {
                                type: string;
                                enum: string[];
                            };
                            migration_required: {
                                type: string;
                            };
                            affected_apis: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        compatibility_matrix: {
            type: string;
            properties: {
                matrix_version: {
                    $ref: string;
                };
                compatibility_rules: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            source_module: {
                                type: string;
                            };
                            source_version: {
                                $ref: string;
                            };
                            target_module: {
                                type: string;
                            };
                            target_version_range: {
                                type: string;
                                description: string;
                            };
                            compatibility_level: {
                                $ref: string;
                            };
                            notes: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                global_constraints: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            constraint_type: {
                                type: string;
                                enum: string[];
                            };
                            modules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            version_constraint: {
                                type: string;
                            };
                            reason: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        upgrade_path: {
            type: string;
            properties: {
                path_id: {
                    $ref: string;
                };
                from_version: {
                    $ref: string;
                };
                to_version: {
                    $ref: string;
                };
                upgrade_steps: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            step_number: {
                                type: string;
                                minimum: number;
                            };
                            step_description: {
                                type: string;
                            };
                            step_type: {
                                type: string;
                                enum: string[];
                            };
                            affected_modules: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            automation_script: {
                                type: string;
                                description: string;
                            };
                            manual_steps: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            validation_criteria: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            rollback_procedure: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
                estimated_duration_minutes: {
                    type: string;
                    minimum: number;
                };
                risk_level: {
                    type: string;
                    enum: string[];
                };
                prerequisites: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
                post_upgrade_validation: {
                    type: string;
                    items: {
                        type: string;
                    };
                };
            };
            required: string[];
        };
        deprecation_schedule: {
            type: string;
            properties: {
                schedule_version: {
                    $ref: string;
                };
                deprecation_policies: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            policy_name: {
                                type: string;
                            };
                            deprecation_period_months: {
                                type: string;
                                minimum: number;
                            };
                            notification_schedule: {
                                type: string;
                                items: {
                                    type: string;
                                    properties: {
                                        notification_type: {
                                            type: string;
                                            enum: string[];
                                        };
                                        months_before_removal: {
                                            type: string;
                                            minimum: number;
                                        };
                                    };
                                    required: string[];
                                };
                            };
                            affected_features: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                        };
                        required: string[];
                    };
                };
                scheduled_deprecations: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            item_type: {
                                type: string;
                                enum: string[];
                            };
                            item_identifier: {
                                type: string;
                            };
                            deprecation_date: {
                                $ref: string;
                            };
                            removal_date: {
                                $ref: string;
                            };
                            replacement: {
                                type: string;
                            };
                            migration_guide: {
                                type: string;
                            };
                            impact_assessment: {
                                type: string;
                            };
                        };
                        required: string[];
                    };
                };
            };
            required: string[];
        };
        protocol_version_info: {
            type: string;
            properties: {
                protocol_suite_version: {
                    $ref: string;
                };
                protocol_suite_name: {
                    type: string;
                    const: string;
                };
                release_date: {
                    $ref: string;
                };
                module_versions: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                    minItems: number;
                };
                compatibility_matrix: {
                    $ref: string;
                };
                upgrade_paths: {
                    type: string;
                    items: {
                        $ref: string;
                    };
                };
                deprecation_schedule: {
                    $ref: string;
                };
                release_notes: {
                    type: string;
                    properties: {
                        new_features: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        improvements: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        bug_fixes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        breaking_changes: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        security_updates: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
                metadata: {
                    type: string;
                    properties: {
                        maintainers: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                        repository_url: {
                            type: string;
                            format: string;
                        };
                        documentation_url: {
                            type: string;
                            format: string;
                        };
                        support_contact: {
                            type: string;
                        };
                        license: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
    };
    properties: {
        protocol_version: {
            type: string;
            const: string;
            description: string;
        };
        timestamp: {
            type: string;
            format: string;
            description: string;
        };
        protocol_version_info: {
            $ref: string;
        };
        audit_trail: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                retention_days: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                audit_events: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            event_id: {
                                $ref: string;
                            };
                            event_type: {
                                type: string;
                                enum: string[];
                            };
                            timestamp: {
                                $ref: string;
                            };
                            user_id: {
                                type: string;
                            };
                            user_role: {
                                type: string;
                            };
                            action: {
                                type: string;
                            };
                            resource: {
                                type: string;
                            };
                            version_operation: {
                                type: string;
                            };
                            source_version: {
                                $ref: string;
                            };
                            target_version: {
                                $ref: string;
                            };
                            module_name: {
                                type: string;
                            };
                            compatibility_result: {
                                $ref: string;
                            };
                            version_details: {
                                type: string;
                            };
                            ip_address: {
                                type: string;
                            };
                            user_agent: {
                                type: string;
                            };
                            session_id: {
                                type: string;
                            };
                            correlation_id: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                compliance_settings: {
                    type: string;
                    properties: {
                        gdpr_enabled: {
                            type: string;
                        };
                        hipaa_enabled: {
                            type: string;
                        };
                        sox_enabled: {
                            type: string;
                        };
                        version_audit_level: {
                            type: string;
                            enum: string[];
                        };
                        version_change_logging: {
                            type: string;
                        };
                        custom_compliance: {
                            type: string;
                            items: {
                                type: string;
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        monitoring_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                supported_providers: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                integration_endpoints: {
                    type: string;
                    properties: {
                        metrics_api: {
                            type: string;
                            format: string;
                        };
                        version_management_api: {
                            type: string;
                            format: string;
                        };
                        compatibility_analysis_api: {
                            type: string;
                            format: string;
                        };
                        protocol_evolution_api: {
                            type: string;
                            format: string;
                        };
                    };
                };
                version_metrics: {
                    type: string;
                    properties: {
                        track_version_management: {
                            type: string;
                        };
                        track_compatibility_analysis: {
                            type: string;
                        };
                        track_protocol_evolution: {
                            type: string;
                        };
                        track_migration_progress: {
                            type: string;
                        };
                    };
                };
                export_formats: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
            };
            required: string[];
        };
        performance_metrics: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                collection_interval_seconds: {
                    type: string;
                    minimum: number;
                    maximum: number;
                };
                metrics: {
                    type: string;
                    properties: {
                        version_check_latency_ms: {
                            type: string;
                            minimum: number;
                        };
                        compatibility_check_success_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        migration_completion_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        protocol_evolution_score: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        version_adoption_rate_percent: {
                            type: string;
                            minimum: number;
                            maximum: number;
                        };
                        active_versions_count: {
                            type: string;
                            minimum: number;
                        };
                        deprecated_versions_count: {
                            type: string;
                            minimum: number;
                        };
                        compatibility_conflicts_count: {
                            type: string;
                            minimum: number;
                        };
                        average_migration_time_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
                health_status: {
                    type: string;
                    properties: {
                        status: {
                            type: string;
                            enum: string[];
                        };
                        last_check: {
                            $ref: string;
                        };
                        checks: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    check_name: {
                                        type: string;
                                    };
                                    status: {
                                        type: string;
                                        enum: string[];
                                    };
                                    message: {
                                        type: string;
                                    };
                                    duration_ms: {
                                        type: string;
                                        minimum: number;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
                alerting: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        thresholds: {
                            type: string;
                            properties: {
                                max_version_check_latency_ms: {
                                    type: string;
                                    minimum: number;
                                };
                                min_compatibility_check_success_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_migration_completion_rate_percent: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                min_protocol_evolution_score: {
                                    type: string;
                                    minimum: number;
                                    maximum: number;
                                };
                                max_compatibility_conflicts_count: {
                                    type: string;
                                    minimum: number;
                                };
                            };
                        };
                        notification_channels: {
                            type: string;
                            items: {
                                type: string;
                                enum: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
        version_history: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                max_versions: {
                    type: string;
                    minimum: number;
                    maximum: number;
                    default: number;
                };
                versions: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            version_id: {
                                $ref: string;
                            };
                            version_number: {
                                type: string;
                                minimum: number;
                            };
                            created_at: {
                                $ref: string;
                            };
                            created_by: {
                                type: string;
                            };
                            change_summary: {
                                type: string;
                            };
                            protocol_snapshot: {
                                type: string;
                            };
                            change_type: {
                                type: string;
                                enum: string[];
                            };
                        };
                        required: string[];
                    };
                };
                auto_versioning: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        version_on_protocol_change: {
                            type: string;
                        };
                        version_on_compatibility_change: {
                            type: string;
                        };
                        version_on_deprecation_change: {
                            type: string;
                        };
                    };
                };
            };
            required: string[];
        };
        search_metadata: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                indexing_strategy: {
                    type: string;
                    enum: string[];
                };
                searchable_fields: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                search_indexes: {
                    type: string;
                    items: {
                        type: string;
                        properties: {
                            index_id: {
                                type: string;
                            };
                            index_name: {
                                type: string;
                            };
                            fields: {
                                type: string;
                                items: {
                                    type: string;
                                };
                            };
                            index_type: {
                                type: string;
                                enum: string[];
                            };
                            created_at: {
                                $ref: string;
                            };
                            last_updated: {
                                $ref: string;
                            };
                        };
                        required: string[];
                    };
                };
                version_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_version_data: {
                            type: string;
                        };
                        index_performance_metrics: {
                            type: string;
                        };
                        index_audit_logs: {
                            type: string;
                        };
                    };
                };
                auto_indexing: {
                    type: string;
                    properties: {
                        enabled: {
                            type: string;
                        };
                        index_new_versions: {
                            type: string;
                        };
                        reindex_interval_hours: {
                            type: string;
                            minimum: number;
                        };
                    };
                };
            };
            required: string[];
        };
        protocol_version_operation: {
            type: string;
            enum: string[];
            description: string;
        };
        protocol_version_details: {
            type: string;
            properties: {
                compatibility_mode: {
                    type: string;
                    enum: string[];
                };
                migration_strategy: {
                    type: string;
                };
                rollback_support: {
                    type: string;
                };
            };
            description: string;
        };
        event_integration: {
            type: string;
            properties: {
                enabled: {
                    type: string;
                };
                event_bus_connection: {
                    type: string;
                    properties: {
                        bus_type: {
                            type: string;
                            enum: string[];
                        };
                        connection_string: {
                            type: string;
                        };
                        topic_prefix: {
                            type: string;
                        };
                        consumer_group: {
                            type: string;
                        };
                    };
                };
                published_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                subscribed_events: {
                    type: string;
                    items: {
                        type: string;
                        enum: string[];
                    };
                };
                event_routing: {
                    type: string;
                    properties: {
                        routing_rules: {
                            type: string;
                            items: {
                                type: string;
                                properties: {
                                    rule_id: {
                                        type: string;
                                    };
                                    condition: {
                                        type: string;
                                    };
                                    target_topic: {
                                        type: string;
                                    };
                                    enabled: {
                                        type: string;
                                    };
                                };
                                required: string[];
                            };
                        };
                    };
                };
            };
            required: string[];
        };
    };
    required: string[];
};
export declare function isCoreModule(schemaName: string): schemaName is CoreModuleSchemaName;
export declare function isCrossCuttingConcern(schemaName: string): schemaName is CrossCuttingConcernSchemaName;
//# sourceMappingURL=index.d.ts.map