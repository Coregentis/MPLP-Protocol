{
  "timestamp": "2025-07-10T08:45:03.499Z",
  "schemas": {
    "context": {
      "filename": "context-protocol.json",
      "version": {
        "schema": "N/A",
        "protocol": "1.0.1",
        "schemaSpec": "https://json-schema.org/draft/2020-12/schema"
      },
      "protocolVersion": "1.0.1",
      "schemaId": "https://mplp.dev/schemas/v1.0/context-protocol.json",
      "title": "MPLP Context Protocol v1.0",
      "lastModified": "2025-07-10T03:08:48.822Z",
      "requiredFields": [
        "protocol_version",
        "timestamp",
        "context_id",
        "name",
        "status",
        "lifecycle_stage",
        "shared_state",
        "access_control",
        "configuration"
      ],
      "fieldCount": 10,
      "enumFields": {
        "status": [
          "active",
          "suspended",
          "completed",
          "terminated"
        ],
        "lifecycle_stage": [
          "planning",
          "executing",
          "monitoring",
          "completed"
        ],
        "shared_state.dependencies[].type": [
          "context",
          "plan",
          "external"
        ],
        "shared_state.dependencies[].status": [
          "pending",
          "resolved",
          "failed"
        ],
        "shared_state.goals[].status": [
          "defined",
          "active",
          "achieved",
          "abandoned"
        ],
        "shared_state.goals[].success_criteria[].operator": [
          "eq",
          "ne",
          "gt",
          "gte",
          "lt",
          "lte"
        ],
        "access_control.permissions[].principal_type": [
          "user",
          "role",
          "group"
        ],
        "access_control.policies[].type": [
          "security",
          "compliance",
          "operational"
        ],
        "access_control.policies[].enforcement": [
          "strict",
          "advisory",
          "disabled"
        ],
        "configuration.persistence.storage_backend": [
          "memory",
          "database",
          "file",
          "redis"
        ]
      }
    },
    "plan": {
      "filename": "plan-protocol.json",
      "version": {
        "schema": "N/A",
        "protocol": "1.0.1",
        "schemaSpec": "https://json-schema.org/draft/2020-12/schema"
      },
      "protocolVersion": "1.0.1",
      "schemaId": "https://mplp.dev/schemas/v1.0/plan-protocol.json",
      "title": "MPLP Plan Protocol v1.0",
      "lastModified": "2025-07-10T03:08:54.591Z",
      "requiredFields": [
        "protocol_version",
        "timestamp",
        "plan_id",
        "context_id",
        "name",
        "status",
        "priority",
        "timeline",
        "tasks"
      ],
      "fieldCount": 15,
      "enumFields": {
        "status": [
          "draft",
          "approved",
          "active",
          "paused",
          "completed",
          "cancelled",
          "failed"
        ],
        "timeline.estimated_duration.unit": [
          "minutes",
          "hours",
          "days",
          "weeks",
          "months"
        ],
        "timeline.actual_duration.unit": [
          "minutes",
          "hours",
          "days",
          "weeks",
          "months"
        ],
        "tasks[].type": [
          "atomic",
          "composite",
          "milestone",
          "checkpoint"
        ],
        "tasks[].status": [
          "pending",
          "ready",
          "running",
          "blocked",
          "completed",
          "failed",
          "skipped"
        ],
        "tasks[].estimated_effort.unit": [
          "hours",
          "days",
          "story_points"
        ],
        "tasks[].actual_effort.unit": [
          "hours",
          "days",
          "story_points"
        ],
        "tasks[].resources_required[].availability": [
          "required",
          "preferred",
          "optional"
        ],
        "tasks[].acceptance_criteria[].type": [
          "functional",
          "non_functional",
          "quality"
        ],
        "tasks[].acceptance_criteria[].status": [
          "pending",
          "met",
          "not_met"
        ],
        "tasks[].acceptance_criteria[].verification_method": [
          "manual",
          "automated",
          "review"
        ],
        "dependencies[].dependency_type": [
          "finish_to_start",
          "start_to_start",
          "finish_to_finish",
          "start_to_finish"
        ],
        "dependencies[].lag.unit": [
          "minutes",
          "hours",
          "days"
        ],
        "dependencies[].criticality": [
          "blocking",
          "important",
          "nice_to_have"
        ],
        "milestones[].status": [
          "upcoming",
          "at_risk",
          "achieved",
          "missed"
        ],
        "milestones[].success_criteria[].status": [
          "pending",
          "achieved",
          "not_achieved"
        ],
        "optimization.strategy": [
          "time_optimal",
          "resource_optimal",
          "cost_optimal",
          "quality_optimal",
          "balanced"
        ],
        "optimization.constraints.max_duration.unit": [
          "hours",
          "days",
          "weeks"
        ],
        "optimization.parameters.risk_tolerance": [
          "low",
          "medium",
          "high"
        ],
        "risk_assessment.overall_risk_level": [
          "low",
          "medium",
          "high",
          "critical"
        ],
        "risk_assessment.risks[].category": [
          "technical",
          "operational",
          "external",
          "resource"
        ],
        "risk_assessment.risks[].impact": [
          "low",
          "medium",
          "high",
          "critical"
        ],
        "risk_assessment.risks[].status": [
          "identified",
          "monitored",
          "mitigated",
          "realized",
          "closed"
        ]
      }
    },
    "confirm": {
      "filename": "confirm-protocol.json",
      "version": {
        "schema": "N/A",
        "protocol": "1.0.1",
        "schemaSpec": "https://json-schema.org/draft/2020-12/schema"
      },
      "protocolVersion": "1.0.1",
      "schemaId": "https://mplp.dev/schemas/v1.0/confirm-protocol.json",
      "title": "MPLP Confirm Protocol v1.0",
      "lastModified": "2025-07-10T03:31:42.233Z",
      "requiredFields": [
        "protocol_version",
        "timestamp",
        "confirm_id",
        "context_id",
        "confirmation_type",
        "status",
        "priority"
      ],
      "fieldCount": 14,
      "enumFields": {
        "confirmation_type": [
          "plan_approval",
          "task_approval",
          "milestone_confirmation",
          "risk_acceptance",
          "resource_allocation",
          "emergency_approval"
        ],
        "status": [
          "pending",
          "in_review",
          "approved",
          "rejected",
          "cancelled",
          "expired"
        ],
        "approval_workflow.workflow_type": [
          "single_approver",
          "sequential",
          "parallel",
          "consensus",
          "escalation"
        ],
        "approval_workflow.steps[].status": [
          "pending",
          "approved",
          "rejected",
          "delegated",
          "skipped"
        ],
        "approval_workflow.steps[].decision.outcome": [
          "approve",
          "reject",
          "request_changes",
          "delegate"
        ],
        "approval_workflow.steps[].timeout.unit": [
          "minutes",
          "hours",
          "days"
        ],
        "approval_workflow.steps[].timeout.action_on_timeout": [
          "auto_approve",
          "auto_reject",
          "escalate",
          "extend"
        ],
        "approval_workflow.escalation_rules[].trigger": [
          "timeout",
          "rejection",
          "manual",
          "system"
        ],
        "subject.impact_assessment.scope": [
          "task",
          "project",
          "organization",
          "external"
        ],
        "subject.impact_assessment.business_impact": [
          "none",
          "low",
          "medium",
          "high",
          "critical"
        ],
        "subject.impact_assessment.technical_impact": [
          "none",
          "low",
          "medium",
          "high",
          "critical"
        ],
        "risk_assessment.overall_risk_level": [
          "low",
          "medium",
          "high",
          "critical"
        ],
        "risk_assessment.risk_factors[].impact": [
          "low",
          "medium",
          "high",
          "critical"
        ],
        "risk_assessment.compliance_requirements[].compliance_status": [
          "compliant",
          "non_compliant",
          "partially_compliant",
          "not_applicable"
        ],
        "notification_settings.stakeholders[].notification_preference": [
          "all",
          "important",
          "critical",
          "none"
        ],
        "audit_trail[].event_type": [
          "created",
          "updated",
          "approved",
          "rejected",
          "escalated",
          "cancelled",
          "timeout"
        ]
      }
    },
    "trace": {
      "filename": "trace-protocol.json",
      "version": {
        "schema": "N/A",
        "protocol": "1.0.1",
        "schemaSpec": "https://json-schema.org/draft/2020-12/schema"
      },
      "protocolVersion": "1.0.1",
      "schemaId": "https://mplp.dev/schemas/v1.0/trace-protocol.json",
      "title": "MPLP Trace Protocol v1.0",
      "lastModified": "2025-07-10T03:09:14.272Z",
      "requiredFields": [
        "protocol_version",
        "timestamp",
        "trace_id",
        "context_id",
        "event_type",
        "source",
        "severity"
      ],
      "fieldCount": 15,
      "enumFields": {
        "trace_type": [
          "execution",
          "monitoring",
          "audit",
          "performance",
          "error",
          "decision"
        ],
        "severity": [
          "debug",
          "info",
          "warn",
          "error",
          "critical"
        ],
        "event.type": [
          "start",
          "progress",
          "checkpoint",
          "completion",
          "failure",
          "timeout",
          "interrupt"
        ],
        "event.category": [
          "system",
          "user",
          "external",
          "automatic"
        ],
        "error_information.error_type": [
          "system",
          "business",
          "validation",
          "network",
          "timeout",
          "security"
        ],
        "error_information.recovery_actions[].action": [
          "retry",
          "fallback",
          "escalate",
          "ignore",
          "abort"
        ],
        "tracepilot_integration.export_settings.format": [
          "jaeger",
          "zipkin",
          "otlp",
          "custom"
        ],
        "correlations[].type": [
          "causation",
          "temporal",
          "spatial",
          "logical"
        ]
      }
    },
    "role": {
      "filename": "role-protocol.json",
      "version": {
        "schema": "N/A",
        "protocol": "1.0.1",
        "schemaSpec": "https://json-schema.org/draft/2020-12/schema"
      },
      "protocolVersion": "1.0.1",
      "schemaId": "https://mplp.dev/schemas/v1.0/role-protocol.json",
      "title": "MPLP Role Protocol v1.0",
      "lastModified": "2025-07-10T03:39:48.460Z",
      "requiredFields": [
        "protocol_version",
        "timestamp",
        "role_id",
        "context_id",
        "name",
        "role_type",
        "status",
        "permissions"
      ],
      "fieldCount": 16,
      "enumFields": {
        "role_type": [
          "system",
          "organizational",
          "functional",
          "project",
          "temporary"
        ],
        "status": [
          "active",
          "inactive",
          "deprecated",
          "suspended"
        ],
        "scope.level": [
          "global",
          "organization",
          "project",
          "team",
          "individual"
        ],
        "permissions[].resource_type": [
          "context",
          "plan",
          "task",
          "confirmation",
          "trace",
          "role",
          "extension",
          "system"
        ],
        "permissions[].grant_type": [
          "direct",
          "inherited",
          "delegated",
          "temporary"
        ],
        "inheritance.parent_roles[].inheritance_type": [
          "full",
          "partial",
          "conditional"
        ],
        "inheritance.inheritance_rules.merge_strategy": [
          "union",
          "intersection",
          "priority",
          "custom"
        ],
        "inheritance.inheritance_rules.conflict_resolution": [
          "deny",
          "allow",
          "escalate",
          "most_restrictive",
          "least_restrictive"
        ],
        "delegation.active_delegations[].status": [
          "active",
          "suspended",
          "revoked",
          "expired"
        ],
        "attributes.security_clearance": [
          "public",
          "internal",
          "confidential",
          "secret",
          "top_secret"
        ],
        "attributes.seniority_level": [
          "junior",
          "mid",
          "senior",
          "lead",
          "executive"
        ],
        "validation_rules.assignment_rules[].action": [
          "allow",
          "deny",
          "require_approval"
        ],
        "validation_rules.separation_of_duties[].severity": [
          "warning",
          "error",
          "critical"
        ]
      }
    },
    "extension": {
      "filename": "extension-protocol.json",
      "version": {
        "schema": "N/A",
        "protocol": "1.0.1",
        "schemaSpec": "https://json-schema.org/draft/2020-12/schema"
      },
      "protocolVersion": "1.0.1",
      "schemaId": "https://mplp.dev/schemas/v1.0/extension-protocol.json",
      "title": "MPLP Extension Protocol v1.0",
      "lastModified": "2025-07-10T03:10:04.123Z",
      "requiredFields": [
        "protocol_version",
        "timestamp",
        "extension_id",
        "context_id",
        "name",
        "type",
        "status",
        "version"
      ],
      "fieldCount": 18,
      "enumFields": {
        "extension_type": [
          "plugin",
          "adapter",
          "connector",
          "middleware",
          "hook",
          "transformer"
        ],
        "status": [
          "installed",
          "active",
          "inactive",
          "disabled",
          "error",
          "updating",
          "uninstalling"
        ],
        "compatibility.required_modules[].module": [
          "context",
          "plan",
          "confirm",
          "trace",
          "role",
          "extension"
        ],
        "configuration.validation_rules[].severity": [
          "error",
          "warning",
          "info"
        ],
        "extension_points[].type": [
          "hook",
          "filter",
          "action",
          "api_endpoint",
          "event_listener"
        ],
        "extension_points[].target_module": [
          "context",
          "plan",
          "confirm",
          "trace",
          "role",
          "extension",
          "system"
        ],
        "extension_points[].handler.retry_policy.backoff_strategy": [
          "fixed",
          "exponential",
          "linear"
        ],
        "api_extensions[].method": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE",
          "OPTIONS",
          "HEAD"
        ],
        "event_subscriptions[].source_module": [
          "context",
          "plan",
          "confirm",
          "trace",
          "role",
          "extension",
          "system",
          "*"
        ],
        "event_subscriptions[].delivery_guarantees": [
          "at_least_once",
          "at_most_once",
          "exactly_once"
        ],
        "security.resource_limits.file_system_access": [
          "none",
          "read_only",
          "sandbox",
          "full"
        ]
      }
    }
  },
  "conflicts": [],
  "recommendations": [
    {
      "priority": "MEDIUM",
      "action": "IMPLEMENT_VERSION_GOVERNANCE",
      "description": "实施Schema版本治理机制",
      "details": {
        "actions": [
          "建立Schema版本锁定机制",
          "实施版本变更审批流程",
          "添加自动化版本检查",
          "建立版本兼容性测试"
        ]
      }
    }
  ]
}