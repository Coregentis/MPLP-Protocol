{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://mplp.dev/schemas/v1.0/mplp-context.json",
  "title": "MPLP Context Protocol v1.0",
  "description": "Context模块协议Schema - 上下文和全局状态管理",
  "type": "object",
  "$defs": {
    "uuid": {
      "type": "string",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "description": "UUID v4格式的唯一标识符"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601格式的时间戳"
    },
    "version": {
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "description": "语义化版本号 (SemVer)"
    },
    "priority": {
      "type": "string",
      "enum": ["critical", "high", "medium", "low"],
      "description": "优先级枚举"
    }
  },
  "properties": {
    "protocol_version": {
      "$ref": "#/$defs/version",
      "description": "MPLP协议版本",
      "const": "1.0.0"
    },
    "timestamp": {
      "$ref": "#/$defs/timestamp",
      "description": "协议消息时间戳"
    },
    "context_id": {
      "$ref": "#/$defs/uuid",
      "description": "上下文唯一标识符"
    },
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "description": "上下文名称"
    },
    "description": {
      "type": "string",
      "maxLength": 1000,
      "description": "上下文描述"
    },
    "status": {
      "type": "string",
      "enum": ["active", "suspended", "completed", "terminated"],
      "description": "上下文状态"
    },
    "lifecycle_stage": {
      "type": "string",
      "enum": ["planning", "executing", "monitoring", "completed"],
      "description": "生命周期阶段"
    },
    "shared_state": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "object",
          "description": "共享变量",
          "additionalProperties": true
        },
        "resources": {
          "type": "object",
          "properties": {
            "allocated": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": { "type": "string" },
                  "amount": { "type": "number" },
                  "unit": { "type": "string" },
                  "status": {
                    "type": "string",
                    "enum": ["available", "allocated", "exhausted"]
                  }
                },
                "required": ["type", "amount", "unit", "status"]
              }
            },
            "requirements": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "minimum": { "type": "number" },
                  "optimal": { "type": "number" },
                  "maximum": { "type": "number" },
                  "unit": { "type": "string" }
                },
                "required": ["minimum", "unit"]
              }
            }
          },
          "required": ["allocated", "requirements"]
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "$ref": "#/$defs/uuid" },
              "type": {
                "type": "string",
                "enum": ["context", "plan", "external"]
              },
              "name": { "type": "string" },
              "version": { "$ref": "#/$defs/version" },
              "status": {
                "type": "string",
                "enum": ["pending", "resolved", "failed"]
              }
            },
            "required": ["id", "type", "name", "status"]
          }
        },
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "$ref": "#/$defs/uuid" },
              "name": { "type": "string" },
              "description": { "type": "string" },
              "priority": { "$ref": "#/$defs/priority" },
              "status": {
                "type": "string",
                "enum": ["defined", "active", "achieved", "abandoned"]
              },
              "success_criteria": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "metric": { "type": "string" },
                    "operator": {
                      "type": "string",
                      "enum": ["eq", "ne", "gt", "gte", "lt", "lte"]
                    },
                    "value": { "type": ["string", "number", "boolean"] },
                    "unit": { "type": "string" }
                  },
                  "required": ["metric", "operator", "value"]
                }
              }
            },
            "required": ["id", "name", "priority", "status"]
          }
        }
      },
      "required": ["variables", "resources", "dependencies", "goals"]
    },
    "access_control": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "object",
          "properties": {
            "user_id": { "type": "string" },
            "role": { "type": "string" }
          },
          "required": ["user_id", "role"]
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "principal": { "type": "string" },
              "principal_type": {
                "type": "string",
                "enum": ["user", "role", "group"]
              },
              "resource": { "type": "string" },
              "actions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["read", "write", "execute", "delete", "admin"]
                }
              },
              "conditions": {
                "type": "object",
                "additionalProperties": true
              }
            },
            "required": ["principal", "principal_type", "resource", "actions"]
          }
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "$ref": "#/$defs/uuid" },
              "name": { "type": "string" },
              "type": {
                "type": "string",
                "enum": ["security", "compliance", "operational"]
              },
              "rules": { "type": "array", "items": { "type": "object" } },
              "enforcement": {
                "type": "string",
                "enum": ["strict", "advisory", "disabled"]
              }
            },
            "required": ["id", "name", "type", "rules", "enforcement"]
          }
        }
      },
      "required": ["owner", "permissions"]
    },
    "configuration": {
      "type": "object",
      "properties": {
        "timeout_settings": {
          "type": "object",
          "properties": {
            "default_timeout": { "type": "integer", "minimum": 1 },
            "max_timeout": { "type": "integer", "minimum": 1 },
            "cleanup_timeout": { "type": "integer", "minimum": 1 }
          },
          "required": ["default_timeout", "max_timeout"]
        },
        "notification_settings": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "channels": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["email", "webhook", "sms", "push"]
              }
            },
            "events": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["created", "updated", "completed", "failed", "timeout"]
              }
            }
          },
          "required": ["enabled"]
        },
        "persistence": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "storage_backend": {
              "type": "string",
              "enum": ["memory", "database", "file", "redis"]
            },
            "retention_policy": {
              "type": "object",
              "properties": {
                "duration": { "type": "string" },
                "max_versions": { "type": "integer", "minimum": 1 }
              }
            }
          },
          "required": ["enabled", "storage_backend"]
        }
      },
      "required": ["timeout_settings", "persistence"]
    },
    "audit_trail": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "retention_days": { "type": "integer", "minimum": 1, "maximum": 2555 },
        "audit_events": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "event_id": { "$ref": "#/$defs/uuid" },
              "event_type": {
                "type": "string",
                "enum": ["context_created", "context_updated", "context_deleted", "context_accessed", "context_shared", "permission_changed", "state_changed", "cache_updated", "sync_executed"]
              },
              "timestamp": { "$ref": "#/$defs/timestamp" },
              "user_id": { "type": "string" },
              "user_role": { "type": "string" },
              "action": { "type": "string" },
              "resource": { "type": "string" },
              "context_operation": { "type": "string" },
              "context_id": { "$ref": "#/$defs/uuid" },
              "context_name": { "type": "string" },
              "lifecycle_stage": { "type": "string" },
              "shared_state_keys": {
                "type": "array",
                "items": { "type": "string" }
              },
              "access_level": { "type": "string" },
              "context_details": { "type": "object" },
              "old_value": { "type": "object" },
              "new_value": { "type": "object" },
              "ip_address": { "type": "string" },
              "user_agent": { "type": "string" },
              "session_id": { "type": "string" },
              "correlation_id": { "$ref": "#/$defs/uuid" }
            },
            "required": ["event_id", "event_type", "timestamp", "user_id", "action", "resource"]
          }
        },
        "compliance_settings": {
          "type": "object",
          "properties": {
            "gdpr_enabled": { "type": "boolean" },
            "hipaa_enabled": { "type": "boolean" },
            "sox_enabled": { "type": "boolean" },
            "context_audit_level": {
              "type": "string",
              "enum": ["basic", "detailed", "comprehensive"]
            },
            "context_data_logging": { "type": "boolean" },
            "custom_compliance": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        }
      },
      "required": ["enabled", "retention_days"]
    },
    "monitoring_integration": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "supported_providers": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["prometheus", "grafana", "datadog", "new_relic", "elastic_apm", "custom"]
          }
        },
        "integration_endpoints": {
          "type": "object",
          "properties": {
            "metrics_api": { "type": "string", "format": "uri" },
            "context_state_api": { "type": "string", "format": "uri" },
            "cache_metrics_api": { "type": "string", "format": "uri" },
            "sync_metrics_api": { "type": "string", "format": "uri" }
          }
        },
        "context_metrics": {
          "type": "object",
          "properties": {
            "track_state_changes": { "type": "boolean" },
            "track_cache_performance": { "type": "boolean" },
            "track_sync_operations": { "type": "boolean" },
            "track_access_patterns": { "type": "boolean" }
          }
        },
        "export_formats": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["prometheus", "opentelemetry", "custom"]
          }
        }
      },
      "required": ["enabled", "supported_providers"]
    },
    "performance_metrics": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "collection_interval_seconds": { "type": "integer", "minimum": 10, "maximum": 3600 },
        "metrics": {
          "type": "object",
          "properties": {
            "context_access_latency_ms": { "type": "number", "minimum": 0 },
            "context_update_latency_ms": { "type": "number", "minimum": 0 },
            "cache_hit_rate_percent": { "type": "number", "minimum": 0, "maximum": 100 },
            "context_sync_success_rate_percent": { "type": "number", "minimum": 0, "maximum": 100 },
            "context_state_consistency_score": { "type": "number", "minimum": 0, "maximum": 10 },
            "active_contexts_count": { "type": "integer", "minimum": 0 },
            "context_operations_per_second": { "type": "number", "minimum": 0 },
            "context_memory_usage_mb": { "type": "number", "minimum": 0 },
            "average_context_size_bytes": { "type": "number", "minimum": 0 }
          }
        },
        "health_status": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": ["healthy", "degraded", "unhealthy", "inconsistent"]
            },
            "last_check": { "$ref": "#/$defs/timestamp" },
            "checks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "check_name": { "type": "string" },
                  "status": {
                    "type": "string",
                    "enum": ["pass", "fail", "warn"]
                  },
                  "message": { "type": "string" },
                  "duration_ms": { "type": "number", "minimum": 0 }
                },
                "required": ["check_name", "status"]
              }
            }
          }
        },
        "alerting": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "thresholds": {
              "type": "object",
              "properties": {
                "max_context_access_latency_ms": { "type": "number", "minimum": 0 },
                "max_context_update_latency_ms": { "type": "number", "minimum": 0 },
                "min_cache_hit_rate_percent": { "type": "number", "minimum": 0, "maximum": 100 },
                "min_context_sync_success_rate_percent": { "type": "number", "minimum": 0, "maximum": 100 },
                "min_context_state_consistency_score": { "type": "number", "minimum": 0, "maximum": 10 }
              }
            },
            "notification_channels": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["email", "slack", "webhook", "sms", "pagerduty"]
              }
            }
          }
        }
      },
      "required": ["enabled", "collection_interval_seconds"]
    },
    "version_history": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "max_versions": { "type": "integer", "minimum": 1, "maximum": 100, "default": 50 },
        "versions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "version_id": { "$ref": "#/$defs/uuid" },
              "version_number": { "type": "integer", "minimum": 1 },
              "created_at": { "$ref": "#/$defs/timestamp" },
              "created_by": { "type": "string" },
              "change_summary": { "type": "string" },
              "context_snapshot": { "type": "object" },
              "change_type": {
                "type": "string",
                "enum": ["context_created", "configuration_updated", "state_modified", "cache_updated", "sync_configured"]
              }
            },
            "required": ["version_id", "version_number", "created_at", "created_by", "change_type"]
          }
        },
        "auto_versioning": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "version_on_config_change": { "type": "boolean" },
            "version_on_state_change": { "type": "boolean" },
            "version_on_cache_change": { "type": "boolean" }
          }
        }
      },
      "required": ["enabled", "max_versions"]
    },
    "search_metadata": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "indexing_strategy": {
          "type": "string",
          "enum": ["full_text", "keyword", "semantic", "hybrid"]
        },
        "searchable_fields": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["context_id", "context_name", "lifecycle_stage", "shared_state_keys", "context_data", "performance_metrics", "metadata", "audit_logs"]
          }
        },
        "search_indexes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "index_id": { "type": "string" },
              "index_name": { "type": "string" },
              "fields": { "type": "array", "items": { "type": "string" } },
              "index_type": {
                "type": "string",
                "enum": ["btree", "hash", "gin", "gist", "full_text"]
              },
              "created_at": { "$ref": "#/$defs/timestamp" },
              "last_updated": { "$ref": "#/$defs/timestamp" }
            },
            "required": ["index_id", "index_name", "fields", "index_type"]
          }
        },
        "context_indexing": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "index_context_data": { "type": "boolean" },
            "index_performance_metrics": { "type": "boolean" },
            "index_audit_logs": { "type": "boolean" }
          }
        },
        "auto_indexing": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "index_new_contexts": { "type": "boolean" },
            "reindex_interval_hours": { "type": "integer", "minimum": 1 }
          }
        }
      },
      "required": ["enabled", "indexing_strategy"]
    },
    "caching_policy": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "cache_strategy": {
          "type": "string",
          "enum": ["lru", "lfu", "ttl", "adaptive"]
        },
        "cache_levels": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "level": { "type": "string" },
              "backend": {
                "type": "string",
                "enum": ["memory", "redis", "memcached", "database"]
              },
              "ttl_seconds": { "type": "integer", "minimum": 1 },
              "max_size_mb": { "type": "number", "minimum": 1 },
              "eviction_policy": {
                "type": "string",
                "enum": ["lru", "lfu", "random", "ttl"]
              }
            },
            "required": ["level", "backend", "ttl_seconds"]
          }
        },
        "cache_warming": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "strategies": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        }
      },
      "required": ["enabled", "cache_strategy"]
    },
    "sync_configuration": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "sync_strategy": {
          "type": "string",
          "enum": ["real_time", "batch", "event_driven", "scheduled"]
        },
        "sync_targets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "target_id": { "type": "string" },
              "target_type": {
                "type": "string",
                "enum": ["database", "cache", "external_service", "module"]
              },
              "sync_frequency": { "type": "string" },
              "conflict_resolution": {
                "type": "string",
                "enum": ["last_write_wins", "merge", "manual", "versioned"]
              }
            },
            "required": ["target_id", "target_type", "conflict_resolution"]
          }
        },
        "replication": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "replication_factor": { "type": "integer", "minimum": 1 },
            "consistency_level": {
              "type": "string",
              "enum": ["eventual", "strong", "bounded_staleness"]
            }
          }
        }
      },
      "required": ["enabled", "sync_strategy"]
    },
    "error_handling": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "error_policies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "error_type": { "type": "string" },
              "severity": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"]
              },
              "action": {
                "type": "string",
                "enum": ["retry", "fallback", "escalate", "ignore", "circuit_break"]
              },
              "retry_config": {
                "type": "object",
                "properties": {
                  "max_attempts": { "type": "integer", "minimum": 1 },
                  "backoff_strategy": {
                    "type": "string",
                    "enum": ["linear", "exponential", "fixed"]
                  },
                  "base_delay_ms": { "type": "integer", "minimum": 100 }
                }
              }
            },
            "required": ["error_type", "severity", "action"]
          }
        },
        "circuit_breaker": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "failure_threshold": { "type": "integer", "minimum": 1 },
            "timeout_ms": { "type": "integer", "minimum": 1000 },
            "reset_timeout_ms": { "type": "integer", "minimum": 5000 }
          }
        },
        "recovery_strategy": {
          "type": "object",
          "properties": {
            "auto_recovery": { "type": "boolean" },
            "backup_sources": {
              "type": "array",
              "items": { "type": "string" }
            },
            "rollback_enabled": { "type": "boolean" }
          }
        }
      },
      "required": ["enabled", "error_policies"]
    },
    "integration_endpoints": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "webhooks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "webhook_id": { "$ref": "#/$defs/uuid" },
              "url": { "type": "string", "format": "uri" },
              "events": {
                "type": "array",
                "items": { "type": "string" }
              },
              "authentication": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["none", "basic", "bearer", "hmac"]
                  },
                  "credentials": { "type": "object" }
                }
              },
              "retry_policy": {
                "type": "object",
                "properties": {
                  "max_attempts": { "type": "integer" },
                  "backoff_ms": { "type": "integer" }
                }
              }
            },
            "required": ["webhook_id", "url", "events"]
          }
        },
        "api_endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "endpoint_id": { "type": "string" },
              "path": { "type": "string" },
              "method": {
                "type": "string",
                "enum": ["get", "post", "put", "delete", "patch"]
              },
              "authentication_required": { "type": "boolean" },
              "rate_limit": {
                "type": "object",
                "properties": {
                  "requests_per_minute": { "type": "integer" },
                  "burst_limit": { "type": "integer" }
                }
              }
            },
            "required": ["endpoint_id", "path", "method"]
          }
        }
      },
      "required": ["enabled"]
    },

    "context_operation": {

      "type": "string",

      "enum": [

        "create",

        "update",

        "activate",

        "deactivate",

        "merge"

      ],

      "description": "上下文操作类型"

    },

    "context_details": {

      "type": "object",

      "properties": {

        "context_scope": {

          "type": "string",

          "enum": [

            "global",

            "session",

            "user",

            "project"

          ]

        },

        "persistence_level": {

          "type": "string",

          "enum": [

            "memory",

            "session",

            "persistent",

            "permanent"

          ]

        },

        "sharing_policy": {

          "type": "string",

          "enum": [

            "private",

            "shared",

            "public"

          ]

        }

      },

      "description": "上下文详细配置"

    },
    "event_integration": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "event_bus_connection": {
          "type": "object",
          "properties": {
            "bus_type": {
              "type": "string",
              "enum": ["kafka", "rabbitmq", "redis", "nats", "custom"]
            },
            "connection_string": { "type": "string" },
            "topic_prefix": { "type": "string" },
            "consumer_group": { "type": "string" }
          }
        },
        "published_events": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["context_created", "context_updated", "context_deleted", "context_accessed", "context_shared", "context_state_changed", "context_cache_updated", "context_sync_executed"]
          }
        },
        "subscribed_events": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["plan_executed", "confirm_approved", "trace_completed", "role_assigned", "extension_activated", "dialog_started", "network_connected", "collab_coordinated", "orchestration_executed", "coordination_synchronized", "eventbus_message_published", "statesync_sync_completed", "transaction_committed", "protocolversion_version_checked", "errorhandling_error_occurred", "security_authentication_attempted", "performance_metric_collected"]
          }
        },
        "event_routing": {
          "type": "object",
          "properties": {
            "routing_rules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "rule_id": { "type": "string" },
                  "condition": { "type": "string" },
                  "target_topic": { "type": "string" },
                  "enabled": { "type": "boolean" }
                },
                "required": ["rule_id", "condition", "target_topic"]
              }
            }
          }
        }
      },
      "required": ["enabled"]
    }
  },
  "required": [
    "protocol_version",
    "timestamp",
    "context_id",
    "name",
    "status",
    "lifecycle_stage",
    "shared_state",
    "access_control",
    "configuration",
    "audit_trail",
    "monitoring_integration",
    "performance_metrics",
    "version_history",
    "search_metadata",
    "caching_policy",
    "sync_configuration",
    "error_handling",
    "integration_endpoints",
    "event_integration"
  ],
  "additionalProperties": false,
  "examples": [
    {
      "protocol_version": "1.0.0",
      "timestamp": "2025-07-15T08:30:00Z",
      "context_id": "123e4567-e89b-42d3-a456-426614174000",
      "name": "项目A上下文",
      "description": "项目A的全局上下文",
      "status": "active",
      "lifecycle_stage": "planning",
      "shared_state": {
        "variables": {
          "environment": "development",
          "region": "cn-north-1",
          "feature_flags": {
            "new_ui": true,
            "beta_features": false
          }
        },
        "resources": {
          "allocated": {
            "memory": {
              "type": "ram",
              "amount": 1024,
              "unit": "mb",
              "status": "available"
            },
            "cpu": {
              "type": "vcpu",
              "amount": 2,
              "unit": "cores",
              "status": "allocated"
            }
          },
          "requirements": {
            "storage": {
              "minimum": 5,
              "optimal": 10,
              "maximum": 20,
              "unit": "gb"
            }
          }
        },
        "dependencies": [
          {
            "id": "123e4567-e89b-42d3-a456-426614174001",
            "type": "context",
            "name": "全局配置上下文",
            "version": "1.0.0",
            "status": "resolved"
          }
        ],
        "goals": [
          {
            "id": "123e4567-e89b-42d3-a456-426614174002",
            "name": "完成初始规划",
            "priority": "high",
            "status": "active",
            "success_criteria": [
              {
                "metric": "completion_percentage",
                "operator": "gte",
                "value": 90,
                "unit": "%"
              }
            ]
          }
        ]
      },
      "access_control": {
        "owner": {
          "user_id": "user-123",
          "role": "owner"
        },
        "permissions": [
          {
            "principal": "user-456",
            "principal_type": "user",
            "resource": "shared_state",
            "actions": ["read"]
          },
          {
            "principal": "developers",
            "principal_type": "group",
            "resource": "goals",
            "actions": ["read", "write"]
          }
        ]
      },
      "configuration": {
        "timeout_settings": {
          "default_timeout": 300,
          "max_timeout": 3600
        },
        "notification_settings": {
          "enabled": true,
          "channels": ["email", "webhook"],
          "events": ["completed", "failed"]
        },
        "persistence": {
          "enabled": true,
          "storage_backend": "database",
          "retention_policy": {
            "duration": "P30D",
            "max_versions": 5
          }
        }
      }
    }
  ]
}
