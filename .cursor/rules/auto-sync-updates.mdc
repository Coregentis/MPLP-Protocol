description: "MPLP项目自动同步更新规则 - 确保任何变更都触发完整的相关文件同步更新，保持项目一致性"
globs: ["**/*.ts", "**/*.js", "**/*.json", "**/*.md", "**/*.mdc", "**/package.json", "**/README.md"]
alwaysApply: true
---

# 自动同步更新规则

> **规则版本**: v1.0  
> **创建时间**: 2025-07-10T09:06:24+08:00  
> **适用范围**: MPLP项目全生命周期  
> **强制等级**: 🚨 **强制执行** - 违反将导致任务重新执行

## 🎯 规则目标

确保MPLP项目中任何功能变更、规则更新、文档修改都能自动触发所有相关文件的同步更新，保持项目完整性和一致性。

## 🔗 自动同步触发机制

### 📋 **变更类型与触发范围**

#### **1. 核心模块功能变更（如Plan模块failure_resolver）**
**触发文件更新列表：**
```
必须更新：
✅ ProjectRules/MPLP_ProjectRules.mdc - 更新模块功能描述
✅ .cursor/presets/mplp-development.md - 更新使用示例
✅ src/index.ts - 更新模块引用和配置
✅ docs/architecture/ - 更新架构文档
✅ requirements-docs/ - 更新相关需求文档
✅ README.md - 更新功能说明
✅ package.json - 更新版本号（如需要）
✅ 相关测试文档 - 更新测试说明
```

#### **2. TracePilot适配器升级**
**触发文件更新列表：**
```
必须更新：
✅ ProjectRules/MPLP_ProjectRules.mdc - 更新TracePilot集成描述
✅ .cursor/rules/trace-lifecycle.mdc - 更新追踪规则
✅ src/config/tracepilot.ts - 更新配置文件
✅ docs/mcp/ - 更新MCP集成文档
✅ docs/tracepilot/ - 更新TracePilot文档
✅ .cursor/presets/mplp-development.md - 更新技术标准
```

#### **3. 规则文件变更**
**触发文件更新列表：**
```
必须更新：
✅ 所有引用该规则的.mdc文件
✅ ProjectRules/MPLP_ProjectRules.mdc - 更新规则列表
✅ .cursor/presets/mplp-development.md - 更新规则引用
✅ docs/README.md - 更新文档索引
✅ 相关配置文件
```

## 🚨 强制执行规则

### **规则1：完整性检查（强制）**
```
任何单个文件的修改都必须伴随完整的影响分析：
❌ 禁止：只更新单个文件
✅ 必须：更新所有受影响的文件
✅ 必须：更新所有引用该内容的文档
✅ 必须：更新版本号和时间戳
```

### **规则2：时间戳一致性（强制）**
```
所有在同一次变更中修改的文件必须使用相同的时间戳：
✅ 使用：统一时间戳（通过程序获取）
❌ 禁止：手动输入时间戳
❌ 禁止：使用不同时间戳
```

### **规则3：版本管理联动（强制）**
```
功能变更必须触发相应的版本管理：
✅ 重大功能：递增MINOR版本（如1.0.0 → 1.1.0）
✅ 功能增强：递增PATCH版本（如1.0.0 → 1.0.1）
✅ 规则更新：递增预设版本（如v2.1 → v2.2）
```

### **规则4：交叉引用验证（强制）**
```
更新后必须验证所有交叉引用的正确性：
✅ 文件路径引用
✅ 版本号引用
✅ 功能描述一致性
✅ 配置参数一致性
```

## 📋 标准化同步流程模板

### **步骤1：影响分析**
```markdown
## 📊 变更影响分析

**变更类型**: [功能新增/功能修改/规则更新/文档优化]
**变更模块**: [具体模块名称]
**影响文件列表**:
- [ ] ProjectRules/MPLP_ProjectRules.mdc
- [ ] .cursor/presets/mplp-development.md
- [ ] src/index.ts
- [ ] [其他受影响文件]

**版本影响**: [版本号变更类型和原因]
```

### **步骤2：批量更新执行**
```markdown
## 🔄 批量同步更新

**统一时间戳**: 2025-XX-XXTXX:XX:XX+08:00
**更新文件数量**: X个文件
**版本递增**: [具体版本变更]

**更新清单**:
✅ [文件名] - [更新内容]
✅ [文件名] - [更新内容]
```

### **步骤3：一致性验证**
```markdown
## ✅ 一致性验证检查

**交叉引用检查**:
- [ ] 文件路径引用正确
- [ ] 版本号引用一致
- [ ] 功能描述一致
- [ ] 配置参数匹配

**完整性检查**:
- [ ] 所有受影响文件已更新
- [ ] 时间戳统一
- [ ] 版本号正确递增
```

## 🎯 AI助手执行约束

### **执行前检查（必须执行）**
```
在进行任何变更前，AI助手必须：
1. 分析变更的完整影响范围
2. 列出所有需要同步更新的文件
3. 获取当前真实时间戳
4. 确定版本号变更策略
```

### **执行中约束（强制遵循）**
```
在执行变更时，AI助手必须：
1. 使用统一时间戳更新所有文件
2. 保持所有引用的一致性
3. 按照影响分析清单逐个更新文件
4. 记录每个文件的具体更新内容
```

### **执行后验证（必须完成）**
```
变更完成后，AI助手必须：
1. 验证所有交叉引用的正确性
2. 确认版本号的正确递增
3. 检查时间戳的统一性
4. 生成完整的更新报告
```

## 📚 参考关联规则

- `versioning.mdc` - 版本管理规范
- `delivery-checklist.mdc` - 交付检查清单
- `doc-style.mdc` - 文档风格规范
- `development-workflow.mdc` - 开发流程规范

---

**创建者**: MPLP治理层  
**维护**: 自动更新机制  
**审查周期**: 每次重大变更后
