description: "MPLP项目交付质量检查清单，确保代码、测试、文档和部署的完整性和标准化"
globs: ["**/*.ts", "**/*.js", "**/*.json", "**/*.md", "**/tests/**/*", "**/package.json"]
alwaysApply: true
---

# MPLP 交付清单规则

> **文件类型**: Always  
> **适用范围**: 所有Agent任务交付前的完整性检查  
> **最后更新**: 2025-07-10

## 📋 交付清单概览

### 核心交付标准
- **功能完整性**: 需求覆盖100%，核心功能验证通过
- **代码质量**: 符合编码规范，通过所有静态检查
- **测试覆盖**: 达到覆盖率要求，所有测试通过
- **文档同步**: 技术文档、API文档、用户文档更新
- **性能达标**: 满足性能指标要求
- **安全合规**: 通过安全检查，无漏洞风险

## ✅ 代码交付检查清单

### 1. 功能实现验证
```markdown
#### 功能完整性 ✅
- [ ] 所有需求功能已实现
- [ ] 核心业务逻辑验证正确
- [ ] 边界条件处理完善
- [ ] 错误处理机制完整
- [ ] 与其他模块集成正常

#### API接口验证 ✅
- [ ] REST API端点全部实现
- [ ] GraphQL查询/变更正常
- [ ] 请求/响应格式符合Schema
- [ ] 错误码和消息规范
- [ ] API版本兼容性检查
```

### 2. 代码质量检查
```markdown
#### 代码规范 ✅
- [ ] 通过ESLint检查（0 errors, 0 warnings）
- [ ] 通过TypeScript严格检查
- [ ] 代码格式化（Prettier）完成
- [ ] 命名约定符合规范
- [ ] 导入/导出结构清晰

#### 架构设计 ✅
- [ ] 模块边界清晰，职责单一
- [ ] 依赖关系合理，无循环依赖
- [ ] 接口设计符合协议规范
- [ ] 错误处理层次分明
- [ ] 配置管理规范
```

### 3. 测试覆盖验证
```markdown
#### 单元测试 ✅
- [ ] 覆盖率 ≥ 90%（核心模块 ≥ 95%）
- [ ] 所有公共方法有测试
- [ ] 边界条件测试完整
- [ ] 错误场景测试覆盖
- [ ] Mock和Stub使用合理

#### 集成测试 ✅
- [ ] 模块间集成测试通过
- [ ] API端点集成测试完整
- [ ] 数据库操作测试正常
- [ ] 外部服务Mock测试
- [ ] 端到端关键流程测试

#### 性能测试 ✅
- [ ] API响应时间符合要求（P95 < 100ms）
- [ ] 并发处理能力验证（> 1000用户）
- [ ] 内存使用在合理范围
- [ ] 数据库查询性能优化
- [ ] 缓存策略有效性验证
```

### 4. 安全合规检查
```markdown
#### 安全扫描 ✅
- [ ] 依赖漏洞扫描通过（npm audit）
- [ ] 静态代码安全分析
- [ ] 敏感信息泄露检查
- [ ] 输入验证和SQL注入防护
- [ ] XSS和CSRF防护机制

#### 权限控制 ✅
- [ ] RBAC权限模型实现正确
- [ ] JWT令牌处理安全
- [ ] 用户权限验证完整
- [ ] 数据访问控制合规
- [ ] 审计日志记录完善
```

## 📚 文档交付检查清单

### 1. 技术文档更新
```markdown
#### API文档 ✅
- [ ] OpenAPI/Swagger规范更新
- [ ] 端点描述完整准确
- [ ] 请求/响应示例正确
- [ ] 错误码文档更新
- [ ] 认证方式说明清晰

#### 代码文档 ✅
- [ ] JSDoc注释完整
- [ ] 复杂逻辑添加内联注释
- [ ] README.md更新
- [ ] 变更日志(CHANGELOG.md)更新
- [ ] 架构图表更新
```

### 2. 用户文档同步
```markdown
#### 使用指南 ✅
- [ ] 快速开始指南更新
- [ ] 配置说明文档
- [ ] 故障排除指南
- [ ] 最佳实践文档
- [ ] 示例代码更新

#### 部署文档 ✅
- [ ] 环境要求说明
- [ ] 安装部署步骤
- [ ] 配置参数文档
- [ ] 监控和运维指南
- [ ] 备份恢复流程
```

## 🚀 部署交付检查清单

### 1. 环境准备
```markdown
#### 依赖管理 ✅
- [ ] package.json版本更新
- [ ] 依赖版本锁定(package-lock.json)
- [ ] 环境变量配置模板
- [ ] 数据库迁移脚本
- [ ] 配置文件模板准备

#### 构建验证 ✅
- [ ] 开发环境构建成功
- [ ] 测试环境构建成功
- [ ] 生产环境构建配置
- [ ] Docker镜像构建验证
- [ ] 资源文件打包正确
```

### 2. 部署验证
```markdown
#### 服务启动 ✅
- [ ] 服务正常启动
- [ ] 健康检查端点响应正常
- [ ] 数据库连接正常
- [ ] 缓存服务连接正常
- [ ] 外部服务集成正常

#### 监控配置 ✅
- [ ] 应用性能监控(APM)配置
- [ ] 错误日志监控设置
- [ ] 业务指标监控配置
- [ ] 告警规则设置
- [ ] 仪表板配置完成
```

## 🔄 版本发布检查清单

### 1. 版本管理
```markdown
#### 版本信息 ✅
- [ ] 版本号符合SemVer规范
- [ ] Git标签创建正确
- [ ] 分支合并策略遵循
- [ ] 代码冻结时间确认
- [ ] 发布说明准备完成

#### 兼容性检查 ✅
- [ ] 向后兼容性验证
- [ ] API破坏性变更标识
- [ ] 数据库Schema兼容性
- [ ] 配置文件兼容性
- [ ] 客户端SDK兼容性
```

### 2. 发布准备
```markdown
#### 发布流程 ✅
- [ ] 发布计划制定
- [ ] 回滚方案准备
- [ ] 发布时间窗口确认
- [ ] 相关团队通知
- [ ] 用户通知准备

#### 质量保证 ✅
- [ ] 预生产环境验证
- [ ] 性能基准测试
- [ ] 安全扫描最终确认
- [ ] 数据备份完成
- [ ] 紧急联系人确认
```

## 📊 质量指标检查清单

### 1. 代码质量指标
```markdown
#### 静态分析 ✅
- [ ] 代码复杂度 < 10（Cyclomatic Complexity）
- [ ] 重复代码率 < 5%
- [ ] 技术债务评级 A 级
- [ ] 代码覆盖率目标达成
- [ ] 代码审查完成

#### 性能指标 ✅
- [ ] API响应时间达标
- [ ] 内存使用合理（< 512MB）
- [ ] CPU使用率正常（< 70%）
- [ ] 数据库连接池配置合理
- [ ] 缓存命中率 > 80%
```

### 2. 业务质量指标
```markdown
#### 功能质量 ✅
- [ ] 业务需求满足率 100%
- [ ] 用户验收测试通过
- [ ] 关键业务流程验证
- [ ] 数据一致性检查
- [ ] 用户体验验证

#### 可靠性指标 ✅
- [ ] 系统可用性 ≥ 99.9%
- [ ] 错误率 < 0.1%
- [ ] 平均恢复时间 < 5分钟
- [ ] 数据备份恢复验证
- [ ] 灾难恢复演练
```

## 🔍 最终验收检查清单

### Agent交付最终确认
```markdown
#### 交付物清单 ✅
- [ ] 源代码提交完整
- [ ] 测试代码和测试报告
- [ ] 技术文档和API文档
- [ ] 部署脚本和配置文件
- [ ] 用户手册和运维文档

#### 验收标准确认 ✅
- [ ] 所有功能需求已实现
- [ ] 非功能需求已满足
- [ ] 质量标准已达成
- [ ] 安全要求已满足
- [ ] 文档完整性已确认

#### 签收确认 ✅
- [ ] 产品负责人验收签字
- [ ] 技术负责人审核签字
- [ ] 测试负责人确认签字
- [ ] 运维负责人部署确认
- [ ] 项目经理最终确认
```

## 📝 交付报告模板

```markdown
# MPLP Agent交付报告

## 📋 基本信息
- **任务编号**: MPLP-TASK-001
- **负责Agent**: Agent名称
- **交付日期**: 2024-07-09
- **项目版本**: v1.0.0

## ✅ 交付清单确认
- [x] 功能实现完整
- [x] 代码质量达标
- [x] 测试覆盖充分
- [x] 文档同步更新
- [x] 性能指标达成
- [x] 安全检查通过

## 📊 质量指标
| 指标 | 目标值 | 实际值 | 状态 |
|------|--------|--------|------|
| 代码覆盖率 | ≥90% | 94% | ✅ |
| API响应时间 | <100ms | 85ms | ✅ |
| 安全漏洞 | 0 | 0 | ✅ |

## 📝 交付说明
详细描述交付内容、解决的问题、实现的功能等...

## 🔄 后续计划
- 监控系统稳定性
- 收集用户反馈
- 性能优化迭代

---
**交付确认**: 已完成所有检查清单，符合交付标准。
```

---
description: "MPLP交付检查清单规则 - 定义项目交付前的质量检查标准和验收要求"
globs: ["**/*.ts", "**/*.js", "**/*.json", "**/package.json", "**/README.md", "**/docs/**"]
alwaysApply: true
---
 