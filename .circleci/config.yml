version: 2.1

orbs:
  node: circleci/node@5.1.0
  codecov: codecov/codecov@3.2.4

workflows:
  version: 2
  development:
    jobs:
      - test-unit
      - test-integration
      - test-performance
      - build-and-validate
      - security-audit
      - backup-check
      - flaky-test-detection:
          filters:
            branches:
              only: main

  release:
    jobs:
      - test-unit:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test-integration:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-public-release:
          requires:
            - test-unit
            - test-integration
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-to-npm:
          requires:
            - build-public-release
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

  nightly:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: main
    jobs:
      - scheduled-backup
      - test-performance
      - security-audit

  weekly:
    triggers:
      - schedule:
          cron: "0 1 * * 0"
          filters:
            branches:
              only: main
    jobs:
      - test-unit
      - test-integration
      - flaky-test-detection

jobs:
  test-unit:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run unit tests
          command: npm run test:unit
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: coverage

  test-integration:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run integration tests
          command: npm run test:integration
      - store_test_results:
          path: test-results

  test-performance:
    docker:
      - image: cimg/node:18.17
    resource_class: medium+
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run performance tests
          command: npm run test:performance
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: performance-reports

  build-and-validate:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: TypeScript compilation
          command: npm run build
      - run:
          name: Validate schemas
          command: npm run validate:schemas
      - store_artifacts:
          path: dist

  security-audit:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Security audit
          command: npm run security:audit

  backup-check:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Check backup requirements
          command: npm run backup:auto-check
      - run:
          name: Create development backup
          command: |
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              npm run backup:create manual "CircleCI automated backup - $CIRCLE_BUILD_NUM"
            fi

  scheduled-backup:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Create scheduled backup
          command: npm run backup:create daily_scheduled "Daily CircleCI backup"
      - store_artifacts:
          path: .backups

  flaky-test-detection:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests multiple times to detect flaky tests
          command: |
            for i in {1..3}; do
              echo "Test run $i"
              npm test || echo "Test run $i failed"
            done
      - store_test_results:
          path: test-results

  build-public-release:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build public release
          command: |
            VERSION=$(echo $CIRCLE_TAG | sed 's/^v//')
            npm run build:public-release -- $VERSION
      - run:
          name: Validate public release
          command: npm run validate:public-release
      - store_artifacts:
          path: public-release
      - persist_to_workspace:
          root: .
          paths:
            - public-release

  deploy-to-npm:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Authenticate with npm
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish to npm
          command: |
            cd public-release
            npm publish --access public
