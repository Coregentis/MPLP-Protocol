name: Development CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [unit, integration, performance]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npm run typecheck

      - name: Run ${{ matrix.test-type }} tests
        run: |
          case "${{ matrix.test-type }}" in
            "unit")
              npm run test:unit
              ;;
            "integration")
              npm run test:integration
              ;;
            "performance")
              npm run test:performance
              ;;
          esac

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.test-type }}
          path: |
            coverage/
            test-results/
          retention-days: 7

  lint-and-security:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run security audit
        run: npm run security:audit

      - name: Validate schemas
        run: npm run validate:schemas

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: [test, lint-and-security]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Test public release build
        if: github.ref == 'refs/heads/main'
        run: |
          npm run build:public-release -- "0.0.0-test"
          npm run validate:public-release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            public-release/
          retention-days: 7

  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  notify-status:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [test, lint-and-security, build-test]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Check workflow status
        run: |
          if [[ "${{ needs.test.result }}" == "success" && 
                "${{ needs.lint-and-security.result }}" == "success" && 
                "${{ needs.build-test.result }}" == "success" ]]; then
            echo "✅ All checks passed! Ready for release."
          else
            echo "❌ Some checks failed. Please review before release."
            exit 1
          fi
