name: Public Release to Open Source Repository

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.1)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: 'Bug fixes and improvements'
      publish_npm:
        description: 'Publish to npm'
        required: false
        type: boolean
        default: true

env:
  NODE_VERSION: '18'
  PUBLIC_REPO: 'Coregentis/MPLP-Protocol'
  DEV_REPO: 'Coregentis/MPLP-Protocol-Dev'

jobs:
  validate-input:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.validate.outputs.version }}
    steps:
      - name: Validate version format
        id: validate
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "Version must be in format: x.y.z (e.g., 1.0.1)"
            exit 1
          fi
          echo "✅ Version format valid: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-public-release:
    needs: validate-input
    runs-on: ubuntu-latest
    outputs:
      build-success: ${{ steps.build.outputs.success }}
    steps:
      - name: Checkout development repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DEV_REPO }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          echo "✅ Dependencies installed"

      - name: Run development tests
        run: |
          npm run test:all
          echo "✅ All tests passed"

      - name: Build public release
        id: build
        run: |
          echo "🏗️ Building public release v${{ needs.validate-input.outputs.version }}"
          npm run build:public-release -- ${{ needs.validate-input.outputs.version }}
          echo "✅ Public release built successfully"
          echo "success=true" >> $GITHUB_OUTPUT

      - name: Validate public release
        run: |
          echo "🔍 Validating public release"
          npm run validate:public-release
          echo "✅ Public release validation passed"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: public-release-${{ needs.validate-input.outputs.version }}
          path: public-release/
          retention-days: 30

  deploy-to-public-repo:
    needs: [validate-input, build-public-release]
    if: needs.build-public-release.outputs.build-success == 'true'
    runs-on: ubuntu-latest
    outputs:
      deploy-success: ${{ steps.deploy.outputs.success }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: public-release-${{ needs.validate-input.outputs.version }}
          path: public-release/

      - name: Checkout public repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PUBLIC_REPO }}
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}
          path: public-repo

      - name: Deploy to public repository
        id: deploy
        run: |
          echo "🚀 Deploying to public repository"
          
          # 备份当前版本
          cd public-repo
          git tag backup-$(date +%Y%m%d-%H%M%S) || true
          
          # 清理现有内容（保留.git）
          find . -maxdepth 1 ! -name '.git' ! -name '.' -exec rm -rf {} +
          
          # 复制新版本
          cp -r ../public-release/* .
          
          # 配置git
          git config user.name "MPLP Release Bot"
          git config user.email "release@coregentis.com"
          
          # 检查是否有变更
          if git diff --quiet && git diff --cached --quiet; then
            echo "⚠️ No changes detected, skipping commit"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 提交变更
          git add .
          git commit -m "Release v${{ needs.validate-input.outputs.version }}

          ${{ github.event.inputs.release_notes }}
          
          Released from: ${{ env.DEV_REPO }}@${{ github.sha }}
          Release Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          "
          
          # 创建标签
          git tag v${{ needs.validate-input.outputs.version }}
          
          # 推送到远程
          git push origin main
          git push origin v${{ needs.validate-input.outputs.version }}
          
          echo "✅ Successfully deployed to public repository"
          echo "success=true" >> $GITHUB_OUTPUT

  publish-npm:
    needs: [validate-input, deploy-to-public-repo]
    if: needs.deploy-to-public-repo.outputs.deploy-success == 'true' && github.event.inputs.publish_npm == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout public repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PUBLIC_REPO }}
          ref: v${{ needs.validate-input.outputs.version }}
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}

      - name: Setup Node.js for npm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          echo "✅ Dependencies installed for npm publish"

      - name: Build for npm
        run: |
          npm run build
          echo "✅ Built for npm publish"

      - name: Publish to npm
        run: |
          echo "📦 Publishing to npm"
          npm publish --access public
          echo "✅ Successfully published to npm"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    needs: [validate-input, deploy-to-public-repo]
    if: needs.deploy-to-public-repo.outputs.deploy-success == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout public repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PUBLIC_REPO }}
          ref: v${{ needs.validate-input.outputs.version }}
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
        with:
          tag_name: v${{ needs.validate-input.outputs.version }}
          release_name: MPLP v${{ needs.validate-input.outputs.version }}
          body: |
            ## 🚀 MPLP v${{ needs.validate-input.outputs.version }}
            
            ${{ github.event.inputs.release_notes }}
            
            ### 📦 Installation
            ```bash
            npm install mplp@${{ needs.validate-input.outputs.version }}
            ```
            
            ### 📚 Documentation
            - [Getting Started](./docs/getting-started.md)
            - [API Reference](./docs/api-reference.md)
            - [Examples](./examples/)
            
            ### 🔗 Links
            - [npm Package](https://www.npmjs.com/package/mplp)
            - [GitHub Repository](https://github.com/${{ env.PUBLIC_REPO }})
            
            ---
            
            Released from development repository: ${{ env.DEV_REPO }}@${{ github.sha }}
          draft: false
          prerelease: false

  notify-completion:
    needs: [validate-input, build-public-release, deploy-to-public-repo, publish-npm, create-github-release]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify completion
        run: |
          echo "🎉 Release workflow completed!"
          echo "Version: v${{ needs.validate-input.outputs.version }}"
          echo "Build: ${{ needs.build-public-release.outputs.build-success }}"
          echo "Deploy: ${{ needs.deploy-to-public-repo.outputs.deploy-success }}"
          echo "NPM Publish: ${{ github.event.inputs.publish_npm }}"
          
          if [[ "${{ needs.deploy-to-public-repo.outputs.deploy-success }}" == "true" ]]; then
            echo "✅ Release v${{ needs.validate-input.outputs.version }} successfully deployed!"
            echo "🔗 Public Repository: https://github.com/${{ env.PUBLIC_REPO }}"
            if [[ "${{ github.event.inputs.publish_npm }}" == "true" ]]; then
              echo "📦 NPM Package: https://www.npmjs.com/package/mplp"
            fi
          else
            echo "❌ Release deployment failed"
            exit 1
          fi
